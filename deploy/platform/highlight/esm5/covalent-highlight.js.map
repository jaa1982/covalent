{
  "version": 3,
  "file": "covalent-highlight.js",
  "sources": [
    "ng://@covalent/highlight/out/highlight.module.ts",
    "ng://@covalent/highlight/out/highlight.component.ts"
  ],
  "sourcesContent": [
    "import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TdHighlightComponent } from './highlight.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    TdHighlightComponent,\r\n  ],\r\n  exports: [\r\n    TdHighlightComponent,\r\n  ],\r\n})\r\nexport class CovalentHighlightModule {\r\n\r\n}\r\n",
    "import { Component, AfterViewInit, ElementRef, Input, Output, EventEmitter, Renderer2, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\ndeclare const require: any;\r\n/* tslint:disable-next-line */\r\nlet hljs: any = require('highlight.js/lib');\r\n\r\n@Component({\r\n  selector: 'td-highlight',\r\n  styles: [`:host ::ng-deep{display:block;overflow-x:auto;padding:16px}:host ::ng-deep .highlight,:host ::ng-deep code,:host ::ng-deep pre{font-family:Menlo,Monaco,\"Andale Mono\",\"lucida console\",\"Courier New\",monospace}:host ::ng-deep pre{display:block;overflow-x:auto;padding:0;margin:0;background:0 0;font-family:Menlo,Monaco,\"Andale Mono\",\"lucida console\",\"Courier New\",monospace;line-height:1.45;-moz-tab-size:2;-o-tab-size:2;tab-size:2;-webkit-font-smoothing:auto;-webkit-text-size-adjust:none;position:relative;border-radius:2px;font-size:.8rem}:host ::ng-deep code{margin:0;padding:0;overflow-wrap:break-word;white-space:pre-wrap}:host ::ng-deep .highlight{display:block;overflow-wrap:break-word;line-height:1.5;margin:0}`],\r\n  template: `<ng-content></ng-content>`,\r\n})\r\nexport class TdHighlightComponent implements AfterViewInit {\r\n\r\n  private _content: string;\r\n\r\n  /**\r\n   * content?: string\r\n   *\r\n   * Code content to be parsed as highlighted html.\r\n   * Used to load data dynamically.\r\n   *\r\n   * e.g. `.html`, `.ts` , etc.\r\n   */\r\n  @Input('content')\r\n  set content(content: string) {\r\n    this._content = content;\r\n    this._loadContent(this._content);\r\n  }\r\n\r\n  /**\r\n   * lang?: string\r\n   *\r\n   * Language of the code content to be parsed as highlighted html.\r\n   * Defaults to `typescript`\r\n   *\r\n   * e.g. `typescript`, `html` , etc.\r\n   */\r\n  @Input('lang') language: string = 'typescript';\r\n\r\n  /**\r\n   * contentReady?: function\r\n   * Event emitted after the highlight content rendering is finished.\r\n   */\r\n  @Output('contentReady') onContentReady: EventEmitter<undefined> = new EventEmitter<undefined>();\r\n\r\n  constructor(private _renderer: Renderer2,\r\n              private _elementRef: ElementRef,\r\n              private _domSanitizer: DomSanitizer) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.language) {\r\n      throw new Error('Error: language attribute must be defined in TdHighlightComponent.');\r\n    }\r\n    if (!this._content) {\r\n      this._loadContent((<HTMLElement>this._elementRef.nativeElement).textContent);\r\n    }\r\n  }\r\n  /**\r\n   * General method to parse a string of code into HTML Elements and load them into the container\r\n   */\r\n  private _loadContent(code: string): void {\r\n    if (code && code.trim().length > 0) {\r\n      // Clean container\r\n      this._renderer.setProperty(this._elementRef.nativeElement, 'innerHTML', '');\r\n      // Parse html string into actual HTML elements.\r\n      let preElement: HTMLPreElement = this._elementFromString(this._render(code));\r\n    }\r\n    this.onContentReady.emit();\r\n  }\r\n\r\n  private _elementFromString(codeStr: string): HTMLPreElement {\r\n    // Renderer2 doesnt have a parsing method, so we have to sanitize and use [innerHTML]\r\n    // to parse the string into DOM element for now.\r\n    const preElement: HTMLPreElement = this._renderer.createElement('pre');\r\n    this._renderer.appendChild(this._elementRef.nativeElement, preElement);\r\n    const codeElement: HTMLElement = this._renderer.createElement('code');\r\n    this._renderer.appendChild(preElement, codeElement);\r\n    // Set .highlight class into <code> element\r\n    this._renderer.addClass(codeElement, 'highlight');\r\n    codeElement.innerHTML = this._domSanitizer.sanitize(SecurityContext.HTML, codeStr);\r\n    return preElement;\r\n  }\r\n\r\n  private _render(contents: string): string {\r\n    // Trim leading and trailing newlines\r\n    contents = contents.replace(/^(\\s|\\t)*\\n+/g, '')\r\n                       .replace(/(\\s|\\t)*\\n+(\\s|\\t)*$/g, '');\r\n    // Split markup by line characters\r\n    let lines: string[] = contents.split('\\n');\r\n\r\n    // check how much indentation is used by the first actual code line\r\n    let firstLineWhitespace: string = lines[0].match(/^(\\s|\\t)*/)[0];\r\n\r\n    // Remove all indentation spaces so code can be parsed correctly\r\n    let startingWhitespaceRegex: RegExp = new RegExp('^' + firstLineWhitespace);\r\n    lines = lines.map(function(line: string): string {\r\n      return line\r\n        .replace('=\"\"', '') // remove empty values\r\n        .replace(startingWhitespaceRegex, '')\r\n        .replace(/\\s+$/, ''); // remove trailing white spaces\r\n    });\r\n\r\n    let codeToParse: string =  lines.join('\\n')\r\n    .replace(/\\{ \\{/gi, '{{').replace(/\\} \\}/gi, '}}')\r\n    .replace(/&lt;/gi, '<').replace(/&gt;/gi, '>');  // replace with < and > to render HTML in Angular\r\n\r\n    // Parse code with highlight.js depending on language\r\n    let highlightedCode: any = hljs.highlight(this.language, codeToParse, true);\r\n    highlightedCode.value = highlightedCode.value\r\n      .replace(/=<span class=\"hljs-value\">\"\"<\\/span>/gi, '')\r\n      .replace('<head>', '')\r\n      .replace('<head/>', '');\r\n    return highlightedCode.value;\r\n  }\r\n}\r\n"
  ],
  "names": [],
  "mappings": ";;;;ACKA,IAAI,IAAI,GAAQ,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAO5C;IAkCE,8BAAoB,SAAoB,EACpB,WADtB,EAEsB,aAFtB;QAAsB,IAAtB,CAAA,SAA+B,GAAT,SAAS,CAAW;QACpB,IAAtB,CAAA,WAAiC,GAAX,WAAW,CAAjC;QACsB,IAAtB,CAAA,aAAmC,GAAb,aAAa,CAAnC;QAVA,IAAA,CAAA,QAAA,GAAoC,YAAY,CAAhD;QAMA,IAAA,CAAA,cAAA,GAAoE,IAAI,YAAY,EAAa,CAAjG;KAIqD;IAvBrD,sBAAM,yCAAO;aAAb,UAAc,OAAe;YACzB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;;;;IAuBnC,8CAAe,GAAf;QACE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;SACvF;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,EAAc,IAAI,CAAC,WAAW,CAAC,aAAa,GAAE,WAAW,CAAC,CAAC;SAC9E;KACF;IAIO,2CAAY,GAAZ,UAAa,IAAY;QAC/B,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YAElC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,EAAE,EAAE,CAAC,CAAC;YAE5E,IAAI,UAAU,GAAmB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;SAC9E;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;;IAGrB,iDAAkB,GAAlB,UAAmB,OAAe;QAGxC,IAAM,UAAU,GAAmB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;QACvE,IAAM,WAAW,GAAgB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QAClD,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACnF,OAAO,UAAU,CAAC;;IAGZ,sCAAO,GAAP,UAAQ,QAAgB;QAE9B,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC;aAC5B,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;QAEzD,IAAI,KAAK,GAAa,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAG3C,IAAI,mBAAmB,GAAW,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAGjE,IAAI,uBAAuB,GAAW,IAAI,MAAM,CAAC,GAAG,GAAG,mBAAmB,CAAC,CAAC;QAC5E,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,UAAS,IAAY;YACrC,OAAO,IAAI;iBACR,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;iBAClB,OAAO,CAAC,uBAAuB,EAAE,EAAE,CAAC;iBACpC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;SACxB,CAAC,CAAC;QAEH,IAAI,WAAW,GAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;aAC1C,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;aACjD,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAG/C,IAAI,eAAe,GAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;QAC5E,eAAe,CAAC,KAAK,GAAG,eAAe,CAAC,KAAK;aAC1C,OAAO,CAAC,wCAAwC,EAAE,EAAE,CAAC;aACrD,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;aACrB,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;QAC1B,OAAO,eAAe,CAAC,KAAK,CAAC;;;;;IA1GjC,EAAA,IAAA,EAAC,SAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,cAAc;gBACxB,MAAM,EAAE,CAAC,0tBAA8sB,CAAC;gBACxtB,QAAQ,EAAE,2BAA2B;aACtC,EAAD,EAAA;;;IAXA,EAAA,IAAA,EAA4E,SAAS,GAArF;IAAA,EAAA,IAAA,EAAmC,UAAU,GAA7C;IACA,EAAA,IAAA,EAAS,YAAY,GAArB;;;IAuBA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,SAAS,EAAlB,EAAA,EAAA;IAcA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAG,KAAK,EAAR,IAAA,EAAA,CAAS,MAAM,EAAf,EAAA,EAAA;IAMA,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAG,MAAM,EAAT,IAAA,EAAA,CAAU,cAAc,EAAxB,EAAA,EAAA;;AD5CA;IAAA;;;;;IAKA,EAAA,IAAA,EAAC,QAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,OAAO,EAAE;oBACP,YAAY;iBACb;gBACD,YAAY,EAAE;oBACZ,oBAAoB;iBACrB;gBACD,OAAO,EAAE;oBACP,oBAAoB;iBACrB;aACF,EAAD,EAAA;;;;;;"
}
