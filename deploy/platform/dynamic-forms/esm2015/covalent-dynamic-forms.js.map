{
  "version": 3,
  "file": "covalent-dynamic-forms.js",
  "sources": [
    "ng://@covalent/dynamic-forms/out/dynamic-forms.module.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-forms.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-element.component.ts",
    "ng://@covalent/dynamic-forms/out/services/dynamic-forms.service.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-datepicker/dynamic-datepicker.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-select/dynamic-select.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-slider/dynamic-slider.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-checkbox/dynamic-checkbox.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-textarea/dynamic-textarea.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-file-input/dynamic-file-input.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-input/dynamic-input.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/abstract-control-value-accesor.ts"
  ],
  "sourcesContent": [
    "import { NgModule, Type } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n\r\nimport { CovalentCommonModule } from '@covalent/core/common';\r\nimport { CovalentFileModule } from '@covalent/core/file';\r\n\r\nimport { TdDynamicFormsComponent } from './dynamic-forms.component';\r\nimport { TdDynamicElementComponent, TdDynamicElementDirective, TdDynamicFormsErrorTemplate } from './dynamic-element.component';\r\nimport {  DYNAMIC_FORMS_PROVIDER } from './services/dynamic-forms.service';\r\n\r\nimport { TdDynamicInputComponent } from './dynamic-elements/dynamic-input/dynamic-input.component';\r\nimport { TdDynamicFileInputComponent } from './dynamic-elements/dynamic-file-input/dynamic-file-input.component';\r\nimport { TdDynamicTextareaComponent } from './dynamic-elements/dynamic-textarea/dynamic-textarea.component';\r\nimport {\r\n  TdDynamicSlideToggleComponent,\r\n} from './dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component';\r\nimport {\r\n  TdDynamicCheckboxComponent,\r\n} from './dynamic-elements/dynamic-checkbox/dynamic-checkbox.component';\r\nimport { TdDynamicSliderComponent } from './dynamic-elements/dynamic-slider/dynamic-slider.component';\r\nimport { TdDynamicSelectComponent } from './dynamic-elements/dynamic-select/dynamic-select.component';\r\nimport { TdDynamicDatepickerComponent } from './dynamic-elements/dynamic-datepicker/dynamic-datepicker.component';\r\n\r\nconst TD_DYNAMIC_FORMS: Type<any>[] = [\r\n  TdDynamicFormsComponent,\r\n  TdDynamicElementComponent,\r\n  TdDynamicElementDirective,\r\n  TdDynamicFormsErrorTemplate,\r\n];\r\n\r\nconst TD_DYNAMIC_FORMS_ENTRY_COMPONENTS: Type<any>[] = [\r\n  TdDynamicInputComponent,\r\n  TdDynamicFileInputComponent,\r\n  TdDynamicTextareaComponent,\r\n  TdDynamicSlideToggleComponent,\r\n  TdDynamicCheckboxComponent,\r\n  TdDynamicSliderComponent,\r\n  TdDynamicSelectComponent,\r\n  TdDynamicDatepickerComponent,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TD_DYNAMIC_FORMS,\r\n    TD_DYNAMIC_FORMS_ENTRY_COMPONENTS,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    CovalentCommonModule,\r\n    CovalentFileModule,\r\n  ],\r\n  exports: [\r\n    TD_DYNAMIC_FORMS,\r\n    TD_DYNAMIC_FORMS_ENTRY_COMPONENTS,\r\n  ],\r\n  providers: [\r\n    DYNAMIC_FORMS_PROVIDER,\r\n  ],\r\n  entryComponents: [ TD_DYNAMIC_FORMS_ENTRY_COMPONENTS ],\r\n})\r\nexport class CovalentDynamicFormsModule {\r\n\r\n}\r\n",
    "import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, ContentChildren,\r\n         TemplateRef, QueryList, AfterContentInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\r\n\r\nimport { TdDynamicFormsService, ITdDynamicElementConfig } from './services/dynamic-forms.service';\r\nimport { TdDynamicFormsErrorTemplate } from './dynamic-element.component';\r\n\r\nimport { timer } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'td-dynamic-forms',\r\n  template: `<form [formGroup]=\"dynamicForm\" novalidate>\r\n  <div class=\"td-dynamic-form-wrapper\">\r\n    <ng-template let-element ngFor [ngForOf]=\"elements\">\r\n      <div class=\"td-dynamic-element-wrapper\"\r\n          [style.max-width.%]=\"element.flex ? element.flex : 100\"\r\n          [style.flex]=\"'1 1 ' + (element.flex ? element.flex : 100) + '%'\"\r\n          [style.-ms-flex]=\"'1 1 ' + (element.flex ? element.flex : 100) + '%'\"\r\n          [style.-webkit-box-flex]=\"1\">\r\n        <td-dynamic-element\r\n          #dynamicElement\r\n          *ngIf=\"dynamicForm.controls[element.name]\"\r\n          [formControlName]=\"element.name\"\r\n          [dynamicControl]=\"dynamicForm.controls[element.name]\"\r\n          [id]=\"element.name\"\r\n          [label]=\"element.label || element.name\"\r\n          [type]=\"element.type\"\r\n          [required]=\"element.required\"\r\n          [min]=\"element.min\"\r\n          [max]=\"element.max\"\r\n          [minLength]=\"element.minLength\"\r\n          [maxLength]=\"element.maxLength\"\r\n          [selections]=\"element.selections\">\r\n        </td-dynamic-element>\r\n        <div class=\"tc-red-600\"\r\n             [style.font-size.%]=\"'70'\"\r\n             [style.position]=\"'absolute'\"\r\n             [style.bottom.px]=\"'10'\"\r\n              *ngIf=\"getErrorTemplateRef(element.name) && dynamicForm.controls[element.name]?.errors\">\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"getErrorTemplateRef(element.name)\"\r\n            [ngTemplateOutletContext]=\"{control: dynamicForm.controls[element.name], errors: dynamicForm.controls[element.name]?.errors}\">\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n  <ng-content></ng-content>\r\n</form>\r\n`,\r\n  styles: [`.td-dynamic-form-wrapper{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}.td-dynamic-form-wrapper .td-dynamic-element-wrapper{max-height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;padding:4px 4px 8px}`],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TdDynamicFormsComponent implements AfterContentInit {\r\n\r\n  private _renderedElements: ITdDynamicElementConfig[] = [];\r\n  private _elements: ITdDynamicElementConfig[];\r\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\r\n  @ContentChildren(TdDynamicFormsErrorTemplate) _errorTemplates: QueryList<TdDynamicFormsErrorTemplate>;\r\n  dynamicForm: FormGroup;\r\n \r\n  /**\r\n   * elements: ITdDynamicElementConfig[]\r\n   * JS Object that will render the elements depending on its config.\r\n   * [name] property is required.\r\n   */\r\n  @Input('elements')\r\n  set elements(elements: ITdDynamicElementConfig[]) {\r\n    if (elements) {\r\n      this._elements = elements;\r\n    } else {\r\n      this._elements = [];\r\n    }\r\n    this._rerenderElements();\r\n  }\r\n  get elements(): ITdDynamicElementConfig[] {\r\n    return this._renderedElements;\r\n  }\r\n\r\n  /**\r\n   * Getter property for dynamic [FormGroup].\r\n   */\r\n  get form(): FormGroup {\r\n    return this.dynamicForm;\r\n  }\r\n\r\n  /**\r\n   * Getter property for [valid] of dynamic [FormGroup].\r\n   */\r\n  get valid(): boolean {\r\n    if (this.dynamicForm) {\r\n      return this.dynamicForm.valid;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Getter property for [value] of dynamic [FormGroup].\r\n   */\r\n  get value(): any {\r\n    if (this.dynamicForm) {\r\n      return this.dynamicForm.value;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Getter property for [errors] of dynamic [FormGroup].\r\n   */\r\n  get errors(): { [name: string]: any } {\r\n    if (this.dynamicForm) {\r\n      let errors: {[name: string]: any} = {};\r\n      for (let name in this.dynamicForm.controls) {\r\n        errors[name] = this.dynamicForm.controls[name].errors;\r\n      }\r\n      return errors;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Getter property for [controls] of dynamic [FormGroup].\r\n   */\r\n  get controls(): {[key: string]: AbstractControl} {\r\n    if (this.dynamicForm) {\r\n      return this.dynamicForm.controls;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  constructor(private _formBuilder: FormBuilder,\r\n              private _dynamicFormsService: TdDynamicFormsService,\r\n              private _changeDetectorRef: ChangeDetectorRef) {\r\n    this.dynamicForm = this._formBuilder.group({});\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._updateErrorTemplates();\r\n  }\r\n\r\n  /**\r\n   * Refreshes the form and rerenders all validator/element modifications.\r\n   */\r\n  refresh(): void {\r\n    this._rerenderElements();\r\n    this._updateErrorTemplates();\r\n  }\r\n\r\n  /**\r\n   * Getter method for error template references\r\n   */\r\n  getErrorTemplateRef(name: string): TemplateRef<any> {\r\n    return this._templateMap.get(name);\r\n  }\r\n\r\n  /**\r\n   * Loads error templates and sets them in a map for faster access.\r\n   */\r\n  private _updateErrorTemplates(): void {\r\n    this._templateMap = new Map<string, TemplateRef<any>>();\r\n    for (let i: number = 0; i < this._errorTemplates.toArray().length; i++) {\r\n      this._templateMap.set(\r\n        this._errorTemplates.toArray()[i].tdDynamicFormsError,\r\n        this._errorTemplates.toArray()[i].templateRef,\r\n      );\r\n    }\r\n  }\r\n\r\n  private _rerenderElements(): void {\r\n    this._clearRemovedElements();\r\n    this._renderedElements = [];\r\n    let duplicates: string[] = [];\r\n    this._elements.forEach((elem: ITdDynamicElementConfig) => {\r\n      this._dynamicFormsService.validateDynamicElementName(elem.name);\r\n      if (duplicates.indexOf(elem.name) > -1) {\r\n        throw new Error(`Dynamic element name: \"${elem.name}\" is duplicated`);\r\n      }\r\n      duplicates.push(elem.name);\r\n      if (!this.dynamicForm.get(elem.name)) {\r\n        this.dynamicForm.addControl(elem.name, this._dynamicFormsService.createFormControl(elem));\r\n      } else {\r\n        this.dynamicForm.get(elem.name).setValidators(this._dynamicFormsService.createValidators(elem));\r\n      }\r\n      // copy objects so they are only changes when calling this method\r\n      this._renderedElements.push(Object.assign({}, elem));\r\n    });\r\n    // call a change detection since the whole form might change\r\n    this._changeDetectorRef.detectChanges();\r\n    timer().toPromise().then(() => {\r\n      // call a markForCheck so elements are rendered correctly in OnPush\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  private _clearRemovedElements(): void {\r\n    for (let i: number = 0; i < this._renderedElements.length; i++) {\r\n      for (let j: number = 0; j < this._elements.length; j++) {\r\n        // check if the name of the element is still there removed\r\n        if (this._renderedElements[i].name === this._elements[j].name) {\r\n          delete this._renderedElements[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // remove elements that were removed from the array\r\n    this._renderedElements.forEach((elem: ITdDynamicElementConfig) => {\r\n      this.dynamicForm.removeControl(elem.name);\r\n    });\r\n  }\r\n}\r\n",
    "import { Component, Directive, Input, HostBinding, OnInit, SimpleChanges, OnChanges, TemplateRef } from '@angular/core';\r\nimport { ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { ComponentFactoryResolver, ComponentRef, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\r\n\r\nimport { TdDynamicElement, TdDynamicType, TdDynamicFormsService } from './services/dynamic-forms.service';\r\nimport { AbstractControlValueAccessor } from './dynamic-elements/abstract-control-value-accesor';\r\n\r\nconst noop: any = () => {\r\n  // empty method\r\n};\r\n\r\nexport const ELEMENT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicElementComponent),\r\n  multi: true,\r\n};\r\n\r\n@Directive({selector: '[tdDynamicFormsError]ng-template'})\r\nexport class TdDynamicFormsErrorTemplate extends TemplatePortalDirective {\r\n\r\n  @Input() tdDynamicFormsError: string;\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[tdDynamicContainer]',\r\n})\r\nexport class TdDynamicElementDirective {\r\n  constructor(public viewContainer: ViewContainerRef) { }\r\n}\r\n\r\n@Component({\r\n  providers: [ TdDynamicFormsService, ELEMENT_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-element',\r\n  template: '<div tdDynamicContainer></div>',\r\n})\r\nexport class TdDynamicElementComponent extends AbstractControlValueAccessor\r\n                                       implements ControlValueAccessor, OnInit, OnChanges {\r\n\r\n  private _instance: any;\r\n\r\n  set value(v: any) {\r\n    if (v !== this._value) {\r\n      this._value = v;\r\n      this.onChange(v);\r\n      this.onModelChange(v);\r\n    }\r\n  }\r\n  get value(): any {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * Sets form control of the element.\r\n   */\r\n  @Input() dynamicControl: FormControl;\r\n\r\n  /**\r\n   * Sets label to be displayed.\r\n   */\r\n  @Input() label: string = '';\r\n\r\n  /**\r\n   * Sets type or element of element to be rendered.\r\n   * Throws error if does not exist or no supported.\r\n   */\r\n  @Input() type: TdDynamicElement | TdDynamicType = undefined;\r\n\r\n  /**\r\n   * Sets required validation checkup (if supported by element).\r\n   */\r\n  @Input() required: boolean = undefined;\r\n\r\n  /**\r\n   * Sets min validation checkup (if supported by element).\r\n   */\r\n  @Input() min: number = undefined;\r\n\r\n  /**\r\n   * Sets max validation checkup (if supported by element).\r\n   */\r\n  @Input() max: number = undefined;\r\n\r\n  /**\r\n   * Sets minLength validation checkup (if supported by element).\r\n   */\r\n  @Input() minLength: number = undefined;\r\n\r\n  /**\r\n   * Sets maxLength validation checkup (if supported by element).\r\n   */\r\n  @Input() maxLength: number = undefined;\r\n\r\n  /**\r\n   * Sets selections for array elements (if supported by element).\r\n   */\r\n  @Input() selections: any[] = undefined;\r\n\r\n  @ViewChild(TdDynamicElementDirective) childElement: TdDynamicElementDirective;\r\n\r\n  @HostBinding('attr.max')\r\n  get maxAttr(): any {\r\n    return this.max;\r\n  }\r\n\r\n  @HostBinding('attr.min')\r\n  get minAttr(): any {\r\n    return this.min;\r\n  }\r\n\r\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\r\n              private _dynamicFormsService: TdDynamicFormsService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let ref: ComponentRef<any> = this._componentFactoryResolver.\r\n      resolveComponentFactory(this._dynamicFormsService.getDynamicElement(this.type))\r\n      .create(this.childElement.viewContainer.injector);\r\n    this.childElement.viewContainer.insert(ref.hostView);\r\n    this._instance = ref.instance;\r\n    this._instance.control = this.dynamicControl;\r\n    this._instance.label = this.label;\r\n    this._instance.type = this.type;\r\n    this._instance.value = this.value;\r\n    this._instance.required = this.required;\r\n    this._instance.min = this.min;\r\n    this._instance.max = this.max;\r\n    this._instance.minLength = this.minLength;\r\n    this._instance.maxLength = this.maxLength;\r\n    this._instance.selections = this.selections;\r\n    this._instance.registerOnChange((value: any) => {\r\n      this.value = value;\r\n    });\r\n    this.registerOnModelChange((value: any) => {\r\n      // fix to check if value is NaN (type=number)\r\n      if (!Number.isNaN(value)) {\r\n        this._instance.value = value;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reassign any inputs that have changed\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this._instance) {\r\n      for (let prop in changes) {\r\n        this._instance[prop] = changes[prop].currentValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  registerOnModelChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  onModelChange = (_: any) => noop;\r\n}\r\n",
    "import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\r\nimport { Validators, ValidatorFn, FormControl, AbstractControl } from '@angular/forms';\r\n\r\nimport { TdDynamicInputComponent } from '../dynamic-elements/dynamic-input/dynamic-input.component';\r\nimport { TdDynamicFileInputComponent } from '../dynamic-elements/dynamic-file-input/dynamic-file-input.component';\r\nimport { TdDynamicTextareaComponent } from '../dynamic-elements/dynamic-textarea/dynamic-textarea.component';\r\nimport { TdDynamicSlideToggleComponent } from '../dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component';\r\nimport { TdDynamicCheckboxComponent } from '../dynamic-elements/dynamic-checkbox/dynamic-checkbox.component';\r\nimport { TdDynamicSliderComponent } from '../dynamic-elements/dynamic-slider/dynamic-slider.component';\r\nimport { TdDynamicSelectComponent } from '../dynamic-elements/dynamic-select/dynamic-select.component';\r\nimport { TdDynamicDatepickerComponent } from '../dynamic-elements/dynamic-datepicker/dynamic-datepicker.component';\r\n\r\nexport enum TdDynamicType {\r\n  Text = 'text',\r\n  Boolean = 'boolean',\r\n  Number = 'number',\r\n  Array = 'array',\r\n  Date = 'date',\r\n}\r\n\r\nexport enum TdDynamicElement {\r\n  Input = 'input',\r\n  Datepicker = 'datepicker',\r\n  Password = 'password',\r\n  Textarea = 'textarea',\r\n  Slider = 'slider',\r\n  SlideToggle = 'slide-toggle',\r\n  Checkbox = 'checkbox',\r\n  Select = 'select',\r\n  FileInput = 'file-input',\r\n}\r\n\r\nexport interface ITdDynamicElementValidator {\r\n  validator: ValidatorFn;\r\n}\r\n\r\nexport interface ITdDynamicElementConfig {\r\n  label?: string;\r\n  name: string;\r\n  type: TdDynamicType | TdDynamicElement;\r\n  required?: boolean;\r\n  min?: any;\r\n  max?: any;\r\n  minLength?: any;\r\n  maxLength?: any;\r\n  selections?: string[] | { value: any, label: string }[];\r\n  default?: any;\r\n  flex?: number;\r\n  validators?: ITdDynamicElementValidator[];\r\n}\r\n\r\nexport const DYNAMIC_ELEMENT_NAME_REGEX: RegExp = /^[a-zA-Z]+[a-zA-Z0-9-_]*$/;\r\n\r\n@Injectable()\r\nexport class TdDynamicFormsService {\r\n\r\n  /**\r\n   * Method to validate if the [name] is a proper element name.\r\n   * Throws error if name is not valid.\r\n   */\r\n  validateDynamicElementName(name: string): void {\r\n    if (!DYNAMIC_ELEMENT_NAME_REGEX.test(name)) {\r\n      throw new Error(`Dynamic element name: \"${name}\" is not valid.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets component to be rendered depending on [TdDynamicElement | TdDynamicType]\r\n   * Throws error if it does not exists or not supported.\r\n   */\r\n  getDynamicElement(element: TdDynamicElement | TdDynamicType): any {\r\n    switch (element) {\r\n      case TdDynamicType.Text:\r\n      case TdDynamicType.Number:\r\n      case TdDynamicElement.Input:\r\n      case TdDynamicElement.Password:\r\n        return TdDynamicInputComponent;\r\n      case TdDynamicElement.Textarea:\r\n        return TdDynamicTextareaComponent;\r\n      case TdDynamicType.Boolean:\r\n      case TdDynamicElement.SlideToggle:\r\n        return TdDynamicSlideToggleComponent;\r\n      case TdDynamicElement.Checkbox:\r\n        return TdDynamicCheckboxComponent;\r\n      case TdDynamicElement.Slider:\r\n        return TdDynamicSliderComponent;\r\n      case TdDynamicType.Array:\r\n      case TdDynamicElement.Select:\r\n        return TdDynamicSelectComponent;\r\n      case TdDynamicElement.FileInput:\r\n        return TdDynamicFileInputComponent;\r\n      case TdDynamicElement.Datepicker:\r\n      case TdDynamicType.Date:\r\n        return TdDynamicDatepickerComponent;\r\n      default:\r\n        throw new Error(`Error: type ${element} does not exist or not supported.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates form control for element depending [ITdDynamicElementConfig] properties.\r\n   */\r\n  createFormControl(config: ITdDynamicElementConfig): FormControl {\r\n    let validator: ValidatorFn = this.createValidators(config);\r\n    return new FormControl(config.default, validator);\r\n  }\r\n\r\n  /**\r\n   * Creates form validationdepending [ITdDynamicElementConfig] properties.\r\n   */\r\n  createValidators(config: ITdDynamicElementConfig): ValidatorFn {\r\n    let validator: ValidatorFn;\r\n    if (config.required) {\r\n      validator = Validators.required;\r\n    }\r\n    if (config.max || config.max === 0) {\r\n      validator = Validators.compose([validator, Validators.max(parseFloat(config.max))]);\r\n    }\r\n    if (config.min || config.min === 0) {\r\n      validator = Validators.compose([validator, Validators.min(parseFloat(config.min))]);\r\n    }\r\n    if (config.maxLength || config.maxLength === 0) {\r\n      validator = Validators.compose([validator, Validators.maxLength(parseFloat(config.maxLength))]);\r\n    }\r\n    if (config.minLength || config.minLength === 0) {\r\n      validator = Validators.compose([validator, Validators.minLength(parseFloat(config.minLength))]);\r\n    }\r\n    // Add provided custom validators to the validator function\r\n    if (config.validators) {\r\n      config.validators.forEach((validatorConfig: ITdDynamicElementValidator) => {\r\n        validator = Validators.compose([validator, validatorConfig.validator]);\r\n      });\r\n    }\r\n    return validator;\r\n  }\r\n}\r\n\r\nexport function DYNAMIC_FORMS_PROVIDER_FACTORY(\r\n  parent: TdDynamicFormsService): TdDynamicFormsService {\r\n  return parent || new TdDynamicFormsService();\r\n}\r\n\r\nexport const DYNAMIC_FORMS_PROVIDER: Provider = {\r\n  // If there is already a service available, use that. Otherwise, provide a new one.\r\n  provide: TdDynamicFormsService,\r\n  deps: [[new Optional(), new SkipSelf(), TdDynamicFormsService]],\r\n  useFactory: DYNAMIC_FORMS_PROVIDER_FACTORY,\r\n};\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const DATEPICKER_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicDatepickerComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [DATEPICKER_INPUT_CONTROL_VALUE_ACCESSOR],\r\n  selector: 'td-dynamic-datepicker',\r\n  styles: [`.td-dynamic-datepicker-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-datepicker-wrapper .td-dynamic-datepicker-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}`],\r\n  template: `<div class=\"td-dynamic-datepicker-wrapper\">\r\n  <mat-form-field class=\"td-dynamic-datepicker-field\">\r\n    <input #elementInput\r\n            matInput\r\n            [matDatepicker]=\"dynamicDatePicker\"\r\n            [(ngModel)]=\"value\"\r\n            [formControl]=\"control\"\r\n            [placeholder]=\"label\"\r\n            [required]=\"required\"\r\n            [min]=\"min\"\r\n            [max]=\"max\"/>\r\n    <mat-datepicker-toggle matSuffix [for]=\"dynamicDatePicker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #dynamicDatePicker></mat-datepicker>\r\n  </mat-form-field>\r\n</div>\r\n`,\r\n})\r\nexport class TdDynamicDatepickerComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  type: string = undefined;\r\n\r\n  required: boolean = undefined;\r\n\r\n  min: number = undefined;\r\n\r\n  max: number = undefined;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const SELECT_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicSelectComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ SELECT_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-select',\r\n  styles: [`.td-dynamic-select-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-select-wrapper .td-dynamic-select-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}`],\r\n  template: `<div class=\"td-dynamic-select-wrapper\">\r\n  <mat-form-field class=\"td-dynamic-select-field\">\r\n    <mat-select [(ngModel)]=\"value\"\r\n              [placeholder]=\"label\"\r\n              [required]=\"required\">\r\n      <mat-option *ngFor=\"let selection of selections\" [value]=\"selection.value || selection\">{{selection.label || selection}}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n`,\r\n})\r\nexport class TdDynamicSelectComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = undefined;\r\n\r\n  selections: any[] = undefined;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const SLIDER_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicSliderComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ SLIDER_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-slider',\r\n  styles: [`.td-dynamic-slider-field{position:relative;margin-top:8px;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-slider-field .td-dynamic-slider{-webkit-box-flex:1;-ms-flex:1;flex:1}`],\r\n  template: `<div class=\"td-dynamic-slider-wrapper\">\r\n  <div class=\"mat-form-field-placeholder-wrapper mat-form-field-can-float mat-form-field-should-float\"\r\n       [class.mat-focused]=\"slider._isActive\">\r\n    <label class=\"mat-form-field-placeholder mat-float mat-form-field-float td-slider-label\"> {{label}} <span *ngIf=\"required\" class=\"mat-placeholder-required\">*</span></label>\r\n  </div>\r\n  <div class=\"td-dynamic-slider-field\">\r\n    <mat-slider #slider\r\n               class=\"td-dynamic-slider\"\r\n               [(ngModel)]=\"value\"\r\n                [min]=\"min\"\r\n                [max]=\"max\"\r\n                thumbLabel\r\n                tickInterval=\"auto\"\r\n                [required]=\"required\">\r\n    </mat-slider>\r\n  </div>  \r\n</div>`,\r\n})\r\nexport class TdDynamicSliderComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = undefined;\r\n\r\n  min: number = undefined;\r\n\r\n  max: number = undefined;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const CHECKBOX_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicCheckboxComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ CHECKBOX_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-checkbox',\r\n  styles: [``],\r\n  template: `<div class=\"td-dynamic-checkbox-wrapper\">\r\n  <mat-checkbox [(ngModel)]=\"value\"\r\n                [required]=\"required\">\r\n    {{label}}\r\n  </mat-checkbox>\r\n</div>`,\r\n})\r\nexport class TdDynamicCheckboxComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = false;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const SLIDE_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicSlideToggleComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ SLIDE_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-slide-toggle',\r\n  styles: [``],\r\n  template: `<div class=\"td-dynamic-slide-toggle-wrapper\">\r\n  <mat-slide-toggle [(ngModel)]=\"value\"\r\n                   [required]=\"required\">\r\n    {{label}}\r\n  </mat-slide-toggle>\r\n</div>`,\r\n})\r\nexport class TdDynamicSlideToggleComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = false;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const TEXTAREA_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicTextareaComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ TEXTAREA_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-textarea',\r\n  styles: [`.td-dynamic-textarea-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-textarea-wrapper .td-dynamic-textarea-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}`],\r\n  template: `<div class=\"td-dynamic-textarea-wrapper\">\r\n  <mat-form-field class=\"td-dynamic-textarea-field\">\r\n    <textarea #elementInput\r\n            matInput\r\n            [(ngModel)]=\"value\"\r\n            [placeholder]=\"label\"\r\n            [required]=\"required\"\r\n            rows=\"4\">\r\n    </textarea>\r\n  </mat-form-field>\r\n</div>`,\r\n})\r\nexport class TdDynamicTextareaComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = undefined;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicFileInputComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-file-input',\r\n  styles: [`.td-dynamic-file-input-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-file-input-wrapper .td-dynamic-file-input-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}.td-file-input{margin-left:10px}`],\r\n  template: `<div class=\"td-dynamic-file-input-wrapper\">\r\n  <mat-form-field tdFileDrop\r\n                  class=\"td-dynamic-file-input-field\"\r\n                  floatLabel=\"never\"\r\n                  (fileDrop)=\"value = $event\"\r\n                  (click)=\"fileInput.inputElement.click()\"\r\n                  (keyup.enter)=\"fileInput.inputElement.click()\"\r\n                  (keyup.delete)=\"fileInput.clear()\"\r\n                  (keyup.backspace)=\"fileInput.clear()\">\r\n    <input matInput\r\n          [value]=\"value?.name\"\r\n          [placeholder]=\"label\"\r\n          readonly/>\r\n  </mat-form-field>\r\n  <button mat-icon-button *ngIf=\"value\" (click)=\"fileInput.clear()\" (keyup.enter)=\"fileInput.clear()\">\r\n    <mat-icon>cancel</mat-icon>\r\n  </button>\r\n  <td-file-input class=\"td-file-input\" #fileInput [(ngModel)]=\"value\">\r\n    <mat-icon>folder</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </td-file-input>\r\n</div>`,\r\n})\r\nexport class TdDynamicFileInputComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  required: boolean = undefined;\r\n\r\n  label: string = '';\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const INPUT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicInputComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ INPUT_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-input',\r\n  styles: [`.td-dynamic-input-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-input-wrapper .td-dynamic-input-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}`],\r\n  template: `<div class=\"td-dynamic-input-wrapper\">\r\n  <mat-form-field class=\"td-dynamic-input-field\">\r\n    <input #elementInput\r\n            matInput\r\n            [(ngModel)]=\"value\"\r\n            [formControl]=\"control\"\r\n            [placeholder]=\"label\"\r\n            [type]=\"type\"\r\n            [required]=\"required\"\r\n            [attr.min]=\"min\"\r\n            [attr.max]=\"max\"\r\n            [attr.minLength]=\"minLength\"\r\n            [attr.maxLength]=\"maxLength\"/>\r\n  </mat-form-field>\r\n</div>\r\n`,\r\n})\r\nexport class TdDynamicInputComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  type: string = undefined;\r\n\r\n  required: boolean = undefined;\r\n\r\n  min: number = undefined;\r\n\r\n  max: number = undefined;\r\n\r\n  minLength: number = undefined;\r\n\r\n  maxLength: number = undefined;\r\n\r\n}\r\n",
    "import { ControlValueAccessor } from '@angular/forms';\r\n\r\nconst noop: any = () => {\r\n  // empty method\r\n};\r\n\r\nexport abstract class AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  protected _value: any = undefined;\r\n\r\n  // get/set accessor (needed for ControlValueAccessor)\r\n  get value(): any { return this._value; }\r\n  set value(v: any) {\r\n    if (v !== this._value) {\r\n      this._value = v;\r\n      this.onChange(v);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  onChange = (_: any) => noop;\r\n  onTouched = () => noop;\r\n}\r\n"
  ],
  "names": [
    "noop"
  ],
  "mappings": "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"
}
