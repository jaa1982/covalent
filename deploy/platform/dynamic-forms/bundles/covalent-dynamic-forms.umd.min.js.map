{
  "version": 3,
  "file": "covalent-dynamic-forms.umd.min.js",
  "sources": [
    "ng://@covalent/dynamic-forms/node_modules/tslib/tslib.es6.js",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/abstract-control-value-accesor.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-input/dynamic-input.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-file-input/dynamic-file-input.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-textarea/dynamic-textarea.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-checkbox/dynamic-checkbox.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-slider/dynamic-slider.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-select/dynamic-select.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-datepicker/dynamic-datepicker.component.ts",
    "ng://@covalent/dynamic-forms/out/services/dynamic-forms.service.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-element.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-forms.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-forms.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { ControlValueAccessor } from '@angular/forms';\r\n\r\nconst noop: any = () => {\r\n  // empty method\r\n};\r\n\r\nexport abstract class AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  protected _value: any = undefined;\r\n\r\n  // get/set accessor (needed for ControlValueAccessor)\r\n  get value(): any { return this._value; }\r\n  set value(v: any) {\r\n    if (v !== this._value) {\r\n      this._value = v;\r\n      this.onChange(v);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  onChange = (_: any) => noop;\r\n  onTouched = () => noop;\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const INPUT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicInputComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ INPUT_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-input',\r\n  styles: [`.td-dynamic-input-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-input-wrapper .td-dynamic-input-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}`],\r\n  template: `<div class=\"td-dynamic-input-wrapper\">\r\n  <mat-form-field class=\"td-dynamic-input-field\">\r\n    <input #elementInput\r\n            matInput\r\n            [(ngModel)]=\"value\"\r\n            [formControl]=\"control\"\r\n            [placeholder]=\"label\"\r\n            [type]=\"type\"\r\n            [required]=\"required\"\r\n            [attr.min]=\"min\"\r\n            [attr.max]=\"max\"\r\n            [attr.minLength]=\"minLength\"\r\n            [attr.maxLength]=\"maxLength\"/>\r\n  </mat-form-field>\r\n</div>\r\n`,\r\n})\r\nexport class TdDynamicInputComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  type: string = undefined;\r\n\r\n  required: boolean = undefined;\r\n\r\n  min: number = undefined;\r\n\r\n  max: number = undefined;\r\n\r\n  minLength: number = undefined;\r\n\r\n  maxLength: number = undefined;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicFileInputComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-file-input',\r\n  styles: [`.td-dynamic-file-input-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-file-input-wrapper .td-dynamic-file-input-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}.td-file-input{margin-left:10px}`],\r\n  template: `<div class=\"td-dynamic-file-input-wrapper\">\r\n  <mat-form-field tdFileDrop\r\n                  class=\"td-dynamic-file-input-field\"\r\n                  floatLabel=\"never\"\r\n                  (fileDrop)=\"value = $event\"\r\n                  (click)=\"fileInput.inputElement.click()\"\r\n                  (keyup.enter)=\"fileInput.inputElement.click()\"\r\n                  (keyup.delete)=\"fileInput.clear()\"\r\n                  (keyup.backspace)=\"fileInput.clear()\">\r\n    <input matInput\r\n          [value]=\"value?.name\"\r\n          [placeholder]=\"label\"\r\n          readonly/>\r\n  </mat-form-field>\r\n  <button mat-icon-button *ngIf=\"value\" (click)=\"fileInput.clear()\" (keyup.enter)=\"fileInput.clear()\">\r\n    <mat-icon>cancel</mat-icon>\r\n  </button>\r\n  <td-file-input class=\"td-file-input\" #fileInput [(ngModel)]=\"value\">\r\n    <mat-icon>folder</mat-icon>\r\n    <span>{{ label }}</span>\r\n  </td-file-input>\r\n</div>`,\r\n})\r\nexport class TdDynamicFileInputComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  required: boolean = undefined;\r\n\r\n  label: string = '';\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const TEXTAREA_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicTextareaComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ TEXTAREA_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-textarea',\r\n  styles: [`.td-dynamic-textarea-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-textarea-wrapper .td-dynamic-textarea-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}`],\r\n  template: `<div class=\"td-dynamic-textarea-wrapper\">\r\n  <mat-form-field class=\"td-dynamic-textarea-field\">\r\n    <textarea #elementInput\r\n            matInput\r\n            [(ngModel)]=\"value\"\r\n            [placeholder]=\"label\"\r\n            [required]=\"required\"\r\n            rows=\"4\">\r\n    </textarea>\r\n  </mat-form-field>\r\n</div>`,\r\n})\r\nexport class TdDynamicTextareaComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = undefined;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const SLIDE_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicSlideToggleComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ SLIDE_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-slide-toggle',\r\n  styles: [``],\r\n  template: `<div class=\"td-dynamic-slide-toggle-wrapper\">\r\n  <mat-slide-toggle [(ngModel)]=\"value\"\r\n                   [required]=\"required\">\r\n    {{label}}\r\n  </mat-slide-toggle>\r\n</div>`,\r\n})\r\nexport class TdDynamicSlideToggleComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = false;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const CHECKBOX_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicCheckboxComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ CHECKBOX_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-checkbox',\r\n  styles: [``],\r\n  template: `<div class=\"td-dynamic-checkbox-wrapper\">\r\n  <mat-checkbox [(ngModel)]=\"value\"\r\n                [required]=\"required\">\r\n    {{label}}\r\n  </mat-checkbox>\r\n</div>`,\r\n})\r\nexport class TdDynamicCheckboxComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = false;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const SLIDER_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicSliderComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ SLIDER_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-slider',\r\n  styles: [`.td-dynamic-slider-field{position:relative;margin-top:8px;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-slider-field .td-dynamic-slider{-webkit-box-flex:1;-ms-flex:1;flex:1}`],\r\n  template: `<div class=\"td-dynamic-slider-wrapper\">\r\n  <div class=\"mat-form-field-placeholder-wrapper mat-form-field-can-float mat-form-field-should-float\"\r\n       [class.mat-focused]=\"slider._isActive\">\r\n    <label class=\"mat-form-field-placeholder mat-float mat-form-field-float td-slider-label\"> {{label}} <span *ngIf=\"required\" class=\"mat-placeholder-required\">*</span></label>\r\n  </div>\r\n  <div class=\"td-dynamic-slider-field\">\r\n    <mat-slider #slider\r\n               class=\"td-dynamic-slider\"\r\n               [(ngModel)]=\"value\"\r\n                [min]=\"min\"\r\n                [max]=\"max\"\r\n                thumbLabel\r\n                tickInterval=\"auto\"\r\n                [required]=\"required\">\r\n    </mat-slider>\r\n  </div>  \r\n</div>`,\r\n})\r\nexport class TdDynamicSliderComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = undefined;\r\n\r\n  min: number = undefined;\r\n\r\n  max: number = undefined;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const SELECT_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicSelectComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [ SELECT_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-select',\r\n  styles: [`.td-dynamic-select-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-select-wrapper .td-dynamic-select-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}`],\r\n  template: `<div class=\"td-dynamic-select-wrapper\">\r\n  <mat-form-field class=\"td-dynamic-select-field\">\r\n    <mat-select [(ngModel)]=\"value\"\r\n              [placeholder]=\"label\"\r\n              [required]=\"required\">\r\n      <mat-option *ngFor=\"let selection of selections\" [value]=\"selection.value || selection\">{{selection.label || selection}}</mat-option>\r\n    </mat-select>\r\n  </mat-form-field>\r\n</div>\r\n`,\r\n})\r\nexport class TdDynamicSelectComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  required: boolean = undefined;\r\n\r\n  selections: any[] = undefined;\r\n\r\n}\r\n",
    "import { Component, forwardRef } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\r\n\r\nexport const DATEPICKER_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicDatepickerComponent),\r\n  multi: true,\r\n};\r\n\r\n@Component({\r\n  providers: [DATEPICKER_INPUT_CONTROL_VALUE_ACCESSOR],\r\n  selector: 'td-dynamic-datepicker',\r\n  styles: [`.td-dynamic-datepicker-wrapper{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-sizing:border-box;box-sizing:border-box}.td-dynamic-datepicker-wrapper .td-dynamic-datepicker-field{-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-sizing:border-box;box-sizing:border-box}`],\r\n  template: `<div class=\"td-dynamic-datepicker-wrapper\">\r\n  <mat-form-field class=\"td-dynamic-datepicker-field\">\r\n    <input #elementInput\r\n            matInput\r\n            [matDatepicker]=\"dynamicDatePicker\"\r\n            [(ngModel)]=\"value\"\r\n            [formControl]=\"control\"\r\n            [placeholder]=\"label\"\r\n            [required]=\"required\"\r\n            [min]=\"min\"\r\n            [max]=\"max\"/>\r\n    <mat-datepicker-toggle matSuffix [for]=\"dynamicDatePicker\"></mat-datepicker-toggle>\r\n    <mat-datepicker #dynamicDatePicker></mat-datepicker>\r\n  </mat-form-field>\r\n</div>\r\n`,\r\n})\r\nexport class TdDynamicDatepickerComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\r\n\r\n  control: FormControl;\r\n\r\n  label: string = '';\r\n\r\n  type: string = undefined;\r\n\r\n  required: boolean = undefined;\r\n\r\n  min: number = undefined;\r\n\r\n  max: number = undefined;\r\n\r\n}\r\n",
    "import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\r\nimport { Validators, ValidatorFn, FormControl, AbstractControl } from '@angular/forms';\r\n\r\nimport { TdDynamicInputComponent } from '../dynamic-elements/dynamic-input/dynamic-input.component';\r\nimport { TdDynamicFileInputComponent } from '../dynamic-elements/dynamic-file-input/dynamic-file-input.component';\r\nimport { TdDynamicTextareaComponent } from '../dynamic-elements/dynamic-textarea/dynamic-textarea.component';\r\nimport { TdDynamicSlideToggleComponent } from '../dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component';\r\nimport { TdDynamicCheckboxComponent } from '../dynamic-elements/dynamic-checkbox/dynamic-checkbox.component';\r\nimport { TdDynamicSliderComponent } from '../dynamic-elements/dynamic-slider/dynamic-slider.component';\r\nimport { TdDynamicSelectComponent } from '../dynamic-elements/dynamic-select/dynamic-select.component';\r\nimport { TdDynamicDatepickerComponent } from '../dynamic-elements/dynamic-datepicker/dynamic-datepicker.component';\r\n\r\nexport enum TdDynamicType {\r\n  Text = 'text',\r\n  Boolean = 'boolean',\r\n  Number = 'number',\r\n  Array = 'array',\r\n  Date = 'date',\r\n}\r\n\r\nexport enum TdDynamicElement {\r\n  Input = 'input',\r\n  Datepicker = 'datepicker',\r\n  Password = 'password',\r\n  Textarea = 'textarea',\r\n  Slider = 'slider',\r\n  SlideToggle = 'slide-toggle',\r\n  Checkbox = 'checkbox',\r\n  Select = 'select',\r\n  FileInput = 'file-input',\r\n}\r\n\r\nexport interface ITdDynamicElementValidator {\r\n  validator: ValidatorFn;\r\n}\r\n\r\nexport interface ITdDynamicElementConfig {\r\n  label?: string;\r\n  name: string;\r\n  type: TdDynamicType | TdDynamicElement;\r\n  required?: boolean;\r\n  min?: any;\r\n  max?: any;\r\n  minLength?: any;\r\n  maxLength?: any;\r\n  selections?: string[] | { value: any, label: string }[];\r\n  default?: any;\r\n  flex?: number;\r\n  validators?: ITdDynamicElementValidator[];\r\n}\r\n\r\nexport const DYNAMIC_ELEMENT_NAME_REGEX: RegExp = /^[a-zA-Z]+[a-zA-Z0-9-_]*$/;\r\n\r\n@Injectable()\r\nexport class TdDynamicFormsService {\r\n\r\n  /**\r\n   * Method to validate if the [name] is a proper element name.\r\n   * Throws error if name is not valid.\r\n   */\r\n  validateDynamicElementName(name: string): void {\r\n    if (!DYNAMIC_ELEMENT_NAME_REGEX.test(name)) {\r\n      throw new Error(`Dynamic element name: \"${name}\" is not valid.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets component to be rendered depending on [TdDynamicElement | TdDynamicType]\r\n   * Throws error if it does not exists or not supported.\r\n   */\r\n  getDynamicElement(element: TdDynamicElement | TdDynamicType): any {\r\n    switch (element) {\r\n      case TdDynamicType.Text:\r\n      case TdDynamicType.Number:\r\n      case TdDynamicElement.Input:\r\n      case TdDynamicElement.Password:\r\n        return TdDynamicInputComponent;\r\n      case TdDynamicElement.Textarea:\r\n        return TdDynamicTextareaComponent;\r\n      case TdDynamicType.Boolean:\r\n      case TdDynamicElement.SlideToggle:\r\n        return TdDynamicSlideToggleComponent;\r\n      case TdDynamicElement.Checkbox:\r\n        return TdDynamicCheckboxComponent;\r\n      case TdDynamicElement.Slider:\r\n        return TdDynamicSliderComponent;\r\n      case TdDynamicType.Array:\r\n      case TdDynamicElement.Select:\r\n        return TdDynamicSelectComponent;\r\n      case TdDynamicElement.FileInput:\r\n        return TdDynamicFileInputComponent;\r\n      case TdDynamicElement.Datepicker:\r\n      case TdDynamicType.Date:\r\n        return TdDynamicDatepickerComponent;\r\n      default:\r\n        throw new Error(`Error: type ${element} does not exist or not supported.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates form control for element depending [ITdDynamicElementConfig] properties.\r\n   */\r\n  createFormControl(config: ITdDynamicElementConfig): FormControl {\r\n    let validator: ValidatorFn = this.createValidators(config);\r\n    return new FormControl(config.default, validator);\r\n  }\r\n\r\n  /**\r\n   * Creates form validationdepending [ITdDynamicElementConfig] properties.\r\n   */\r\n  createValidators(config: ITdDynamicElementConfig): ValidatorFn {\r\n    let validator: ValidatorFn;\r\n    if (config.required) {\r\n      validator = Validators.required;\r\n    }\r\n    if (config.max || config.max === 0) {\r\n      validator = Validators.compose([validator, Validators.max(parseFloat(config.max))]);\r\n    }\r\n    if (config.min || config.min === 0) {\r\n      validator = Validators.compose([validator, Validators.min(parseFloat(config.min))]);\r\n    }\r\n    if (config.maxLength || config.maxLength === 0) {\r\n      validator = Validators.compose([validator, Validators.maxLength(parseFloat(config.maxLength))]);\r\n    }\r\n    if (config.minLength || config.minLength === 0) {\r\n      validator = Validators.compose([validator, Validators.minLength(parseFloat(config.minLength))]);\r\n    }\r\n    // Add provided custom validators to the validator function\r\n    if (config.validators) {\r\n      config.validators.forEach((validatorConfig: ITdDynamicElementValidator) => {\r\n        validator = Validators.compose([validator, validatorConfig.validator]);\r\n      });\r\n    }\r\n    return validator;\r\n  }\r\n}\r\n\r\nexport function DYNAMIC_FORMS_PROVIDER_FACTORY(\r\n  parent: TdDynamicFormsService): TdDynamicFormsService {\r\n  return parent || new TdDynamicFormsService();\r\n}\r\n\r\nexport const DYNAMIC_FORMS_PROVIDER: Provider = {\r\n  // If there is already a service available, use that. Otherwise, provide a new one.\r\n  provide: TdDynamicFormsService,\r\n  deps: [[new Optional(), new SkipSelf(), TdDynamicFormsService]],\r\n  useFactory: DYNAMIC_FORMS_PROVIDER_FACTORY,\r\n};\r\n",
    "import { Component, Directive, Input, HostBinding, OnInit, SimpleChanges, OnChanges, TemplateRef } from '@angular/core';\r\nimport { ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { ComponentFactoryResolver, ComponentRef, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\r\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\r\n\r\nimport { TdDynamicElement, TdDynamicType, TdDynamicFormsService } from './services/dynamic-forms.service';\r\nimport { AbstractControlValueAccessor } from './dynamic-elements/abstract-control-value-accesor';\r\n\r\nconst noop: any = () => {\r\n  // empty method\r\n};\r\n\r\nexport const ELEMENT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => TdDynamicElementComponent),\r\n  multi: true,\r\n};\r\n\r\n@Directive({selector: '[tdDynamicFormsError]ng-template'})\r\nexport class TdDynamicFormsErrorTemplate extends TemplatePortalDirective {\r\n\r\n  @Input() tdDynamicFormsError: string;\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[tdDynamicContainer]',\r\n})\r\nexport class TdDynamicElementDirective {\r\n  constructor(public viewContainer: ViewContainerRef) { }\r\n}\r\n\r\n@Component({\r\n  providers: [ TdDynamicFormsService, ELEMENT_INPUT_CONTROL_VALUE_ACCESSOR ],\r\n  selector: 'td-dynamic-element',\r\n  template: '<div tdDynamicContainer></div>',\r\n})\r\nexport class TdDynamicElementComponent extends AbstractControlValueAccessor\r\n                                       implements ControlValueAccessor, OnInit, OnChanges {\r\n\r\n  private _instance: any;\r\n\r\n  set value(v: any) {\r\n    if (v !== this._value) {\r\n      this._value = v;\r\n      this.onChange(v);\r\n      this.onModelChange(v);\r\n    }\r\n  }\r\n  get value(): any {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * Sets form control of the element.\r\n   */\r\n  @Input() dynamicControl: FormControl;\r\n\r\n  /**\r\n   * Sets label to be displayed.\r\n   */\r\n  @Input() label: string = '';\r\n\r\n  /**\r\n   * Sets type or element of element to be rendered.\r\n   * Throws error if does not exist or no supported.\r\n   */\r\n  @Input() type: TdDynamicElement | TdDynamicType = undefined;\r\n\r\n  /**\r\n   * Sets required validation checkup (if supported by element).\r\n   */\r\n  @Input() required: boolean = undefined;\r\n\r\n  /**\r\n   * Sets min validation checkup (if supported by element).\r\n   */\r\n  @Input() min: number = undefined;\r\n\r\n  /**\r\n   * Sets max validation checkup (if supported by element).\r\n   */\r\n  @Input() max: number = undefined;\r\n\r\n  /**\r\n   * Sets minLength validation checkup (if supported by element).\r\n   */\r\n  @Input() minLength: number = undefined;\r\n\r\n  /**\r\n   * Sets maxLength validation checkup (if supported by element).\r\n   */\r\n  @Input() maxLength: number = undefined;\r\n\r\n  /**\r\n   * Sets selections for array elements (if supported by element).\r\n   */\r\n  @Input() selections: any[] = undefined;\r\n\r\n  @ViewChild(TdDynamicElementDirective) childElement: TdDynamicElementDirective;\r\n\r\n  @HostBinding('attr.max')\r\n  get maxAttr(): any {\r\n    return this.max;\r\n  }\r\n\r\n  @HostBinding('attr.min')\r\n  get minAttr(): any {\r\n    return this.min;\r\n  }\r\n\r\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\r\n              private _dynamicFormsService: TdDynamicFormsService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    let ref: ComponentRef<any> = this._componentFactoryResolver.\r\n      resolveComponentFactory(this._dynamicFormsService.getDynamicElement(this.type))\r\n      .create(this.childElement.viewContainer.injector);\r\n    this.childElement.viewContainer.insert(ref.hostView);\r\n    this._instance = ref.instance;\r\n    this._instance.control = this.dynamicControl;\r\n    this._instance.label = this.label;\r\n    this._instance.type = this.type;\r\n    this._instance.value = this.value;\r\n    this._instance.required = this.required;\r\n    this._instance.min = this.min;\r\n    this._instance.max = this.max;\r\n    this._instance.minLength = this.minLength;\r\n    this._instance.maxLength = this.maxLength;\r\n    this._instance.selections = this.selections;\r\n    this._instance.registerOnChange((value: any) => {\r\n      this.value = value;\r\n    });\r\n    this.registerOnModelChange((value: any) => {\r\n      // fix to check if value is NaN (type=number)\r\n      if (!Number.isNaN(value)) {\r\n        this._instance.value = value;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reassign any inputs that have changed\r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this._instance) {\r\n      for (let prop in changes) {\r\n        this._instance[prop] = changes[prop].currentValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  registerOnModelChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  onModelChange = (_: any) => noop;\r\n}\r\n",
    "import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, ContentChildren,\r\n         TemplateRef, QueryList, AfterContentInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\r\n\r\nimport { TdDynamicFormsService, ITdDynamicElementConfig } from './services/dynamic-forms.service';\r\nimport { TdDynamicFormsErrorTemplate } from './dynamic-element.component';\r\n\r\nimport { timer } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'td-dynamic-forms',\r\n  template: `<form [formGroup]=\"dynamicForm\" novalidate>\r\n  <div class=\"td-dynamic-form-wrapper\">\r\n    <ng-template let-element ngFor [ngForOf]=\"elements\">\r\n      <div class=\"td-dynamic-element-wrapper\"\r\n          [style.max-width.%]=\"element.flex ? element.flex : 100\"\r\n          [style.flex]=\"'1 1 ' + (element.flex ? element.flex : 100) + '%'\"\r\n          [style.-ms-flex]=\"'1 1 ' + (element.flex ? element.flex : 100) + '%'\"\r\n          [style.-webkit-box-flex]=\"1\">\r\n        <td-dynamic-element\r\n          #dynamicElement\r\n          *ngIf=\"dynamicForm.controls[element.name]\"\r\n          [formControlName]=\"element.name\"\r\n          [dynamicControl]=\"dynamicForm.controls[element.name]\"\r\n          [id]=\"element.name\"\r\n          [label]=\"element.label || element.name\"\r\n          [type]=\"element.type\"\r\n          [required]=\"element.required\"\r\n          [min]=\"element.min\"\r\n          [max]=\"element.max\"\r\n          [minLength]=\"element.minLength\"\r\n          [maxLength]=\"element.maxLength\"\r\n          [selections]=\"element.selections\">\r\n        </td-dynamic-element>\r\n        <div class=\"tc-red-600\"\r\n             [style.font-size.%]=\"'70'\"\r\n             [style.position]=\"'absolute'\"\r\n             [style.bottom.px]=\"'10'\"\r\n              *ngIf=\"getErrorTemplateRef(element.name) && dynamicForm.controls[element.name]?.errors\">\r\n          <ng-template\r\n            [ngTemplateOutlet]=\"getErrorTemplateRef(element.name)\"\r\n            [ngTemplateOutletContext]=\"{control: dynamicForm.controls[element.name], errors: dynamicForm.controls[element.name]?.errors}\">\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n  <ng-content></ng-content>\r\n</form>\r\n`,\r\n  styles: [`.td-dynamic-form-wrapper{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}.td-dynamic-form-wrapper .td-dynamic-element-wrapper{max-height:100%;-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;padding:4px 4px 8px}`],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TdDynamicFormsComponent implements AfterContentInit {\r\n\r\n  private _renderedElements: ITdDynamicElementConfig[] = [];\r\n  private _elements: ITdDynamicElementConfig[];\r\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\r\n  @ContentChildren(TdDynamicFormsErrorTemplate) _errorTemplates: QueryList<TdDynamicFormsErrorTemplate>;\r\n  dynamicForm: FormGroup;\r\n \r\n  /**\r\n   * elements: ITdDynamicElementConfig[]\r\n   * JS Object that will render the elements depending on its config.\r\n   * [name] property is required.\r\n   */\r\n  @Input('elements')\r\n  set elements(elements: ITdDynamicElementConfig[]) {\r\n    if (elements) {\r\n      this._elements = elements;\r\n    } else {\r\n      this._elements = [];\r\n    }\r\n    this._rerenderElements();\r\n  }\r\n  get elements(): ITdDynamicElementConfig[] {\r\n    return this._renderedElements;\r\n  }\r\n\r\n  /**\r\n   * Getter property for dynamic [FormGroup].\r\n   */\r\n  get form(): FormGroup {\r\n    return this.dynamicForm;\r\n  }\r\n\r\n  /**\r\n   * Getter property for [valid] of dynamic [FormGroup].\r\n   */\r\n  get valid(): boolean {\r\n    if (this.dynamicForm) {\r\n      return this.dynamicForm.valid;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Getter property for [value] of dynamic [FormGroup].\r\n   */\r\n  get value(): any {\r\n    if (this.dynamicForm) {\r\n      return this.dynamicForm.value;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Getter property for [errors] of dynamic [FormGroup].\r\n   */\r\n  get errors(): { [name: string]: any } {\r\n    if (this.dynamicForm) {\r\n      let errors: {[name: string]: any} = {};\r\n      for (let name in this.dynamicForm.controls) {\r\n        errors[name] = this.dynamicForm.controls[name].errors;\r\n      }\r\n      return errors;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Getter property for [controls] of dynamic [FormGroup].\r\n   */\r\n  get controls(): {[key: string]: AbstractControl} {\r\n    if (this.dynamicForm) {\r\n      return this.dynamicForm.controls;\r\n    }\r\n    return {};\r\n  }\r\n\r\n  constructor(private _formBuilder: FormBuilder,\r\n              private _dynamicFormsService: TdDynamicFormsService,\r\n              private _changeDetectorRef: ChangeDetectorRef) {\r\n    this.dynamicForm = this._formBuilder.group({});\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._updateErrorTemplates();\r\n  }\r\n\r\n  /**\r\n   * Refreshes the form and rerenders all validator/element modifications.\r\n   */\r\n  refresh(): void {\r\n    this._rerenderElements();\r\n    this._updateErrorTemplates();\r\n  }\r\n\r\n  /**\r\n   * Getter method for error template references\r\n   */\r\n  getErrorTemplateRef(name: string): TemplateRef<any> {\r\n    return this._templateMap.get(name);\r\n  }\r\n\r\n  /**\r\n   * Loads error templates and sets them in a map for faster access.\r\n   */\r\n  private _updateErrorTemplates(): void {\r\n    this._templateMap = new Map<string, TemplateRef<any>>();\r\n    for (let i: number = 0; i < this._errorTemplates.toArray().length; i++) {\r\n      this._templateMap.set(\r\n        this._errorTemplates.toArray()[i].tdDynamicFormsError,\r\n        this._errorTemplates.toArray()[i].templateRef,\r\n      );\r\n    }\r\n  }\r\n\r\n  private _rerenderElements(): void {\r\n    this._clearRemovedElements();\r\n    this._renderedElements = [];\r\n    let duplicates: string[] = [];\r\n    this._elements.forEach((elem: ITdDynamicElementConfig) => {\r\n      this._dynamicFormsService.validateDynamicElementName(elem.name);\r\n      if (duplicates.indexOf(elem.name) > -1) {\r\n        throw new Error(`Dynamic element name: \"${elem.name}\" is duplicated`);\r\n      }\r\n      duplicates.push(elem.name);\r\n      if (!this.dynamicForm.get(elem.name)) {\r\n        this.dynamicForm.addControl(elem.name, this._dynamicFormsService.createFormControl(elem));\r\n      } else {\r\n        this.dynamicForm.get(elem.name).setValidators(this._dynamicFormsService.createValidators(elem));\r\n      }\r\n      // copy objects so they are only changes when calling this method\r\n      this._renderedElements.push(Object.assign({}, elem));\r\n    });\r\n    // call a change detection since the whole form might change\r\n    this._changeDetectorRef.detectChanges();\r\n    timer().toPromise().then(() => {\r\n      // call a markForCheck so elements are rendered correctly in OnPush\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  private _clearRemovedElements(): void {\r\n    for (let i: number = 0; i < this._renderedElements.length; i++) {\r\n      for (let j: number = 0; j < this._elements.length; j++) {\r\n        // check if the name of the element is still there removed\r\n        if (this._renderedElements[i].name === this._elements[j].name) {\r\n          delete this._renderedElements[i];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    // remove elements that were removed from the array\r\n    this._renderedElements.forEach((elem: ITdDynamicElementConfig) => {\r\n      this.dynamicForm.removeControl(elem.name);\r\n    });\r\n  }\r\n}\r\n",
    "import { NgModule, Type } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\n\r\nimport { CovalentCommonModule } from '@covalent/core/common';\r\nimport { CovalentFileModule } from '@covalent/core/file';\r\n\r\nimport { TdDynamicFormsComponent } from './dynamic-forms.component';\r\nimport { TdDynamicElementComponent, TdDynamicElementDirective, TdDynamicFormsErrorTemplate } from './dynamic-element.component';\r\nimport {  DYNAMIC_FORMS_PROVIDER } from './services/dynamic-forms.service';\r\n\r\nimport { TdDynamicInputComponent } from './dynamic-elements/dynamic-input/dynamic-input.component';\r\nimport { TdDynamicFileInputComponent } from './dynamic-elements/dynamic-file-input/dynamic-file-input.component';\r\nimport { TdDynamicTextareaComponent } from './dynamic-elements/dynamic-textarea/dynamic-textarea.component';\r\nimport {\r\n  TdDynamicSlideToggleComponent,\r\n} from './dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component';\r\nimport {\r\n  TdDynamicCheckboxComponent,\r\n} from './dynamic-elements/dynamic-checkbox/dynamic-checkbox.component';\r\nimport { TdDynamicSliderComponent } from './dynamic-elements/dynamic-slider/dynamic-slider.component';\r\nimport { TdDynamicSelectComponent } from './dynamic-elements/dynamic-select/dynamic-select.component';\r\nimport { TdDynamicDatepickerComponent } from './dynamic-elements/dynamic-datepicker/dynamic-datepicker.component';\r\n\r\nconst TD_DYNAMIC_FORMS: Type<any>[] = [\r\n  TdDynamicFormsComponent,\r\n  TdDynamicElementComponent,\r\n  TdDynamicElementDirective,\r\n  TdDynamicFormsErrorTemplate,\r\n];\r\n\r\nconst TD_DYNAMIC_FORMS_ENTRY_COMPONENTS: Type<any>[] = [\r\n  TdDynamicInputComponent,\r\n  TdDynamicFileInputComponent,\r\n  TdDynamicTextareaComponent,\r\n  TdDynamicSlideToggleComponent,\r\n  TdDynamicCheckboxComponent,\r\n  TdDynamicSliderComponent,\r\n  TdDynamicSelectComponent,\r\n  TdDynamicDatepickerComponent,\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TD_DYNAMIC_FORMS,\r\n    TD_DYNAMIC_FORMS_ENTRY_COMPONENTS,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    CovalentCommonModule,\r\n    CovalentFileModule,\r\n  ],\r\n  exports: [\r\n    TD_DYNAMIC_FORMS,\r\n    TD_DYNAMIC_FORMS_ENTRY_COMPONENTS,\r\n  ],\r\n  providers: [\r\n    DYNAMIC_FORMS_PROVIDER,\r\n  ],\r\n  entryComponents: [ TD_DYNAMIC_FORMS_ENTRY_COMPONENTS ],\r\n})\r\nexport class CovalentDynamicFormsModule {\r\n\r\n}\r\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__extends",
    "__",
    "this",
    "constructor",
    "prototype",
    "create",
    "__read",
    "o",
    "n",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "next",
    "done",
    "push",
    "value",
    "error",
    "__spread",
    "arguments",
    "length",
    "concat",
    "noop",
    "AbstractControlValueAccessor",
    "_value",
    "undefined",
    "onChange",
    "_",
    "onTouched",
    "defineProperty",
    "get",
    "set",
    "v",
    "writeValue",
    "registerOnChange",
    "fn",
    "registerOnTouched",
    "INPUT_INPUT_CONTROL_VALUE_ACCESSOR",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "forwardRef",
    "TdDynamicInputComponent",
    "multi",
    "_super",
    "_this",
    "label",
    "type",
    "required",
    "min",
    "max",
    "minLength",
    "maxLength",
    "tslib_1.__extends",
    "Component",
    "args",
    "providers",
    "selector",
    "styles",
    "template",
    "UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR",
    "TdDynamicFileInputComponent",
    "TEXTAREA_INPUT_CONTROL_VALUE_ACCESSOR",
    "TdDynamicTextareaComponent",
    "SLIDE_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR",
    "TdDynamicSlideToggleComponent",
    "CHECKBOX_INPUT_CONTROL_VALUE_ACCESSOR",
    "TdDynamicCheckboxComponent",
    "SLIDER_INPUT_CONTROL_VALUE_ACCESSOR",
    "TdDynamicSliderComponent",
    "SELECT_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR",
    "TdDynamicSelectComponent",
    "selections",
    "DATEPICKER_INPUT_CONTROL_VALUE_ACCESSOR",
    "TdDynamicDatepickerComponent",
    "Text",
    "Boolean",
    "Number",
    "Date",
    "Input",
    "Datepicker",
    "Password",
    "Textarea",
    "Slider",
    "SlideToggle",
    "Checkbox",
    "Select",
    "FileInput",
    "DYNAMIC_ELEMENT_NAME_REGEX",
    "TdDynamicFormsService",
    "validateDynamicElementName",
    "name",
    "test",
    "Error",
    "getDynamicElement",
    "element",
    "TdDynamicType",
    "TdDynamicElement",
    "createFormControl",
    "config",
    "validator",
    "createValidators",
    "FormControl",
    "default",
    "Validators",
    "compose",
    "parseFloat",
    "validators",
    "forEach",
    "validatorConfig",
    "DYNAMIC_FORMS_PROVIDER_FACTORY",
    "parent",
    "Injectable",
    "DYNAMIC_FORMS_PROVIDER",
    "deps",
    "Optional",
    "SkipSelf",
    "useFactory",
    "ELEMENT_INPUT_CONTROL_VALUE_ACCESSOR",
    "TdDynamicElementComponent",
    "TdDynamicFormsErrorTemplate",
    "templateRef",
    "viewContainerRef",
    "TemplatePortalDirective",
    "Directive",
    "TemplateRef",
    "ViewContainerRef",
    "tdDynamicFormsError",
    "TdDynamicElementDirective",
    "viewContainer",
    "_componentFactoryResolver",
    "_dynamicFormsService",
    "onModelChange",
    "ngOnInit",
    "ref",
    "resolveComponentFactory",
    "childElement",
    "injector",
    "insert",
    "hostView",
    "_instance",
    "instance",
    "control",
    "dynamicControl",
    "registerOnModelChange",
    "isNaN",
    "ngOnChanges",
    "changes",
    "prop",
    "currentValue",
    "ComponentFactoryResolver",
    "ViewChild",
    "maxAttr",
    "HostBinding",
    "minAttr",
    "TdDynamicFormsComponent",
    "_formBuilder",
    "_changeDetectorRef",
    "_renderedElements",
    "_templateMap",
    "Map",
    "dynamicForm",
    "group",
    "elements",
    "_elements",
    "_rerenderElements",
    "valid",
    "errors",
    "controls",
    "ngAfterContentInit",
    "_updateErrorTemplates",
    "refresh",
    "getErrorTemplateRef",
    "_errorTemplates",
    "toArray",
    "_clearRemovedElements",
    "duplicates",
    "elem",
    "indexOf",
    "setValidators",
    "addControl",
    "assign",
    "detectChanges",
    "timer",
    "toPromise",
    "then",
    "markForCheck",
    "j",
    "removeControl",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "FormBuilder",
    "ChangeDetectorRef",
    "ContentChildren",
    "TD_DYNAMIC_FORMS",
    "TD_DYNAMIC_FORMS_ENTRY_COMPONENTS",
    "CovalentDynamicFormsModule",
    "NgModule",
    "declarations",
    "imports",
    "CommonModule",
    "ReactiveFormsModule",
    "MatInputModule",
    "MatSelectModule",
    "MatCheckboxModule",
    "MatSliderModule",
    "MatSlideToggleModule",
    "MatIconModule",
    "MatButtonModule",
    "MatDatepickerModule",
    "CovalentCommonModule",
    "CovalentFileModule",
    "exports",
    "entryComponents"
  ],
  "mappings": "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"
}
