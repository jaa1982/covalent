{
  "version": 3,
  "file": "covalent-core-media.js",
  "sources": [
    "ng://@covalent/core/media/out/media.module.ts",
    "ng://@covalent/core/media/out/directives/media-toggle.directive.ts",
    "ng://@covalent/core/media/out/services/media.service.ts"
  ],
  "sourcesContent": [
    "import { Type } from '@angular/core';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { MEDIA_PROVIDER } from './services/media.service';\r\nimport { TdMediaToggleDirective } from './directives/media-toggle.directive';\r\n\r\nconst TD_MEDIA: Type<any>[] = [\r\n  TdMediaToggleDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    TD_MEDIA,\r\n  ],\r\n  exports: [\r\n    TD_MEDIA,\r\n  ],\r\n  providers: [\r\n    MEDIA_PROVIDER,\r\n  ],\r\n})\r\nexport class CovalentMediaModule {\r\n\r\n}\r\n",
    "import { Directive, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { Renderer2 } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { TdMediaService } from '../services/media.service';\r\n\r\n@Directive({\r\n  selector: '[tdMediaToggle]',\r\n})\r\nexport class TdMediaToggleDirective implements OnInit, OnDestroy {\r\n\r\n  private _subscription: Subscription;\r\n\r\n  private _query: string;\r\n  private _matches: boolean = false;\r\n  private _attributes: {[key: string]: string} = {};\r\n  private _styles: {[key: string]: string} = {};\r\n  private _classes: string[] = [];\r\n\r\n  /**\r\n   * tdMediaToggle: string\r\n   * Media query used to evaluate screen/window size.\r\n   * Toggles attributes, classes and styles if media query is matched.\r\n   */\r\n  @Input('tdMediaToggle')\r\n  set query(query: string) {\r\n    if (!query) {\r\n      throw new Error('Query needed for [tdMediaToggle] directive.');\r\n    }\r\n    this._query = query;\r\n  }\r\n\r\n  /**\r\n   * mediaAttributes: {[key: string]: string}\r\n   * Attributes to be toggled when media query matches.\r\n   */\r\n  @Input('mediaAttributes')\r\n  set attributes(attributes: any) {\r\n    this._attributes = attributes;\r\n  }\r\n\r\n  /**\r\n   * mediaClasses: string[]\r\n   * CSS Classes to be toggled when media query matches.\r\n   */\r\n  @Input('mediaClasses')\r\n  set classes(classes: string[]) {\r\n    this._classes = classes;\r\n  }\r\n\r\n  /**\r\n   * mediaStyles: {[key: string]: string}\r\n   * CSS Styles to be toggled when media query matches.\r\n   */\r\n  @Input('mediaStyles')\r\n  set styles(styles: any) {\r\n    this._styles = styles;\r\n  }\r\n\r\n  constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _mediaService: TdMediaService) { }\r\n\r\n  ngOnInit(): void {\r\n    this._mediaChange(this._mediaService.query(this._query));\r\n    this._subscription = this._mediaService.registerQuery(this._query).subscribe((matches: boolean) => {\r\n      this._mediaChange(matches);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private _mediaChange(matches: boolean): void {\r\n    this._matches = matches;\r\n    this._changeAttributes();\r\n    this._changeClasses();\r\n    this._changeStyles();\r\n  }\r\n\r\n  private _changeAttributes(): void {\r\n    for (let attr in this._attributes) {\r\n      if (this._matches) {\r\n        this._renderer.setAttribute(this._elementRef.nativeElement, attr, this._attributes[attr]);\r\n      } else {\r\n        this._renderer.removeAttribute(this._elementRef.nativeElement, attr);\r\n      }\r\n    }\r\n  }\r\n\r\n  private _changeClasses(): void {\r\n    this._classes.forEach((className: string) => {\r\n      if (this._matches) {\r\n        this._renderer.addClass(this._elementRef.nativeElement, className);\r\n      } else {\r\n        this._renderer.removeClass(this._elementRef.nativeElement, className);\r\n      }\r\n    });\r\n  }\r\n\r\n  private _changeStyles(): void {\r\n    for (let style in this._styles) {\r\n      if (this._matches) {\r\n        this._renderer.setStyle(this._elementRef.nativeElement, style, this._styles[style]);\r\n      } else {\r\n        this._renderer.removeStyle(this._elementRef.nativeElement, style);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n",
    "import { Injectable, NgZone, SkipSelf, Optional, Provider } from '@angular/core';\r\nimport { Observable, BehaviorSubject, Subscription, fromEvent } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class TdMediaService {\r\n\r\n  private _resizing: boolean = false;\r\n  private _globalSubscription: Subscription;\r\n  private _queryMap: Map<string, string> = new Map<string, string>();\r\n  private _querySources: { [key: string]: BehaviorSubject<boolean>} = {};\r\n  private _queryObservables: {[key: string]: Observable<boolean>} = {};\r\n\r\n  constructor(private _ngZone: NgZone) {\r\n    this._queryMap.set('xs', '(max-width: 599px)');\r\n    this._queryMap.set('gt-xs', '(min-width: 600px)');\r\n    this._queryMap.set('sm', '(min-width: 600px) and (max-width: 959px)');\r\n    this._queryMap.set('gt-sm', '(min-width: 960px)');\r\n    this._queryMap.set('md', '(min-width: 960px) and (max-width: 1279px)');\r\n    this._queryMap.set('gt-md', '(min-width: 1280px)');\r\n    this._queryMap.set('lg', '(min-width: 1280px) and (max-width: 1919px)');\r\n    this._queryMap.set('gt-lg', '(min-width: 1920px)');\r\n    this._queryMap.set('xl', '(min-width: 1920px)');\r\n    this._queryMap.set('landscape', '(orientation: landscape)');\r\n    this._queryMap.set('portrait', '(orientation: portrait)');\r\n    this._queryMap.set('print', 'print');\r\n\r\n    this._resizing = false;\r\n    // we make sure that the resize checking happend outside of Angular since it happens often\r\n    this._globalSubscription = this._ngZone.runOutsideAngular(() => {\r\n      return fromEvent(window, 'resize').subscribe(() => {\r\n        // way to prevent the resize event from triggering the match media if there is already one event running already.\r\n        if (!this._resizing) {\r\n          this._resizing = true;\r\n          setTimeout(() => {\r\n            this._onResize();\r\n            this._resizing = false;\r\n          }, 100);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deregisters a query so its stops being notified or used.\r\n   */\r\n  deregisterQuery(query: string): void {\r\n    if (this._queryMap.get(query.toLowerCase())) {\r\n      query = this._queryMap.get(query.toLowerCase());\r\n    }\r\n    this._querySources[query].unsubscribe();\r\n    delete this._querySources[query];\r\n    delete this._queryObservables[query];\r\n  }\r\n\r\n  /**\r\n   * Used to evaluate whether a given media query is true or false given the current device's screen / window size.\r\n   */\r\n  public query(query: string): boolean {\r\n    if (this._queryMap.get(query.toLowerCase())) {\r\n      query = this._queryMap.get(query.toLowerCase());\r\n    }\r\n    return this._ngZone.run(() => {\r\n      return matchMedia(query).matches;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Registers a media query and returns an [Observable] that will re-evaluate and\r\n   * return if the given media query matches on window resize.\r\n   * Note: don't forget to unsubscribe from [Observable] when finished watching.\r\n   */\r\n  public registerQuery(query: string): Observable<boolean> {\r\n    if (this._queryMap.get(query.toLowerCase())) {\r\n      query = this._queryMap.get(query.toLowerCase());\r\n    }\r\n    if (!this._querySources[query]) {\r\n      this._querySources[query] = new BehaviorSubject<boolean>(matchMedia(query).matches);\r\n      this._queryObservables[query] = this._querySources[query].asObservable();\r\n    }\r\n    return this._queryObservables[query];\r\n  }\r\n\r\n  /**\r\n   * Trigger a match media event on all subscribed observables.\r\n   */\r\n  public broadcast(): void {\r\n    this._onResize();\r\n  }\r\n\r\n  private _onResize(): void {\r\n    for (let query in this._querySources) {\r\n      this._ngZone.run(() => {\r\n        this._matchMediaTrigger(query);\r\n      });\r\n    }\r\n  }\r\n\r\n  private _matchMediaTrigger(query: string): void {\r\n    this._querySources[query].next(matchMedia(query).matches);\r\n  }\r\n}\r\n\r\nexport function MEDIA_PROVIDER_FACTORY(\r\n    parent: TdMediaService, ngZone: NgZone): TdMediaService {\r\n  return parent || new TdMediaService(ngZone);\r\n}\r\n\r\nexport const MEDIA_PROVIDER: Provider = {\r\n  // If there is already a service available, use that. Otherwise, provide a new one.\r\n  provide: TdMediaService,\r\n  deps: [[new Optional(), new SkipSelf(), TdMediaService], NgZone],\r\n  useFactory: MEDIA_PROVIDER_FACTORY,\r\n};\r\n"
  ],
  "names": [],
  "mappings": "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"
}
