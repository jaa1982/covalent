{
  "version": 3,
  "file": "covalent-core-file.js",
  "sources": [
    "ng://@covalent/core/file/out/file.module.ts",
    "ng://@covalent/core/file/out/services/file.service.ts",
    "ng://@covalent/core/file/out/file-upload/file-upload.component.ts",
    "ng://@covalent/core/file/out/file-input/file-input.component.ts",
    "ng://@covalent/core/file/out/directives/file-drop.directive.ts",
    "ng://@covalent/core/file/out/directives/file-select.directive.ts"
  ],
  "sourcesContent": [
    "import { Type } from '@angular/core';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\nimport { TdFileSelectDirective } from './directives/file-select.directive';\r\nimport { TdFileDropDirective } from './directives/file-drop.directive';\r\nimport { TdFileUploadComponent } from './file-upload/file-upload.component';\r\nimport { TdFileInputComponent, TdFileInputLabelDirective } from './file-input/file-input.component';\r\nimport { TdFileService } from './services/file.service';\r\n\r\nconst TD_FILE: Type<any>[] = [\r\n  TdFileSelectDirective,\r\n  TdFileDropDirective,\r\n  TdFileUploadComponent,\r\n  TdFileInputComponent,\r\n  TdFileInputLabelDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    PortalModule,\r\n  ],\r\n  declarations: [\r\n    TD_FILE,\r\n  ],\r\n  exports: [\r\n    TD_FILE,\r\n  ],\r\n  providers: [\r\n    TdFileService,\r\n  ],\r\n})\r\nexport class CovalentFileModule {\r\n\r\n}\r\n",
    "import { Injectable } from '@angular/core';\r\nimport { Observable, Subject, Subscriber } from 'rxjs';\r\n\r\nexport interface IUploadOptions {\r\n  url: string;\r\n  method: 'post' | 'put';\r\n  file?: File;\r\n  headers?: {[key: string]: string};\r\n  formData?: FormData;\r\n}\r\n\r\n@Injectable()\r\nexport class TdFileService {\r\n\r\n  private _progressSubject: Subject<number> = new Subject<number>();\r\n  private _progressObservable: Observable<number>;\r\n\r\n  /**\r\n   * Gets progress observable to keep track of the files being uploaded.\r\n   * Needs to be supported by backend.\r\n   */\r\n  get progress(): Observable<number> {\r\n    return this._progressObservable;\r\n  }\r\n\r\n  constructor() {\r\n    this._progressObservable = this._progressSubject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - options: IUploadOptions {\r\n   *     url: string,\r\n   *     method: 'post' | 'put',\r\n   *     file?: File,\r\n   *     headers?: {[key: string]: string},\r\n   *     formData?: FormData\r\n   * }\r\n   *\r\n   * Uses underlying [XMLHttpRequest] to upload a file to a url.\r\n   * Will be depricated when Angular fixes [Http] to allow [FormData] as body.\r\n   */\r\n  upload(options: IUploadOptions): Observable<any> {\r\n    return new Observable<any>((subscriber: Subscriber<any>) => {\r\n      let xhr: XMLHttpRequest = new XMLHttpRequest();\r\n      let formData: FormData = new FormData();\r\n\r\n      if (options.file !== undefined) {\r\n        formData.append('file', options.file);\r\n      } else if (options.formData !== undefined) {\r\n        formData = options.formData;\r\n      } else {\r\n        return subscriber.error('For [IUploadOptions] you have to set either the [file] or the [formData] property.');\r\n      }\r\n\r\n      xhr.upload.onprogress = (event: ProgressEvent) => {\r\n        let progress: number = 0;\r\n        if (event.lengthComputable) {\r\n          progress = Math.round(event.loaded / event.total * 100);\r\n        }\r\n        this._progressSubject.next(progress);\r\n      };\r\n\r\n      xhr.onreadystatechange = () => {\r\n        if (xhr.readyState === 4) {\r\n          if (xhr.status >= 200 && xhr.status < 300) {\r\n            subscriber.next(xhr.response);\r\n            subscriber.complete();\r\n          } else {\r\n            subscriber.error(xhr.response);\r\n          }\r\n        }\r\n      };\r\n\r\n      xhr.open(options.method, options.url, true);\r\n      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n      if (options.headers) {\r\n        for (let key in options.headers) {\r\n          xhr.setRequestHeader(key, options.headers[key]);\r\n        }\r\n      }\r\n\r\n      xhr.send(formData);\r\n    });\r\n  }\r\n}\r\n",
    "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild, ContentChild, ChangeDetectorRef,\r\n  forwardRef } from '@angular/core';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\r\nimport { TdFileInputComponent, TdFileInputLabelDirective } from '../file-input/file-input.component';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nexport class TdFileUploadBase {\r\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\r\n}\r\n\r\n/* tslint:disable-next-line */\r\nexport const _TdFileUploadMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileUploadBase));\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TdFileUploadComponent),\r\n    multi: true,\r\n  }],\r\n  selector: 'td-file-upload',\r\n  inputs: ['disabled', 'value'],\r\n  styles: [`.td-file-upload{padding-left:8px;padding-right:8px}.td-file-upload-cancel{height:24px;width:24px;position:relative;top:24px;left:-12px}::ng-deep [dir=rtl] .td-file-upload-cancel{right:-12px;left:0}.td-file-upload-cancel mat-icon{border-radius:12px;vertical-align:baseline}.drop-zone{border-radius:3px}.drop-zone *{pointer-events:none}`],\r\n  template: `<td-file-input *ngIf=\"!value\"\r\n               [(ngModel)]=\"value\"\r\n               [multiple]=\"multiple\"\r\n               [disabled]=\"disabled\"\r\n               [accept]=\"accept\"\r\n               [color]=\"defaultColor\"\r\n               (select)=\"handleSelect($event)\">\r\n  <ng-template [cdkPortalOutlet]=\"inputLabel\" [ngIf]=\"true\"></ng-template>\r\n</td-file-input>\r\n<div *ngIf=\"value\">\r\n  <button #fileUpload\r\n          class=\"td-file-upload\"\r\n          mat-raised-button\r\n          type=\"button\"\r\n          [color]=\"activeColor\"\r\n          (keyup.delete)=\"cancel()\"\r\n          (keyup.backspace)=\"cancel()\"\r\n          (keyup.escape)=\"cancel()\"\r\n          (click)=\"uploadPressed()\"> \r\n    <ng-content></ng-content>\r\n  </button>\r\n  <button mat-icon-button\r\n          type=\"button\"\r\n          class=\"td-file-upload-cancel\"\r\n          [color]=\"cancelColor\"            \r\n          (click)=\"cancel()\">\r\n    <mat-icon>cancel</mat-icon>\r\n  </button>\r\n</div>`,\r\n})\r\nexport class TdFileUploadComponent extends _TdFileUploadMixinBase implements IControlValueAccessor, ICanDisable {\r\n\r\n  private _multiple: boolean = false;\r\n  private _required: boolean = false;\r\n\r\n  @ViewChild(TdFileInputComponent) fileInput: TdFileInputComponent;\r\n\r\n  @ContentChild(TdFileInputLabelDirective) inputLabel: TdFileInputLabelDirective;\r\n\r\n  /**\r\n   * defaultColor?: string\r\n   * Sets browse button color. Uses same color palette accepted as [MatButton] and defaults to 'primary'.\r\n   */\r\n  @Input('defaultColor') defaultColor: string = 'primary';\r\n\r\n  /**\r\n   * activeColor?: string\r\n   * Sets upload button color. Uses same color palette accepted as [MatButton] and defaults to 'accent'.\r\n   */\r\n  @Input('activeColor') activeColor: string = 'accent';\r\n\r\n  /**\r\n   * cancelColor?: string\r\n   * Sets cancel button color. Uses same color palette accepted as [MatButton] and defaults to 'warn'.\r\n   */\r\n  @Input('cancelColor') cancelColor: string = 'warn';\r\n\r\n  /**\r\n   * multiple?: boolean\r\n   * Sets if multiple files can be dropped/selected at once in [TdFileUploadComponent].\r\n   */\r\n  @Input('multiple')\r\n  set multiple(multiple: boolean) {\r\n    this._multiple = coerceBooleanProperty(multiple);\r\n  }\r\n  get multiple(): boolean {\r\n    return this._multiple;\r\n  }\r\n\r\n  /**\r\n   * required?: boolean\r\n   * Forces at least one file upload.\r\n   * Defaults to 'false'\r\n   */\r\n  @Input('required')\r\n  set required(required: boolean) {\r\n    this._required = coerceBooleanProperty(required);\r\n  }\r\n  get required(): boolean {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * accept?: string\r\n   * Sets files accepted when opening the file browser dialog.\r\n   * Same as 'accept' attribute in <input/> element.\r\n   */\r\n  @Input('accept') accept: string;\r\n\r\n  /**\r\n   * select?: function\r\n   * Event emitted when a file is selected.\r\n   * Emits a [File | FileList] object.\r\n   */\r\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\r\n\r\n  /**\r\n   * upload?: function\r\n   * Event emitted when upload button is clicked.\r\n   * Emits a [File | FileList] object.\r\n   */\r\n  @Output('upload') onUpload: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\r\n\r\n  /**\r\n   * cancel?: function\r\n   * Event emitted when cancel button is clicked.\r\n   */\r\n  @Output('cancel') onCancel: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  constructor(_changeDetectorRef: ChangeDetectorRef) {\r\n    super(_changeDetectorRef);\r\n  }\r\n\r\n  /**\r\n   * Method executed when upload button is clicked.\r\n   */\r\n  uploadPressed(): void {\r\n    if (this.value) {\r\n      this.onUpload.emit(this.value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method executed when a file is selected.\r\n   */\r\n  handleSelect(value: File | FileList): void {\r\n    this.value = value;\r\n    this.onSelect.emit(value);\r\n  }\r\n\r\n  /**\r\n   * Methods executed when cancel button is clicked.\r\n   * Clears files.\r\n   */\r\n  cancel(): void {\r\n    this.value = undefined;\r\n    this.onCancel.emit(undefined);\r\n    // check if the file input is rendered before clearing it\r\n    if (this.fileInput) {\r\n      this.fileInput.clear();\r\n    }\r\n  }\r\n\r\n  /** Method executed when the disabled value changes */\r\n  onDisabledChange(v: boolean): void {\r\n    if (v) {\r\n      this.cancel();\r\n    }\r\n  }\r\n}\r\n",
    "import { Component, Directive, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewChild,\r\n         ElementRef, Renderer2, TemplateRef, ViewContainerRef, ChangeDetectorRef, forwardRef } from '@angular/core';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { ICanDisable, mixinDisabled, IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\r\n\r\n@Directive({\r\n  selector: '[td-file-input-label]ng-template',\r\n})\r\nexport class TdFileInputLabelDirective extends TemplatePortalDirective {\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n\r\nexport class TdFileInputBase {\r\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\r\n}\r\n\r\n/* tslint:disable-next-line */\r\nexport const _TdFileInputMixinBase = mixinControlValueAccessor(mixinDisabled(TdFileInputBase));\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TdFileInputComponent),\r\n    multi: true,\r\n  }],\r\n  selector: 'td-file-input',\r\n  inputs: ['disabled', 'value'],\r\n  styles: [`:host .td-file-input{padding-left:8px;padding-right:8px}:host input.td-file-input-hidden{display:none}:host .drop-zone{border-radius:3px}:host .drop-zone *{pointer-events:none}`],\r\n  template: `<div>\r\n  <button mat-raised-button\r\n          class=\"td-file-input\"\r\n          type=\"button\"\r\n          [color]=\"color\" \r\n          [multiple]=\"multiple\" \r\n          [disabled]=\"disabled\"\r\n          (keyup.enter)=\"fileInput.click()\"\r\n          (click)=\"fileInput.click()\"\r\n          (fileDrop)=\"handleSelect($event)\"\r\n          tdFileDrop>\r\n    <ng-content></ng-content>\r\n  </button>\r\n  <input #fileInput \r\n          class=\"td-file-input-hidden\" \r\n          type=\"file\"\r\n          [attr.accept]=\"accept\"                \r\n          (fileSelect)=\"handleSelect($event)\"\r\n          [multiple]=\"multiple\" \r\n          [disabled]=\"disabled\"\r\n          tdFileSelect>\r\n</div>`,\r\n})\r\nexport class TdFileInputComponent extends _TdFileInputMixinBase implements IControlValueAccessor, ICanDisable {\r\n\r\n  private _multiple: boolean = false;\r\n\r\n  /** The native `<input type=\"file\"> element */\r\n  @ViewChild('fileInput') _inputElement: ElementRef;\r\n  get inputElement(): HTMLInputElement {\r\n    return this._inputElement.nativeElement;\r\n  }\r\n\r\n  /**\r\n   * color?: string\r\n   * Sets button color. Uses same color palette accepted as [MatButton].\r\n   */\r\n  @Input('color') color: string;\r\n\r\n  /**\r\n   * multiple?: boolean\r\n   * Sets if multiple files can be dropped/selected at once in [TdFileInputComponent].\r\n   */\r\n  @Input('multiple')\r\n  set multiple(multiple: boolean) {\r\n    this._multiple = coerceBooleanProperty(multiple);\r\n  }\r\n  get multiple(): boolean {\r\n    return this._multiple;\r\n  }\r\n\r\n  /**\r\n   * accept?: string\r\n   * Sets files accepted when opening the file browser dialog.\r\n   * Same as 'accept' attribute in <input/> element.\r\n   */\r\n  @Input('accept') accept: string;\r\n\r\n  /**\r\n   * select?: function\r\n   * Event emitted a file is selected\r\n   * Emits a [File | FileList] object.\r\n   */\r\n  @Output('select') onSelect: EventEmitter<File | FileList> = new EventEmitter<File | FileList>();\r\n\r\n  constructor(private _renderer: Renderer2, _changeDetectorRef: ChangeDetectorRef) {\r\n    super(_changeDetectorRef);\r\n  }\r\n\r\n  /**\r\n   * Method executed when a file is selected.\r\n   */\r\n  handleSelect(files: File | FileList): void {\r\n    this.writeValue(files);\r\n    this.onSelect.emit(files);\r\n  }\r\n\r\n  /**\r\n   * Used to clear the selected files from the [TdFileInputComponent].\r\n   */\r\n  clear(): void {\r\n    this.writeValue(undefined);\r\n    this._renderer.setProperty(this.inputElement, 'value', '');\r\n  }\r\n\r\n  /** Method executed when the disabled value changes */\r\n  onDisabledChange(v: boolean): void {\r\n    if (v) {\r\n      this.clear();\r\n    }\r\n  }\r\n\r\n}\r\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\r\nimport { HostListener, HostBinding, ElementRef, Renderer2 } from '@angular/core';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\nimport { ICanDisable, mixinDisabled } from '@covalent/core/common';\r\n\r\nexport class TdFileDropBase {}\r\n\r\n/* tslint:disable-next-line */\r\nexport const _TdFileDropMixinBase = mixinDisabled(TdFileDropBase);\r\n\r\n@Directive({\r\n  selector: '[tdFileDrop]',\r\n  inputs: ['disabled'],\r\n})\r\nexport class TdFileDropDirective extends _TdFileDropMixinBase implements ICanDisable {\r\n\r\n  private _multiple: boolean = false;\r\n\r\n  /**\r\n   * multiple?: boolean\r\n   * Sets whether multiple files can be dropped at once in host element, or just a single file.\r\n   * Can also be 'multiple' native attribute.\r\n   */\r\n  @Input('multiple')\r\n  set multiple(multiple: boolean) {\r\n    this._multiple = coerceBooleanProperty(multiple);\r\n  }\r\n\r\n  /**\r\n   * fileDrop?: function\r\n   * Event emitted when a file or files are dropped in host element after being validated.\r\n   * Emits a [FileList | File] object.\r\n   */\r\n  @Output('fileDrop') onFileDrop: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\r\n\r\n  /**\r\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\r\n   */\r\n  @HostBinding('attr.multiple')\r\n  get multipleBinding(): string {\r\n    return this._multiple ? '' : undefined;\r\n  }\r\n\r\n  /**\r\n   * Binds native 'disabled' attribute if [disabled] property is 'true'.\r\n   */\r\n  @HostBinding('attr.disabled')\r\n  get disabledBinding(): string {\r\n    return this.disabled ? '' : undefined;\r\n  }\r\n\r\n  constructor(private _renderer: Renderer2, private _element: ElementRef) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Listens to 'drop' host event to get validated transfer items.\r\n   * Emits the 'onFileDrop' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\r\n   * Stops event propagation and default action from browser for 'drop' event.\r\n   */\r\n  @HostListener('drop', ['$event'])\r\n  onDrop(event: Event): void {\r\n    if (!this.disabled) {\r\n      let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\r\n      let files: FileList = transfer.files;\r\n      if (files.length) {\r\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\r\n        this.onFileDrop.emit(value);\r\n      }\r\n    }\r\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\r\n    this._stopEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Listens to 'dragover' host event to validate transfer items.\r\n   * Checks if 'multiple' attr exists in host to allow multiple file drops.\r\n   * Stops event propagation and default action from browser for 'dragover' event.\r\n   */\r\n  @HostListener('dragover', ['$event'])\r\n  onDragOver(event: Event): void {\r\n    let transfer: DataTransfer = (<DragEvent>event).dataTransfer;\r\n    transfer.dropEffect = this._typeCheck(transfer.types);\r\n    if (this.disabled || (!this._multiple &&\r\n      ((transfer.items && transfer.items.length > 1) || (<any>transfer).mozItemCount > 1))) {\r\n      transfer.dropEffect = 'none';\r\n    } else {\r\n      transfer.dropEffect = 'copy';\r\n    }\r\n    this._stopEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Listens to 'dragenter' host event to add animation class 'drop-zone' which can be overriden in host.\r\n   * Stops event propagation and default action from browser for 'dragenter' event.\r\n   */\r\n  @HostListener('dragenter', ['$event'])\r\n  onDragEnter(event: Event): void {\r\n    if (!this.disabled) {\r\n      this._renderer.addClass(this._element.nativeElement, 'drop-zone');\r\n    }\r\n    this._stopEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Listens to 'dragleave' host event to remove animation class 'drop-zone'.\r\n   * Stops event propagation and default action from browser for 'dragleave' event.\r\n   */\r\n  @HostListener('dragleave', ['$event'])\r\n  onDragLeave(event: Event): void {\r\n    this._renderer.removeClass(this._element.nativeElement, 'drop-zone');\r\n    this._stopEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Validates if the transfer item types are 'Files'.\r\n   */\r\n  private _typeCheck(types: string[] | DOMStringList): string {\r\n    let dropEffect: string = 'none';\r\n    if (types) {\r\n      if (((<any>types).contains && (<any>types).contains('Files'))\r\n      || ((<any>types).indexOf && (<any>types).indexOf('Files') !== -1)) {\r\n        dropEffect = 'copy';\r\n      }\r\n    }\r\n    return dropEffect;\r\n  }\r\n\r\n  private _stopEvent(event: Event): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n}\r\n",
    "import { Directive, Input, Output, EventEmitter } from '@angular/core';\r\nimport { HostListener, HostBinding, Host, Optional } from '@angular/core';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { NgModel } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[tdFileSelect]',\r\n})\r\nexport class TdFileSelectDirective {\r\n\r\n  private _multiple: boolean = false;\r\n\r\n  /**\r\n   * multiple?: boolean\r\n   * Sets whether multiple files can be selected at once in host element, or just a single file.\r\n   * Can also be 'multiple' native attribute.\r\n   */\r\n  @Input('multiple')\r\n  set multiple(multiple: boolean) {\r\n    this._multiple = coerceBooleanProperty(multiple);\r\n  }\r\n\r\n  /**\r\n   * fileSelect?: function\r\n   * Event emitted when a file or files are selected in host [HTMLInputElement].\r\n   * Emits a [FileList | File] object.\r\n   * Alternative to not use [(ngModel)].\r\n   */\r\n  @Output('fileSelect') onFileSelect: EventEmitter<FileList | File> = new EventEmitter<FileList | File>();\r\n\r\n  /**\r\n   * Binds native 'multiple' attribute if [multiple] property is 'true'.\r\n   */\r\n  @HostBinding('attr.multiple')\r\n  get multipleBinding(): string {\r\n    return this._multiple ? '' : undefined;\r\n  }\r\n\r\n  constructor(@Optional() @Host() private model: NgModel) {\r\n  }\r\n\r\n  /**\r\n   * Listens to 'change' host event to get [HTMLInputElement] files.\r\n   * Emits the 'onFileSelect' event with a [FileList] or [File] depending if 'multiple' attr exists in host.\r\n   * Uses [(ngModel)] if declared, instead of emitting 'onFileSelect' event.\r\n   */\r\n  @HostListener('change', ['$event'])\r\n  onChange(event: Event): void {\r\n    if (event.target instanceof HTMLInputElement) {\r\n      let fileInputEl: HTMLInputElement = (<HTMLInputElement>event.target);\r\n      let files: FileList = fileInputEl.files;\r\n      if (files.length) {\r\n        let value: FileList | File = this._multiple ? (files.length > 1 ? files : files[0]) : files[0];\r\n        this.model ? this.model.update.emit(value) : this.onFileSelect.emit(value);\r\n      }\r\n    }\r\n  }\r\n}\r\n"
  ],
  "names": [
    "tslib_1.__extends"
  ],
  "mappings": "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"
}
