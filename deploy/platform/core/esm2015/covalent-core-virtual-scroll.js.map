{
  "version": 3,
  "file": "covalent-core-virtual-scroll.js",
  "sources": [
    "ng://@covalent/core/virtual-scroll/out/virtual-scroll.module.ts",
    "ng://@covalent/core/virtual-scroll/out/virtual-scroll-container.component.ts",
    "ng://@covalent/core/virtual-scroll/out/virtual-scroll-row.directive.ts"
  ],
  "sourcesContent": [
    "import { NgModule, Type } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\r\nimport { TdVirtualScrollContainerComponent } from './virtual-scroll-container.component';\r\n\r\nconst TD_VIRTUAL_SCROLL: Type<any>[] = [\r\n  TdVirtualScrollRowDirective,\r\n  TdVirtualScrollContainerComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    TD_VIRTUAL_SCROLL,\r\n  ],\r\n  exports: [\r\n    TD_VIRTUAL_SCROLL,\r\n  ],\r\n})\r\nexport class CovalentVirtualScrollModule {\r\n\r\n}\r\n",
    "import { Component, Directive, Input, EventEmitter, ContentChild, AfterViewInit, ViewChild,\r\n         ChangeDetectionStrategy, ChangeDetectorRef, QueryList, ViewChildren, ElementRef, HostListener,\r\n         Renderer2, AfterViewChecked, OnDestroy, TrackByFunction } from '@angular/core';\r\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { TdVirtualScrollRowDirective } from './virtual-scroll-row.directive';\r\n\r\nconst TD_VIRTUAL_OFFSET: number = 2;\r\n\r\n@Component({\r\n  selector: 'td-virtual-scroll-container',\r\n  styles: [`:host{display:block;height:100%;width:100%;overflow:auto;position:relative}`],\r\n  template: `<div [style.height.px]=\"totalHeight\"></div>\r\n<div [style.transform]=\"offsetTransform\"\r\n      [style.position]=\"'absolute'\"\r\n      [style.width.%]=\"100\">\r\n  <ng-template let-row\r\n                let-index=\"index\"\r\n                ngFor\r\n                [ngForOf]=\"virtualData\"\r\n                [ngForTrackBy]=\"trackBy\">\r\n    <div #rowElement\r\n         [style.width.%]=\"100\">\r\n      <ng-template *ngIf=\"_rowTemplate\"\r\n                  [ngTemplateOutlet]=\"_rowTemplate.templateRef\"\r\n                  [ngTemplateOutletContext]=\"{row: row,\r\n                                      index: (fromRow + index),\r\n                                      first: (fromRow + index) === 0,\r\n                                      last: (fromRow + index) === (data.length - 1),\r\n                                      odd: ((fromRow + index + 1) % 2) === 1,\r\n                                      even: ((fromRow + index + 1) % 2) === 0}\">\r\n      </ng-template>\r\n    </div>\r\n  </ng-template>\r\n</div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TdVirtualScrollContainerComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\r\n\r\n  private _rowChangeSubs: Subscription;\r\n  private _initialized: boolean = false;\r\n\r\n  private _totalHeight: number = 0;\r\n  private _hostHeight: number = 0;\r\n  private _scrollVerticalOffset: number = 0;\r\n  private _offsetTransform: SafeStyle;\r\n\r\n  private _fromRow: number = 0;\r\n  private _toRow: number = 0;\r\n\r\n  private _data: any[];\r\n  private _virtualData: any[];\r\n\r\n  /**\r\n   * data: any[]\r\n   * List of items to virtually iterate on.\r\n   */\r\n  @Input('data')\r\n  set data(data: any[]) {\r\n    this._data = data;\r\n    if (this._initialized) {\r\n      this._calculateVirtualRows();\r\n    }\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  get data(): any[] {\r\n    return this._data;\r\n  }\r\n\r\n  get virtualData(): any[] {\r\n    return this._virtualData;\r\n  }\r\n\r\n  @ViewChildren('rowElement') _rows: QueryList<ElementRef>;\r\n\r\n  @ContentChild(TdVirtualScrollRowDirective) _rowTemplate: TdVirtualScrollRowDirective;\r\n\r\n  get rowHeight(): number {\r\n    if (this._rows && this._rows.toArray()[0]) {\r\n      return this._rows.toArray()[0].nativeElement.getBoundingClientRect().height;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  get totalHeight(): number {\r\n    return this._totalHeight;\r\n  }\r\n\r\n  get fromRow(): number {\r\n    return this._fromRow;\r\n  }\r\n\r\n  get toRow(): number {\r\n    return this._toRow;\r\n  }\r\n\r\n  get offsetTransform(): SafeStyle {\r\n    return this._offsetTransform;\r\n  }\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _domSanitizer: DomSanitizer,\r\n              private _renderer: Renderer2,\r\n              private _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this._rowChangeSubs = this._rows.changes.subscribe(() => {\r\n      this._calculateVirtualRows();\r\n    });\r\n    this._initialized = true;\r\n    this._calculateVirtualRows();\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    let newHostHeight: number = this._elementRef.nativeElement.getBoundingClientRect().height;\r\n    if (this._hostHeight !== newHostHeight) {\r\n      this._hostHeight = newHostHeight;\r\n      if (this._initialized) {\r\n        this._calculateVirtualRows();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._rowChangeSubs) {\r\n      this._rowChangeSubs.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * trackBy?: TrackByFunction\r\n   * This accepts the same trackBy function [ngFor] does.\r\n   * https://angular.io/api/core/TrackByFunction\r\n   */\r\n  @Input('trackBy') trackBy: TrackByFunction<any> =  (index: number, item: any) => {\r\n    return item;\r\n  }\r\n\r\n  @HostListener('scroll', ['$event'])\r\n  handleScroll(event: Event): void {\r\n    let element: HTMLElement = (<HTMLElement>event.target);\r\n    if (element) {\r\n      let verticalScroll: number = element.scrollTop;\r\n      if (this._scrollVerticalOffset !== verticalScroll) {\r\n        this._scrollVerticalOffset = verticalScroll;\r\n        if (this._initialized) {\r\n          this._calculateVirtualRows();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to refresh and recalculate the virtual rows\r\n   * e.g. after changing the [data] content\r\n   */\r\n  refresh(): void {\r\n    this._calculateVirtualRows();\r\n  }\r\n\r\n  /**\r\n   * Method to scroll to a specific row of the list.\r\n   */\r\n  scrollTo(row: number): void {\r\n    this._elementRef.nativeElement.scrollTop = row * this.rowHeight;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Method to scroll to the start of the list.\r\n   */\r\n  scrollToStart(): void {\r\n    this.scrollTo(0);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Method to scroll to the end of the list.\r\n   */\r\n  scrollToEnd(): void {\r\n    this.scrollTo(this.totalHeight / this.rowHeight);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private _calculateVirtualRows(): void {\r\n    if (this._data) {\r\n      this._totalHeight = this._data.length * this.rowHeight;\r\n      let fromRow: number = Math.floor((this._scrollVerticalOffset / this.rowHeight)) - TD_VIRTUAL_OFFSET;\r\n      this._fromRow = fromRow > 0 ? fromRow : 0;\r\n      let range: number = Math.floor((this._hostHeight / this.rowHeight)) + (TD_VIRTUAL_OFFSET * 2);\r\n      let toRow: number = range + this.fromRow;\r\n      if (isFinite(toRow) && toRow > this._data.length) {\r\n        toRow = this._data.length;\r\n      } else if (!isFinite(toRow)) {\r\n        toRow = TD_VIRTUAL_OFFSET;\r\n      }\r\n      this._toRow = toRow;\r\n    } else {\r\n      this._totalHeight = 0;\r\n      this._fromRow = 0;\r\n      this._toRow = 0;\r\n    }\r\n\r\n    let offset: number = 0;\r\n    if (this._scrollVerticalOffset > (TD_VIRTUAL_OFFSET * this.rowHeight)) {\r\n      offset = this.fromRow * this.rowHeight;\r\n    }\r\n\r\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\r\n    if (this._data) {\r\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\r\n    }\r\n    // mark for check at the end of the queue so we are sure\r\n    // that the changes will be marked\r\n    Promise.resolve().then(() => {\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n}\r\n",
    "import { Directive, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\r\n\r\n@Directive({selector: '[tdVirtualScrollRow]'})\r\nexport class TdVirtualScrollRowDirective extends TemplatePortalDirective {\r\n\r\n  constructor(templateRef: TemplateRef<any>,\r\n              viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n  \r\n}\r\n"
  ],
  "names": [],
  "mappings": "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"
}
