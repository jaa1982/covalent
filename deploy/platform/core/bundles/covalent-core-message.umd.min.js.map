{
  "version": 3,
  "file": "covalent-core-message.umd.min.js",
  "sources": [
    "ng://@covalent/core/message/out/message.component.ts",
    "ng://@covalent/core/message/out/message.module.ts"
  ],
  "sourcesContent": [
    "import { Component, Directive, Input, Renderer2, ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, ViewChild,\r\n         HostBinding, HostListener, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { TdCollapseAnimation, TdFadeInOutAnimation } from '@covalent/core/common';\r\n\r\n@Directive({\r\n  selector: '[tdMessageContainer]',\r\n})\r\nexport class TdMessageContainerDirective {\r\n  constructor(public viewContainer: ViewContainerRef) { }\r\n}\r\n\r\n@Component({\r\n  selector: 'td-message',\r\n  template: `<div tdMessageContainer></div>\r\n<ng-template>\r\n  <div class=\"td-message-wrapper\">\r\n    <mat-icon class=\"td-message-icon\">{{icon}}</mat-icon>\r\n    <div class=\"td-message-labels\">\r\n      <div *ngIf=\"label\" class=\"td-message-label\">{{label}}</div>\r\n      <div *ngIf=\"sublabel\" class=\"td-message-sublabel\">{{sublabel}}</div>\r\n    </div>\r\n    <ng-content select=\"[td-message-actions]\"></ng-content>\r\n  </div>\r\n</ng-template>`,\r\n  styles: [`:host{display:block}:host .td-message-wrapper{padding:8px 16px;min-height:52px;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}:host .td-message-wrapper .td-message-labels{-webkit-box-flex:1;-ms-flex:1;flex:1}.td-message-icon{margin-right:16px}::ng-deep [dir=rtl] .td-message-icon{margin-left:16px;margin-right:0}`],\r\n  animations: [\r\n    TdCollapseAnimation({ duration: 100 }),\r\n  ],\r\n})\r\nexport class TdMessageComponent implements AfterViewInit {\r\n\r\n  private _color: string;\r\n  private _opened: boolean = true;\r\n  private _hidden: boolean = false;\r\n  private _animating: boolean = false;\r\n  private _initialized: boolean = false;\r\n\r\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\r\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\r\n\r\n  /**\r\n   * Binding host to tdCollapse animation\r\n   */\r\n  @HostBinding('@tdCollapse')\r\n  get collapsedAnimation(): boolean {\r\n    return !this._opened;\r\n  }\r\n\r\n  /**\r\n   * Binding host to display style when hidden\r\n   */\r\n  @HostBinding('style.display')\r\n  get hidden(): string {\r\n    return this._hidden ? 'none' : undefined;\r\n  }\r\n\r\n  /**\r\n   * label: string\r\n   *\r\n   * Sets the label of the message.\r\n   */\r\n  @Input('label') label: string;\r\n\r\n  /**\r\n   * sublabel?: string\r\n   *\r\n   * Sets the sublabel of the message.\r\n   */\r\n  @Input('sublabel') sublabel: string;\r\n\r\n  /**\r\n   * icon?: string\r\n   *\r\n   * The icon to be displayed before the title.\r\n   * Defaults to `info_outline` icon\r\n   */\r\n  @Input('icon') icon: string = 'info_outline';\r\n\r\n  /**\r\n   * color?: primary | accent | warn\r\n   *\r\n   * Sets the color of the message.\r\n   * Can also use any material color: purple | light-blue, etc.\r\n   */\r\n  @Input('color')\r\n  set color(color: string) {\r\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\r\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\r\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\r\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\r\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\r\n    } else {\r\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\r\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\r\n    }\r\n    this._color = color;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n\r\n  /**\r\n   * opened?: boolean\r\n   *\r\n   * Shows or hiddes the message depending on its value.\r\n   * Defaults to 'true'.\r\n   */\r\n  @Input('opened')\r\n  set opened(opened: boolean) {\r\n    if (this._initialized) {\r\n      if (opened) {\r\n        this.open();\r\n      } else {\r\n        this.close();\r\n      }\r\n    } else {\r\n      this._opened = opened;\r\n    }\r\n  }\r\n  get opened(): boolean {\r\n    return this._opened;\r\n  }\r\n\r\n  constructor(private _renderer: Renderer2,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              private _elementRef: ElementRef) {\r\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\r\n  }\r\n\r\n  /**\r\n   * Detach element when close animation is finished to set animating state to false\r\n   * hidden state to true and detach element from DOM\r\n   */\r\n  @HostListener('@tdCollapse.done')\r\n  animationDoneListener(): void {\r\n    if (!this._opened) {\r\n      this._hidden = true;\r\n      this._detach();\r\n    }\r\n    this._animating = false;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Initializes the component and attaches the content.\r\n   */\r\n  ngAfterViewInit(): void {\r\n    Promise.resolve(undefined).then(() => {\r\n      if (this._opened) {\r\n        this._attach();\r\n      }\r\n      this._initialized = true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Renders the message on screen\r\n   * Validates if there is an animation currently and if its already opened\r\n   */\r\n  open(): void {\r\n    if (!this._opened && !this._animating) {\r\n      this._opened = true;\r\n      this._attach();\r\n      this._startAnimationState();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes the message content from screen.\r\n   * Validates if there is an animation currently and if its already closed\r\n   */\r\n  close(): void {\r\n    if (this._opened && !this._animating) {\r\n      this._opened = false;\r\n      this._startAnimationState();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles between open and close depending on state.\r\n   */\r\n  toggle(): void {\r\n    if (this._opened) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to set the state before starting an animation\r\n   */\r\n  private _startAnimationState(): void {\r\n    this._animating = true;\r\n    this._hidden = false;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Method to attach template to DOM\r\n   */\r\n  private _attach(): void {\r\n    this._childElement.viewContainer.createEmbeddedView(this._template);\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Method to detach template from DOM\r\n   */\r\n  private _detach(): void {\r\n    this._childElement.viewContainer.clear();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n",
    "import { Type } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\nimport { TdMessageComponent, TdMessageContainerDirective } from './message.component';\r\n\r\nconst TD_MESSAGE: Type<any>[] = [\r\n  TdMessageComponent,\r\n  TdMessageContainerDirective,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n  ],\r\n  declarations: [\r\n    TD_MESSAGE,\r\n  ],\r\n  exports: [\r\n    TD_MESSAGE,\r\n  ],\r\n})\r\nexport class CovalentMessageModule {\r\n\r\n}\r\n"
  ],
  "names": [
    "TdMessageContainerDirective",
    "viewContainer",
    "this",
    "type",
    "Directive",
    "args",
    "selector",
    "ViewContainerRef",
    "TdMessageComponent",
    "_renderer",
    "_changeDetectorRef",
    "_elementRef",
    "_opened",
    "_hidden",
    "_animating",
    "_initialized",
    "icon",
    "addClass",
    "nativeElement",
    "Object",
    "defineProperty",
    "prototype",
    "get",
    "undefined",
    "_color",
    "set",
    "color",
    "removeClass",
    "markForCheck",
    "opened",
    "open",
    "close",
    "animationDoneListener",
    "_detach",
    "ngAfterViewInit",
    "_this",
    "Promise",
    "resolve",
    "then",
    "_attach",
    "_startAnimationState",
    "toggle",
    "_childElement",
    "createEmbeddedView",
    "_template",
    "clear",
    "Component",
    "template",
    "styles",
    "animations",
    "TdCollapseAnimation",
    "duration",
    "Renderer2",
    "ChangeDetectorRef",
    "ElementRef",
    "ViewChild",
    "TemplateRef",
    "collapsedAnimation",
    "HostBinding",
    "hidden",
    "label",
    "Input",
    "sublabel",
    "HostListener",
    "TD_MESSAGE",
    "CovalentMessageModule",
    "NgModule",
    "imports",
    "CommonModule",
    "MatIconModule",
    "declarations",
    "exports"
  ],
  "mappings": "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"
}
