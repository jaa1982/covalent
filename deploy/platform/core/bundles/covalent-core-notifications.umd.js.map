{
  "version": 3,
  "file": "covalent-core-notifications.umd.js",
  "sources": [
    "ng://@covalent/core/notifications/out/notifications.module.ts",
    "ng://@covalent/core/notifications/out/notification-count.component.ts"
  ],
  "sourcesContent": [
    "import { Type } from '@angular/core';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TdNotificationCountComponent } from './notification-count.component';\r\n\r\nconst TD_NOTIFICATIONS: Type<any>[] = [\r\n  TdNotificationCountComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  declarations: [\r\n    TD_NOTIFICATIONS,\r\n  ],\r\n  exports: [\r\n    TD_NOTIFICATIONS,\r\n  ],\r\n})\r\nexport class CovalentNotificationsModule {\r\n\r\n}\r\n",
    "import { Component, Input, HostBinding, ChangeDetectionStrategy,\r\n         ViewChild, ElementRef, AfterContentInit } from '@angular/core';\r\n\r\nexport enum TdNotificationCountPositionY {\r\n  Top = 'top',\r\n  Bottom = 'bottom',\r\n  Center = 'center',\r\n}\r\n\r\nexport enum TdNotificationCountPositionX {\r\n  Before = 'before',\r\n  After = 'after',\r\n  Center = 'center',\r\n}\r\n\r\n@Component({\r\n  selector: 'td-notification-count',\r\n  styles: [`:host{position:relative;display:block;text-align:center;min-width:40px;height:40px}:host.td-notification-hidden{min-width:0}.td-notification-count{line-height:21px;width:20px;height:20px;position:absolute;font-size:10px;font-weight:600;border-radius:50%;z-index:1}.td-notification-count.td-notification-center-x{margin-left:auto;margin-right:auto;left:0;right:0}.td-notification-count.td-notification-center-y{margin-top:auto;margin-bottom:auto;top:0;bottom:0}.td-notification-count.td-notification-top{top:0}.td-notification-count.td-notification-bottom{bottom:0}.td-notification-count.td-notification-before{left:0}.td-notification-count.td-notification-after{right:0}.td-notification-count.td-notification-no-count{width:8px;height:8px}.td-notification-count.td-notification-no-count.td-notification-top{top:8px}.td-notification-count.td-notification-no-count.td-notification-bottom{bottom:8px}.td-notification-count.td-notification-no-count.td-notification-before{left:8px}.td-notification-count.td-notification-no-count.td-notification-after{right:8px}::ng-deep [dir=rtl] .td-notification-count.td-notification-before{right:0;left:auto}::ng-deep [dir=rtl] .td-notification-count.td-notification-after{left:0;right:auto}::ng-deep [dir=rtl] .td-notification-count.td-notification-no-count.td-notification-before{right:8px;left:auto}::ng-deep [dir=rtl] .td-notification-count.td-notification-no-count.td-notification-after{left:8px;right:auto}.td-notification-content,.td-notification-content ::ng-deep>*{line-height:40px}`],\r\n  template: `<div #content class=\"td-notification-content\">\r\n  <ng-content></ng-content>\r\n</div>\r\n<div *ngIf=\"show\"\r\n     class=\"td-notification-count mat-{{color}}\"\r\n     [class.td-notification-top]=\"positionY === 'top'\"\r\n     [class.td-notification-bottom]=\"positionY === 'bottom'\"\r\n     [class.td-notification-before]=\"positionX === 'before'\"\r\n     [class.td-notification-after]=\"positionX === 'after'\"\r\n     [class.td-notification-center-y]=\"positionY === 'center'\"\r\n     [class.td-notification-center-x]=\"positionX === 'center'\"\r\n     [class.td-notification-no-count]=\"noCount\">\r\n  {{noCount ? '' : notificationsDisplay}}\r\n</div>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TdNotificationCountComponent implements AfterContentInit {\r\n\r\n  private _notifications: number | boolean = 0;\r\n  private _positionY: TdNotificationCountPositionY;\r\n  private _positionX: TdNotificationCountPositionX;\r\n\r\n  /**\r\n   * Div content wrapper of `ng-content`.\r\n   */\r\n  @ViewChild('content') content: ElementRef;\r\n\r\n  /**\r\n   * color?: \"primary\" | \"accent\" | \"warn\"\r\n   * Sets the theme color of the notification tip. Defaults to \"warn\"\r\n   */\r\n  @Input() color: 'primary' | 'accent' | 'warn' = 'warn';\r\n\r\n  /**\r\n   * positionX?: TdNotificationCountPositionX or \"before\" | \"after\" | \"center\"\r\n   * Sets the X position of the notification tip.\r\n   * Defaults to \"after\" if it has content, else 'center'.\r\n   */\r\n  @Input()\r\n  set positionX(positionX: TdNotificationCountPositionX) {\r\n    this._positionX = positionX;\r\n  }\r\n  get positionX(): TdNotificationCountPositionX {\r\n    return this._positionX;\r\n  }\r\n\r\n  /**\r\n   * positionY?: TdNotificationCountPositionY or \"top\" | \"bottom\" | \"center\"\r\n   * Sets the Y position of the notification tip.\r\n   * Defaults to \"top\" if it has content, else 'center'.\r\n   */\r\n  @Input()\r\n  set positionY(positionY: TdNotificationCountPositionY) {\r\n    this._positionY = positionY;\r\n  }\r\n  get positionY(): TdNotificationCountPositionY {\r\n    return this._positionY;\r\n  }\r\n\r\n  /**\r\n   * notifications?: number | boolean\r\n   * Number for the notification count. Shows component only if the input is a positive number or 'true'\r\n   */\r\n  @Input()\r\n  set notifications(notifications: number | boolean) {\r\n    this._notifications = notifications;\r\n  }\r\n\r\n  @HostBinding('class.td-notification-hidden')\r\n  get hideHost(): boolean {\r\n    return !this.show && !this._hasContent();\r\n  }\r\n\r\n  /**\r\n   * Sets the component in its 'noCount' state if [notifications] is a boolean 'true'.\r\n   * Makes the notification tip show without a count.\r\n   */\r\n  get noCount(): string | boolean {\r\n    return this._notifications === true;\r\n  }\r\n\r\n  /**\r\n   * Notification display string when a count is available.\r\n   * Anything over 99 gets set as 99+\r\n   */\r\n  get notificationsDisplay(): string {\r\n    if (this._notifications > 99) {\r\n      return '99+';\r\n    }\r\n    return this._notifications.toString();\r\n  }\r\n\r\n  /**\r\n   * Shows notification tip only when [notifications] is true or a positive integer.\r\n   */\r\n  get show(): boolean {\r\n    return this._notifications === true || (!isNaN(<any>this._notifications) && this._notifications > 0);\r\n  }\r\n\r\n  /**\r\n   * Check if [positionX] and [positionY] have been set as inputs, else use defaults depending on component content.\r\n   */\r\n  ngAfterContentInit(): void {\r\n    if (!this._positionX) {\r\n      this.positionX = this._hasContent() ? TdNotificationCountPositionX.After : TdNotificationCountPositionX.Center;\r\n    }\r\n    if (!this._positionY) {\r\n      this.positionY = this._hasContent() ? TdNotificationCountPositionY.Top : TdNotificationCountPositionY.Center;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to check if element has any kind of content (elements or text)\r\n   */\r\n  private _hasContent(): boolean {\r\n    if (this.content) {\r\n      let contentElement: HTMLElement = this.content.nativeElement;\r\n      return contentElement && (contentElement.children.length > 0 || !!contentElement.textContent.trim());\r\n    }\r\n    return false;\r\n  }\r\n\r\n}\r\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "HostBinding",
    "Input",
    "ViewChild",
    "ChangeDetectionStrategy",
    "Component"
  ],
  "mappings": ";;;;;;;ICIA,GAAA,EAAQ,KAAK;IACb,MAAA,EAAW,QAAQ;IACnB,MAAA,EAAW,QAAQ;;;IAInB,MAAA,EAAW,QAAQ;IACnB,KAAA,EAAU,OAAO;IACjB,MAAA,EAAW,QAAQ;;AAsBnB,IAAA,4BAAA,kBAAA,YAAA;;QAEA,IAAA,CAAA,cAAA,GAA6C,CAAC,CAA9C;QAaA,IAAA,CAAA,KAAA,GAAkD,MAAM,CAAxD;;IAQA,MAAA,CAAA,cAAA,CAAM,4BAAN,CAAA,SAAA,EAAA,WAAe,EAAf;QAGA,GAAA,EAAE,YAAF;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;QALH,GAAA,EAAA,UAAgB,SAAuC,EAAvD;YACI,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;;;;IAYhC,MAAA,CAAA,cAAA,CAAM,4BAAN,CAAA,SAAA,EAAA,WAAe,EAAf;QAGA,GAAA,EAAE,YAAF;YACI,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;QALH,GAAA,EAAA,UAAgB,SAAuC,EAAvD;YACI,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;;;;;IAWhC,MAAA,CAAA,cAAA,CAAM,4BAAN,CAAA,SAAA,EAAA,eAAmB,EAAnB;QAAA,GAAA,EAAA,UAAoB,aAA+B,EAAnD;YACI,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;;;;;IAIxC,MAAA,CAAA,cAAA,CAAM,4BAAN,CAAA,SAAA,EAAA,UAAc,EAAd;QAAA,GAAA,EAAA,YAAA;YACI,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;;;;;IAO3C,MAAF,CAAA,cAAA,CAAM,4BAAN,CAAA,SAAA,EAAA,SAAa,EAAb;QAAA,GAAA,EAAE,YAAF;YACI,OAAO,IAAI,CAAC,cAAc,KAAK,IAAI,CAAC;SACrC;;;KAAH,CAAA,CAAG;IAMD,MAAF,CAAA,cAAA,CAAM,4BAAN,CAAA,SAAA,EAAA,sBAA0B,EAA1B;QAAA,GAAA,EAAE,YAAF;YACI,IAAI,IAAI,CAAC,cAAc,GAAG,EAAE,EAAE;gBAC5B,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;SACvC;;;KAAH,CAAA,CAAG;IAKD,MAAF,CAAA,cAAA,CAAM,4BAAN,CAAA,SAAA,EAAA,MAAU,EAAV;QAAA,GAAA,EAAE,YAAF;YACI,OAAO,IAAI,CAAC,cAAc,KAAK,IAAI,KAAK,CAAC,KAAK,EAAM,IAAI,CAAC,cAAc,EAAC,IAAI,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;SACtG;;;KAAH,CAAA,CAAG;IAKD,4BAAF,CAAA,SAAA,CAAA,kBAAoB,GAAlB,YAAF;QACI,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,4BAA4B,CAAC,KAAK,GAAG,4BAA4B,CAAC,MAAM,CAAC;SAChH;QACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,4BAA4B,CAAC,GAAG,GAAG,4BAA4B,CAAC,MAAM,CAAC;SAC9G;KACF,CAAH;IAKU,4BAAV,CAAA,SAAA,CAAA,WAAqB,GAAX,YAAV;QACI,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,cAAc,GAAgB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;YAC7D,OAAO,cAAc,KAAK,cAAc,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC;SACtG;QACD,OAAO,KAAK,CAAC;;;;;IA1HjB,EAAA,IAAA,EAACM,cAAS,EAAV,IAAA,EAAA,CAAW;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,MAAM,EAAE,CAAC,s/CAAs/C,CAAC;gBAChgD,QAAQ,EAAE,moBAaL;gBACL,eAAe,EAAED,4BAAuB,CAAC,MAAM;aAChD,EAAD,EAAA;;;;IAUA,SAAA,EAAA,CAAA,EAAA,IAAA,EAAGD,cAAS,EAAZ,IAAA,EAAA,CAAa,SAAS,EAAtB,EAAA,EAAA;IAMA,OAAA,EAAA,CAAA,EAAA,IAAA,EAAGD,UAAK,EAAR,EAAA;IAOA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAaA,WAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAYA,eAAA,EAAA,CAAA,EAAA,IAAA,EAAGA,UAAK,EAAR,EAAA;IAKA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAGD,gBAAW,EAAd,IAAA,EAAA,CAAe,8BAA8B,EAA7C,EAAA,EAAA;;ADrFA,IAMM,gBAAgB,GAAgB;IACpC,4BAA4B;CAC7B,CAAC;AAaF,IAAA,2BAAA,kBAAA,YAAA;IAAA,SAAA,2BAAA,GAAA;;;;;IAXA,EAAA,IAAA,EAACD,aAAQ,EAAT,IAAA,EAAA,CAAU;gBACR,OAAO,EAAE;oBACPD,mBAAY;iBACb;gBACD,YAAY,EAAE;oBACZ,gBAAgB;iBACjB;gBACD,OAAO,EAAE;oBACP,gBAAgB;iBACjB;aACF,EAAD,EAAA;;;;;;;;;;;;;;;;;"
}
