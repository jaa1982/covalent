{
  "version": 3,
  "file": "covalent-core-loading.umd.js",
  "sources": [
    "ng://@covalent/core/loading/out/loading.module.ts",
    "ng://@covalent/core/loading/out/directives/loading.directive.ts",
    "ng://@covalent/core/loading/out/services/loading.service.ts",
    "ng://@covalent/core/loading/out/services/loading.factory.ts",
    "ng://@covalent/core/loading/out/loading.component.ts",
    "ng://@covalent/core/loading/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import { Type } from '@angular/core';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\nimport { TdLoadingService, LOADING_PROVIDER } from './services/loading.service';\r\nimport { TdLoadingFactory, LOADING_FACTORY_PROVIDER } from './services/loading.factory';\r\nimport { TdLoadingDirective } from './directives/loading.directive';\r\nimport { TdLoadingComponent } from './loading.component';\r\n\r\nconst TD_LOADING: Type<any>[] = [\r\n  TdLoadingComponent,\r\n  TdLoadingDirective,\r\n];\r\n\r\nconst TD_LOADING_ENTRY_COMPONENTS: Type<any>[] = [\r\n  TdLoadingComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n  ],\r\n  declarations: [\r\n    TD_LOADING,\r\n  ],\r\n  exports: [\r\n    TD_LOADING,\r\n  ],\r\n  providers: [\r\n    LOADING_FACTORY_PROVIDER,\r\n    LOADING_PROVIDER,\r\n  ],\r\n  entryComponents: [\r\n    TD_LOADING_ENTRY_COMPONENTS,\r\n  ],\r\n})\r\nexport class CovalentLoadingModule {\r\n\r\n}\r\n",
    "import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\r\n\r\nimport { LoadingType, LoadingMode, LoadingStrategy, TdLoadingComponent } from '../loading.component';\r\nimport { TdLoadingService } from '../services/loading.service';\r\nimport { ILoadingRef } from '../services/loading.factory';\r\n\r\n/**\r\n * Context class for variable reference\r\n */\r\nexport class TdLoadingContext {\r\n  public $implicit: any = undefined;\r\n  public tdLoading: any = undefined;\r\n}\r\n\r\n// Constant for generation of the id for the next component\r\nlet TD_LOADING_NEXT_ID: number = 0;\r\n\r\n@Directive({\r\n  selector: '[tdLoading]',\r\n})\r\nexport class TdLoadingDirective implements OnInit, OnDestroy {\r\n\r\n  private _context: TdLoadingContext = new TdLoadingContext();\r\n  private _type: LoadingType;\r\n  private _mode: LoadingMode;\r\n  private _strategy: LoadingStrategy;\r\n  private _name: string;\r\n  private _loadingRef: ILoadingRef;\r\n\r\n  /**\r\n   * tdLoading: string\r\n   * Name reference of the loading mask, used to register/resolve requests to the mask.\r\n   */\r\n  @Input('tdLoading')\r\n  set name(name: string) {\r\n    if (!this._name) {\r\n      if (name) {\r\n        this._name = name;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tdLoadingUntil?: any\r\n   * If its null, undefined or false it will be used to register requests to the mask.\r\n   * Else if its any value that can be resolved as true, it will resolve the mask.\r\n   * [name] is optional when using [until], but can still be used to register/resolve it manually.\r\n   */\r\n  @Input('tdLoadingUntil')\r\n  set until(until: any) {\r\n    if (!this._name) {\r\n      this._name = 'td-loading-until-' + TD_LOADING_NEXT_ID++;\r\n    }\r\n    this._context.$implicit = this._context.tdLoading = until;\r\n    if (!until) {\r\n      this._loadingService.register(this._name);\r\n    } else {\r\n      this._loadingService.resolveAll(this._name);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tdLoadingType?: LoadingType or ['linear' | 'circular']\r\n   * Sets the type of loading mask depending on value.\r\n   * Defaults to [LoadingType.Circular | 'circular'].\r\n   */\r\n  @Input('tdLoadingType')\r\n  set type(type: LoadingType) {\r\n    switch (type) {\r\n      case LoadingType.Linear:\r\n        this._type = LoadingType.Linear;\r\n        break;\r\n      default:\r\n        this._type = LoadingType.Circular;\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tdLoadingMode?: LoadingMode or ['determinate' | 'indeterminate']\r\n   * Sets the mode of loading mask depending on value.\r\n   * Defaults to [LoadingMode.Indeterminate | 'indeterminate'].\r\n   */\r\n  @Input('tdLoadingMode')\r\n  set mode(mode: LoadingMode) {\r\n    switch (mode) {\r\n      case LoadingMode.Determinate:\r\n        this._mode = LoadingMode.Determinate;\r\n        break;\r\n      default:\r\n        this._mode = LoadingMode.Indeterminate;\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tdLoadingStrategy?: LoadingStrategy or ['replace' | 'overlay']\r\n   * Sets the strategy of loading mask depending on value.\r\n   * Defaults to [LoadingMode.Replace | 'replace'].\r\n   */\r\n  @Input('tdLoadingStrategy')\r\n  set strategy(stategy: LoadingStrategy) {\r\n    switch (stategy) {\r\n      case LoadingStrategy.Overlay:\r\n        this._strategy = LoadingStrategy.Overlay;\r\n        break;\r\n      default:\r\n        this._strategy = LoadingStrategy.Replace;\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * tdLoadingColor?: \"primary\" | \"accent\" | \"warn\"\r\n   * Sets the theme color of the loading component. Defaults to \"primary\"\r\n   */\r\n  @Input('tdLoadingColor') color: 'primary' | 'accent' | 'warn' = 'primary';\r\n\r\n  constructor(private _viewContainerRef: ViewContainerRef,\r\n              private _templateRef: TemplateRef<TdLoadingContext>,\r\n              private _loadingService: TdLoadingService) {}\r\n\r\n  /**\r\n   * Registers component in the DOM, so it will be available when calling resolve/register.\r\n   */\r\n  ngOnInit(): void {\r\n    this._registerComponent();\r\n  }\r\n\r\n  /**\r\n   * Remove component when directive is destroyed.\r\n   */\r\n  ngOnDestroy(): void {\r\n    this._loadingService.removeComponent(this._name);\r\n    this._loadingRef = undefined;\r\n  }\r\n\r\n  /**\r\n   * Creates [TdLoadingComponent] and attaches it to this directive's [ViewContainerRef].\r\n   * Passes this directive's [TemplateRef] to modify DOM depending on loading `strategy`.\r\n   */\r\n  private _registerComponent(): void {\r\n    if (!this._name) {\r\n      throw new Error('Name is needed to register loading directive');\r\n    }\r\n    // Check if `TdLoadingComponent` has been created before trying to add one again.\r\n    // There is a weird edge case when using `[routerLinkActive]` that calls the `ngOnInit` twice in a row\r\n    if (!this._loadingRef) {\r\n      this._loadingRef = this._loadingService.createComponent({\r\n        name: this._name,\r\n        type: this._type,\r\n        mode: this._mode,\r\n        color: this.color,\r\n        strategy: this._strategy,\r\n      }, this._viewContainerRef, this._templateRef, this._context);\r\n    }\r\n  }\r\n}\r\n",
    "import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\r\nimport { ViewContainerRef, TemplateRef } from '@angular/core';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\n\r\nimport { TdLoadingContext } from '../directives/loading.directive';\r\nimport { TdLoadingComponent, LoadingMode, LoadingStrategy, LoadingType } from '../loading.component';\r\nimport { TdLoadingFactory, ILoadingRef } from './loading.factory';\r\n\r\nexport interface ITdLoadingConfig {\r\n  name: string;\r\n  type?: LoadingType;\r\n  mode?: LoadingMode;\r\n  color?: 'primary' | 'accent' | 'warn';\r\n}\r\n\r\nexport class TdLoadingConfig implements ITdLoadingConfig {\r\n  name: string;\r\n  type?: LoadingType;\r\n  mode?: LoadingMode;\r\n  color?: 'primary' | 'accent' | 'warn';\r\n\r\n  constructor(config: ITdLoadingConfig) {\r\n    this.name = config.name;\r\n    if (!this.name) {\r\n      throw Error('Name is required for [TdLoading] configuration.');\r\n    }\r\n    this.mode = config.mode ? config.mode : LoadingMode.Indeterminate;\r\n    this.type = config.type ? config.type : LoadingType.Circular;\r\n    this.color = config.color ? config.color : 'primary';\r\n  }\r\n}\r\n\r\nexport interface ITdLoadingDirectiveConfig extends ITdLoadingConfig {\r\n  strategy?: LoadingStrategy;\r\n}\r\n\r\nexport class TdLoadingDirectiveConfig extends TdLoadingConfig implements ITdLoadingDirectiveConfig {\r\n  name: string;\r\n  type: LoadingType;\r\n  mode: LoadingMode;\r\n  strategy: LoadingStrategy;\r\n\r\n  constructor(config: ITdLoadingDirectiveConfig) {\r\n    super(config);\r\n    this.strategy = config.strategy ? config.strategy : LoadingStrategy.Replace;\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class TdLoadingService {\r\n\r\n  private _context: {[key: string]: ILoadingRef} = {};\r\n  private _timeouts: {[key: string]: any} = {};\r\n\r\n  constructor(private _loadingFactory: TdLoadingFactory) {\r\n    this.create({\r\n      name: 'td-loading-main',\r\n    });\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - config: ILoadingDirectiveConfig\r\n   * - viewContainerRef: ViewContainerRef\r\n   * - templateRef: TemplateRef<Object>\r\n   *\r\n   * Creates an replace loading mask and attaches it to the viewContainerRef.\r\n   * Replaces the templateRef with the mask when a request is registered on it.\r\n   *\r\n   * NOTE: @internal usage only.\r\n   */\r\n  createComponent(config: ITdLoadingDirectiveConfig, viewContainerRef: ViewContainerRef,\r\n                  templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\r\n    let directiveConfig: TdLoadingDirectiveConfig = new TdLoadingDirectiveConfig(config);\r\n    if (this._context[directiveConfig.name]) {\r\n      throw Error(`Name duplication: [TdLoading] directive has a name conflict with ${directiveConfig.name}.`);\r\n    }\r\n    if (directiveConfig.strategy === LoadingStrategy.Overlay) {\r\n      this._context[directiveConfig.name] = this._loadingFactory.createOverlayComponent(directiveConfig, viewContainerRef, templateRef);\r\n    } else {\r\n      this._context[directiveConfig.name] = this._loadingFactory.createReplaceComponent(directiveConfig, viewContainerRef, templateRef, context);\r\n    }\r\n    return this._context[directiveConfig.name];\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - config: ITdLoadingConfig\r\n   *\r\n   * Creates a fullscreen loading mask and attaches it to the DOM with the given configuration.\r\n   * Only displayed when the mask has a request registered on it.\r\n   */\r\n  public create(config: ITdLoadingConfig): void {\r\n    let fullscreenConfig: TdLoadingConfig = new TdLoadingConfig(config);\r\n    this.removeComponent(fullscreenConfig.name);\r\n    this._context[fullscreenConfig.name] = this._loadingFactory.createFullScreenComponent(fullscreenConfig);\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - name: string\r\n   *\r\n   * Removes `loading` component from service context.\r\n   */\r\n  public removeComponent(name: string): void {\r\n    if (this._context[name]) {\r\n      this._context[name].subject.unsubscribe();\r\n      if (this._context[name].componentRef) {\r\n        this._context[name].componentRef.destroy();\r\n      }\r\n      this._context[name] = undefined;\r\n      delete this._context[name];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - name: string\r\n   * - registers?: number\r\n   * returns: true if successful\r\n   *\r\n   * Resolves a request for the loading mask referenced by the name parameter.\r\n   * Can optionally pass registers argument to set a number of register calls.\r\n   *\r\n   * If no paramemeters are used, then default main mask will be used.\r\n   *\r\n   * e.g. loadingService.register()\r\n   */\r\n  public register(name: string = 'td-loading-main', registers: number = 1): boolean {\r\n    // try registering into the service if the loading component has been instanciated or if it exists.\r\n    if (this._context[name]) {\r\n      registers = registers < 1 ? 1 : registers;\r\n      this._context[name].times += registers;\r\n      this._context[name].subject.next(this._context[name].times);\r\n      return true;\r\n    } else {\r\n      // if it doesnt exist, set a timeout so its registered after change detection happens\r\n      // this in case \"register\" occured on the `ngOnInit` lifehook cycle.\r\n      if (!this._timeouts[name]) {\r\n        this._timeouts[name] = setTimeout(() => {\r\n          this.register(name, registers);\r\n        });\r\n      } else {\r\n        // if it timeout occured and still doesnt exist, it means the tiemout wasnt needed so we clear it.\r\n        this._clearTimeout(name);\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - name: string\r\n   * - resolves?: number\r\n   * returns: true if successful\r\n   *\r\n   * Resolves a request for the loading mask referenced by the name parameter.\r\n   * Can optionally pass resolves argument to set a number of resolve calls.\r\n   *\r\n   * If no paramemeters are used, then default main mask will be used.\r\n   *\r\n   * e.g. loadingService.resolve()\r\n   */\r\n  public resolve(name: string = 'td-loading-main', resolves: number = 1): boolean {\r\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\r\n    this._clearTimeout(name);\r\n    if (this._context[name]) {\r\n      resolves = resolves < 1 ? 1 : resolves;\r\n      if (this._context[name].times > 0) {\r\n        let times: number = this._context[name].times;\r\n        times -= resolves;\r\n        this._context[name].times = times < 0 ? 0 : times;\r\n      }\r\n      this._context[name].subject.next(this._context[name].times);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - name: string\r\n   * returns: true if successful\r\n   *\r\n   * Resolves all request for the loading mask referenced by the name parameter.\r\n   *\r\n   * If no paramemeters are used, then default main mask will be used.\r\n   *\r\n   * e.g. loadingService.resolveAll()\r\n   */\r\n  public resolveAll(name: string = 'td-loading-main'): boolean {\r\n    // clear timeout if the loading component is \"resolved\" before its \"registered\"\r\n    this._clearTimeout(name);\r\n    if (this._context[name]) {\r\n      this._context[name].times = 0;\r\n      this._context[name].subject.next(this._context[name].times);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - name: string\r\n   * - value: number\r\n   * returns: true if successful\r\n   *\r\n   * Set value on a loading mask referenced by the name parameter.\r\n   * Usage only available if its mode is 'determinate' and if loading is showing.\r\n   */\r\n  public setValue(name: string, value: number): boolean {\r\n    if (this._context[name]) {\r\n      let instance: TdLoadingComponent = this._context[name].componentRef.instance;\r\n      if (instance.mode === LoadingMode.Determinate && instance.animation) {\r\n        instance.value = value;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Clears timeout linked to the name.\r\n   * @param name Name of the loading component to be cleared\r\n   */\r\n  private _clearTimeout(name: string): void {\r\n    clearTimeout(this._timeouts[name]);\r\n    delete this._timeouts[name];\r\n  }\r\n}\r\n\r\nexport function LOADING_PROVIDER_FACTORY(\r\n    parent: TdLoadingService, loadingFactory: TdLoadingFactory): TdLoadingService {\r\n  return parent || new TdLoadingService(loadingFactory);\r\n}\r\n\r\nexport const LOADING_PROVIDER: Provider = {\r\n  // If there is already a service available, use that. Otherwise, provide a new one.\r\n  provide: TdLoadingService,\r\n  deps: [[new Optional(), new SkipSelf(), TdLoadingService], TdLoadingFactory],\r\n  useFactory: LOADING_PROVIDER_FACTORY,\r\n};\r\n",
    "import { Injectable, ComponentFactoryResolver, ChangeDetectorRef, Provider, SkipSelf, Optional } from '@angular/core';\r\nimport { Injector, ComponentRef, ViewContainerRef, TemplateRef } from '@angular/core';\r\nimport { TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\r\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\n\r\nimport { TdLoadingContext } from '../directives/loading.directive';\r\nimport { TdLoadingComponent, LoadingType, LoadingMode, LoadingStrategy, LoadingStyle } from '../loading.component';\r\nimport { ITdLoadingConfig } from './loading.service';\r\n\r\nexport interface IInternalLoadingOptions extends ITdLoadingConfig {\r\n  height?: number;\r\n  style?: LoadingStyle;\r\n}\r\n\r\nexport interface ILoadingRef {\r\n  observable: Observable<any>;\r\n  componentRef: ComponentRef<any>;\r\n  subject?: Subject<any>;\r\n  times?: number;\r\n}\r\n\r\n/**\r\n * NOTE: @internal usage only.\r\n */\r\n@Injectable()\r\nexport class TdLoadingFactory {\r\n\r\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\r\n              private _overlay: Overlay,\r\n              private _injector: Injector) {\r\n  }\r\n\r\n  /**\r\n   * Uses material `Overlay` services to create a DOM element and attach the loading component\r\n   * into it. Leveraging the state and configuration from it.\r\n   *\r\n   * Saves a reference in context to be called when registering/resolving the loading element.\r\n   */\r\n  public createFullScreenComponent(options: ITdLoadingConfig): ILoadingRef {\r\n    (<IInternalLoadingOptions>options).height = undefined;\r\n    (<IInternalLoadingOptions>options).style = LoadingStyle.FullScreen;\r\n    let loadingRef: ILoadingRef = this._initializeContext();\r\n    let loading: boolean = false;\r\n    let overlayRef: OverlayRef;\r\n    loadingRef.observable\r\n    .subscribe((registered: number) => {\r\n      if (registered > 0 && !loading) {\r\n        loading = true;\r\n        overlayRef = this._createOverlay();\r\n        loadingRef.componentRef = overlayRef.attach(new ComponentPortal(TdLoadingComponent));\r\n        this._mapOptions(options, loadingRef.componentRef.instance);\r\n        loadingRef.componentRef.instance.startInAnimation();\r\n        loadingRef.componentRef.changeDetectorRef.detectChanges();\r\n      } else if (registered <= 0 && loading) {\r\n        loading = false;\r\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\r\n          subs.unsubscribe();\r\n          loadingRef.componentRef.destroy();\r\n          overlayRef.detach();\r\n          overlayRef.dispose();\r\n        });\r\n      }\r\n    });\r\n    return loadingRef;\r\n  }\r\n\r\n  /**\r\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\r\n   * Leverages TemplatePortals from material to inject the template inside of it so it fits\r\n   * perfectly when overlaying it.\r\n   *\r\n   * Saves a reference in context to be called when registering/resolving the loading element.\r\n   */\r\n  public createOverlayComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\r\n                                templateRef: TemplateRef<Object>): ILoadingRef {\r\n    (<IInternalLoadingOptions>options).height = undefined;\r\n    (<IInternalLoadingOptions>options).style = LoadingStyle.Overlay;\r\n    let loadingRef: ILoadingRef = this._createComponent(options);\r\n    let loading: boolean = false;\r\n    loadingRef.componentRef.instance.content = new TemplatePortal(templateRef, viewContainerRef);\r\n    viewContainerRef.clear();\r\n    viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\r\n    loadingRef.observable\r\n    .subscribe((registered: number) => {\r\n      if (registered > 0 && !loading) {\r\n        loading = true;\r\n        loadingRef.componentRef.instance.startInAnimation();\r\n      } else if (registered <= 0 && loading) {\r\n        loading = false;\r\n        loadingRef.componentRef.instance.startOutAnimation();\r\n      }\r\n    });\r\n    return loadingRef;\r\n  }\r\n\r\n  /**\r\n   * Creates a loading component dynamically and attaches it into the given viewContainerRef.\r\n   * Replaces the template with the loading component depending if it was registered or resolved.\r\n   *\r\n   * Saves a reference in context to be called when registering/resolving the loading element.\r\n   */\r\n  public createReplaceComponent(options: ITdLoadingConfig, viewContainerRef: ViewContainerRef,\r\n                                templateRef: TemplateRef<Object>, context: TdLoadingContext): ILoadingRef {\r\n    let nativeElement: HTMLElement = <HTMLElement>templateRef.elementRef.nativeElement;\r\n    (<IInternalLoadingOptions>options).height = nativeElement.nextElementSibling ?\r\n      nativeElement.nextElementSibling.scrollHeight : undefined;\r\n    (<IInternalLoadingOptions>options).style = LoadingStyle.None;\r\n    let loadingRef: ILoadingRef = this._createComponent(options);\r\n    let loading: boolean = false;\r\n    viewContainerRef.createEmbeddedView(templateRef, context);\r\n    loadingRef.observable\r\n    .subscribe((registered: number) => {\r\n      if (registered > 0 && !loading) {\r\n        loading = true;\r\n        let index: number = viewContainerRef.indexOf(loadingRef.componentRef.hostView);\r\n        if (index < 0) {\r\n          viewContainerRef.clear();\r\n          viewContainerRef.insert(loadingRef.componentRef.hostView, 0);\r\n        }\r\n        loadingRef.componentRef.instance.startInAnimation();\r\n      } else if (registered <= 0 && loading) {\r\n        loading = false;\r\n        let subs: Subscription = loadingRef.componentRef.instance.startOutAnimation().subscribe(() => {\r\n          subs.unsubscribe();\r\n          // passing context so when the template is re-attached, we can keep the reference of the variables\r\n          let cdr: ChangeDetectorRef = viewContainerRef.createEmbeddedView(templateRef, context);\r\n          viewContainerRef.detach(viewContainerRef.indexOf(loadingRef.componentRef.hostView));\r\n          /**\r\n           * Need to call \"markForCheck\" and \"detectChanges\" on attached template, so its detected by parent component when attached\r\n           * with \"OnPush\" change detection\r\n           */\r\n          cdr.detectChanges();\r\n          cdr.markForCheck();\r\n        });\r\n      }\r\n    });\r\n    return loadingRef;\r\n  }\r\n\r\n  /**\r\n   * Creates a fullscreen overlay for the loading usage.\r\n   */\r\n  private _createOverlay(): OverlayRef {\r\n    let state: OverlayConfig = new OverlayConfig();\r\n    state.hasBackdrop = false;\r\n    state.positionStrategy = this._overlay.position().global().centerHorizontally().centerVertically();\r\n    return this._overlay.create(state);\r\n  }\r\n\r\n  /**\r\n   * Creates a generic component dynamically waiting to be attached to a viewContainerRef.\r\n   */\r\n  private _createComponent(options: IInternalLoadingOptions): ILoadingRef {\r\n    let compRef: ILoadingRef = this._initializeContext();\r\n    compRef.componentRef = this._componentFactoryResolver\r\n    .resolveComponentFactory(TdLoadingComponent).create(this._injector);\r\n    this._mapOptions(options, compRef.componentRef.instance);\r\n    return compRef;\r\n  }\r\n\r\n  /**\r\n   * Initialize context for loading component.\r\n   */\r\n  private _initializeContext(): ILoadingRef {\r\n    let subject: Subject<any> = new Subject<any>();\r\n    return {\r\n      observable: subject.asObservable(),\r\n      subject: subject,\r\n      componentRef: undefined,\r\n      times: 0,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Maps configuration to the loading component instance.\r\n   */\r\n  private _mapOptions(options: IInternalLoadingOptions, instance: TdLoadingComponent): void {\r\n    instance.style = options.style;\r\n    if (options.type !== undefined) {\r\n      instance.type = options.type;\r\n    }\r\n    if (options.height !== undefined) {\r\n      instance.height = options.height;\r\n    }\r\n    if (options.mode !== undefined) {\r\n      instance.mode = options.mode;\r\n    }\r\n    if (options.color !== undefined) {\r\n      instance.color = options.color;\r\n    }\r\n  }\r\n}\r\n\r\nexport function LOADING_FACTORY_PROVIDER_FACTORY(\r\n    parent: TdLoadingFactory, componentFactoryResolver: ComponentFactoryResolver, overlay: Overlay, injector: Injector): TdLoadingFactory {\r\n  return parent || new TdLoadingFactory(componentFactoryResolver, overlay, injector);\r\n}\r\n\r\nexport const LOADING_FACTORY_PROVIDER: Provider = {\r\n  // If there is already a service available, use that. Otherwise, provide a new one.\r\n  provide: TdLoadingFactory,\r\n  deps: [[new Optional(), new SkipSelf(), TdLoadingFactory], ComponentFactoryResolver, Overlay, Injector],\r\n  useFactory: LOADING_FACTORY_PROVIDER_FACTORY,\r\n};\r\n",
    "import { Component, ViewChild, TemplateRef, ChangeDetectorRef, ChangeDetectionStrategy, ElementRef, DoCheck } from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nexport enum LoadingType {\r\n  Circular = 'circular',\r\n  Linear = 'linear',\r\n}\r\n\r\nexport enum LoadingMode {\r\n  Determinate = 'determinate',\r\n  Indeterminate = 'indeterminate',\r\n}\r\n\r\nexport enum LoadingStrategy {\r\n  Overlay = 'overlay',\r\n  Replace = 'replace',\r\n}\r\n\r\nexport enum LoadingStyle {\r\n  FullScreen = 'fullscreen',\r\n  Overlay = 'overlay',\r\n  None = 'none',\r\n}\r\n\r\nimport { TdFadeInOutAnimation } from '@covalent/core/common';\r\n\r\nexport const TD_CIRCLE_DIAMETER: number = 100;\r\n\r\n@Component({\r\n  selector: 'td-loading',\r\n  styles: [`.td-loading-wrapper{position:relative;display:block}.td-loading-wrapper.td-fullscreen{position:inherit}.td-loading-wrapper .td-loading{-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-flex:1;-ms-flex:1;flex:1}.td-loading-wrapper.td-overlay .td-loading{position:absolute;margin:0;top:0;left:0;right:0;z-index:1000}.td-loading-wrapper.td-overlay .td-loading mat-progress-bar{position:absolute;top:0;left:0;right:0}.td-loading-wrapper.td-overlay-circular .td-loading{bottom:0}`],\r\n  template: `<div class=\"td-loading-wrapper\"\r\n    [style.min-height]=\"getHeight()\"\r\n    [class.td-overlay-circular]=\"(isOverlay() || isFullScreen()) && !isLinear()\"\r\n    [class.td-overlay]=\"isOverlay() || isFullScreen()\" \r\n    [class.td-fullscreen]=\"isFullScreen()\">\r\n  <div [@tdFadeInOut]=\"animation\"\r\n     (@tdFadeInOut.done)=\"animationComplete($event)\"\r\n     [style.min-height]=\"getHeight()\"\r\n     class=\"td-loading\">\r\n    <mat-progress-spinner *ngIf=\"isCircular()\" \r\n                        [mode]=\"mode\"\r\n                        [value]=\"value\" \r\n                        [color]=\"color\" \r\n                        [diameter]=\"getCircleDiameter()\"\r\n                        [strokeWidth]=\"getCircleStrokeWidth()\">\r\n    </mat-progress-spinner>\r\n    <mat-progress-bar *ngIf=\"isLinear()\" \r\n                     [mode]=\"mode\"\r\n                     [value]=\"value\"\r\n                     [color]=\"color\">\r\n    </mat-progress-bar>\r\n  </div>\r\n  <ng-template [cdkPortalOutlet]=\"content\"></ng-template>\r\n</div>`,\r\n  animations: [\r\n    TdFadeInOutAnimation(),\r\n  ],\r\n})\r\nexport class TdLoadingComponent implements DoCheck {\r\n\r\n  private _animationIn: Subject<any> = new Subject<any>();\r\n  private _animationOut: Subject<any> = new Subject<any>();\r\n  private _mode: LoadingMode = LoadingMode.Indeterminate;\r\n  private _defaultMode: LoadingMode = LoadingMode.Indeterminate;\r\n  private _value: number = 0;\r\n  private _circleDiameter: number = TD_CIRCLE_DIAMETER;\r\n\r\n  /**\r\n   * Flag for animation\r\n   */\r\n  animation: boolean = false;\r\n\r\n  /**\r\n   * Content injected into loading component.\r\n   */\r\n  content: TemplatePortal<any>;\r\n\r\n  /**\r\n   * Sets mode of [TdLoadingComponent] to LoadingMode.Determinate or LoadingMode.Indeterminate\r\n   */\r\n  set mode(mode: LoadingMode) {\r\n    this._defaultMode = mode;\r\n  }\r\n  get mode(): LoadingMode {\r\n    return this._mode;\r\n  }\r\n\r\n  /**\r\n   * Sets value of [TdLoadingComponent] if mode is 'LoadingMode.Determinate'\r\n   */\r\n  set value(value: number) {\r\n    this._value = value;\r\n    // Check for changes for `OnPush` change detection\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n  get value(): number {\r\n    return this._value;\r\n  }\r\n\r\n  style: LoadingStyle = LoadingStyle.None;\r\n\r\n  /**\r\n   * height: number\r\n   * Sets height of [TdLoadingComponent].\r\n   */\r\n  height: number;\r\n\r\n  /**\r\n   * type: LoadingType\r\n   * Sets type of [TdLoadingComponent] rendered.\r\n   */\r\n  type: LoadingType = LoadingType.Circular;\r\n\r\n  /**\r\n   * color: primary' | 'accent' | 'warn'\r\n   * Sets theme color of [TdLoadingComponent] rendered.\r\n   */\r\n  color: 'primary' | 'accent' | 'warn' = 'primary';\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              private _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngDoCheck(): void {\r\n    // When overlay is used and the host width has a value greater than 1px\r\n    // set the circle diameter when possible incase the loading component was rendered in a hidden state\r\n    if (this.isOverlay() && this._hostHeight() > 1) {\r\n      if (this.animation) {\r\n        this._setCircleDiameter();\r\n        this._changeDetectorRef.markForCheck();\r\n      }\r\n    }\r\n  }\r\n\r\n  getHeight(): string {\r\n    // Ignore height if style is `overlay` or `fullscreen`.\r\n    // Add height if child elements have a height and style is `none`, else return default height.\r\n    if (this.isOverlay() || this.isFullScreen()) {\r\n      return undefined;\r\n    } else {\r\n      return this.height ? `${this.height}px` : '150px';\r\n    }\r\n  }\r\n\r\n  getCircleDiameter(): number {\r\n    return this._circleDiameter;\r\n  }\r\n\r\n  getCircleStrokeWidth(): number {\r\n    // we calculate the stroke width by setting it as 10% of its diameter\r\n    let strokeWidth: number = this.getCircleDiameter() / 10;\r\n    return Math.abs(strokeWidth);\r\n  }\r\n\r\n  isCircular(): boolean {\r\n    return this.type === LoadingType.Circular;\r\n  }\r\n\r\n  isLinear(): boolean {\r\n    return this.type === LoadingType.Linear;\r\n  }\r\n\r\n  isFullScreen(): boolean {\r\n    return this.style === LoadingStyle.FullScreen;\r\n  }\r\n\r\n  isOverlay(): boolean {\r\n    return this.style === LoadingStyle.Overlay;\r\n  }\r\n\r\n  animationComplete(event: AnimationEvent): void {\r\n    // Check to see if its \"in\" or \"out\" animation to execute the proper callback\r\n    if (!event.fromState) {\r\n      this.inAnimationCompleted();\r\n    } else {\r\n      this.outAnimationCompleted();\r\n    }\r\n  }\r\n\r\n  inAnimationCompleted(): void {\r\n    this._animationIn.next(undefined);\r\n  }\r\n\r\n  outAnimationCompleted(): void {\r\n   /* little hack to reset the loader value and animation before removing it from DOM\r\n    * else, the loader will appear with prev value when its registered again\r\n    * and will do an animation going prev value to 0.\r\n    */\r\n    this.value = 0;\r\n    // Check for changes for `OnPush` change detection\r\n    this._changeDetectorRef.markForCheck();\r\n    this._animationOut.next(undefined);\r\n  }\r\n\r\n  /**\r\n   * Starts in animation and returns an observable for completition event.\r\n   */\r\n  startInAnimation(): Observable<any> {\r\n    /* need to switch back to the selected mode, so we have saved it in another variable\r\n    *  and then recover it. (issue with protractor)\r\n    */\r\n    this._mode = this._defaultMode;\r\n    // Set values before the animations starts\r\n    this._setCircleDiameter();\r\n    // Check for changes for `OnPush` change detection\r\n    this.animation = true;\r\n    this._changeDetectorRef.markForCheck();\r\n    return this._animationIn.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Starts out animation and returns an observable for completition event.\r\n   */\r\n  startOutAnimation(): Observable<any> {\r\n    this.animation = false;\r\n    /* need to switch back and forth from determinate/indeterminate so the setInterval()\r\n    * inside mat-progress-spinner stops and protractor doesnt timeout waiting to sync.\r\n    */\r\n    this._mode = LoadingMode.Determinate;\r\n    // Check for changes for `OnPush` change detection\r\n    this._changeDetectorRef.markForCheck();\r\n    return this._animationOut.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Calculate the proper diameter for the circle and set it\r\n   */\r\n  private _setCircleDiameter(): void {\r\n    // we set a default diameter of 100 since this is the default in material\r\n    let diameter: number = TD_CIRCLE_DIAMETER;\r\n    // if height is provided, then we take that as diameter\r\n    if (this.height) {\r\n      diameter = this.height;\r\n      // else if its not provided, then we take the host height\r\n    } else if (this.height === undefined) {\r\n      diameter = this._hostHeight();\r\n    }\r\n    // if the diameter is over TD_CIRCLE_DIAMETER, we set TD_CIRCLE_DIAMETER\r\n    if (!!diameter && diameter <= TD_CIRCLE_DIAMETER) {\r\n      this._circleDiameter = Math.floor(diameter);\r\n    } else {\r\n      this._circleDiameter = TD_CIRCLE_DIAMETER;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the host height of the loading component\r\n   */\r\n  private _hostHeight(): number {\r\n    if (<HTMLElement>this._elementRef.nativeElement) {\r\n      return (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\r\n    }\r\n    return 0;\r\n  }\r\n}\r\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "PortalModule",
    "OverlayModule",
    "MatProgressSpinnerModule",
    "MatProgressBarModule",
    "CommonModule",
    "NgModule",
    "Input",
    "TemplateRef",
    "ViewContainerRef",
    "Directive",
    "Optional",
    "SkipSelf",
    "Injectable",
    "tslib_1.__extends",
    "ComponentFactoryResolver",
    "Overlay",
    "Injector",
    "overlay",
    "Subject",
    "OverlayConfig",
    "TemplatePortal",
    "ComponentPortal",
    "ChangeDetectorRef",
    "ElementRef",
    "TdFadeInOutAnimation",
    "Component"
  ],
  "mappings": "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"
}
