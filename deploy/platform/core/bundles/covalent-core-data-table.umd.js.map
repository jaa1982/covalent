{
  "version": 3,
  "file": "covalent-core-data-table.umd.js",
  "sources": [
    "ng://@covalent/core/data-table/out/data-table.module.ts",
    "ng://@covalent/core/data-table/out/services/data-table.service.ts",
    "ng://@covalent/core/data-table/out/data-table-table/data-table-table.component.ts",
    "ng://@covalent/core/data-table/out/data-table-cell/data-table-cell.component.ts",
    "ng://@covalent/core/data-table/out/data-table-column/data-table-column.component.ts",
    "ng://@covalent/core/data-table/out/data-table.component.ts",
    "ng://@covalent/core/data-table/out/directives/data-table-template.directive.ts",
    "ng://@covalent/core/data-table/out/data-table-row/data-table-row.component.ts",
    "ng://@covalent/core/data-table/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import { NgModule, Type } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\r\n\r\nimport { TdDataTableComponent } from './data-table.component';\r\nimport { TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\r\nimport { TdDataTableCellComponent } from './data-table-cell/data-table-cell.component';\r\nimport { TdDataTableRowComponent, TdDataTableColumnRowComponent } from './data-table-row/data-table-row.component';\r\nimport { TdDataTableTableComponent } from './data-table-table/data-table-table.component';\r\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\r\n\r\nimport { DATA_TABLE_PROVIDER } from './services/data-table.service';\r\n\r\nconst TD_DATA_TABLE: Type<any>[] = [\r\n  TdDataTableComponent,\r\n  TdDataTableTemplateDirective,\r\n\r\n  TdDataTableColumnComponent,\r\n  TdDataTableCellComponent,\r\n  TdDataTableRowComponent,\r\n  TdDataTableColumnRowComponent,\r\n  TdDataTableTableComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCheckboxModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatPseudoCheckboxModule,\r\n  ],\r\n  declarations: [\r\n    TD_DATA_TABLE,\r\n  ],\r\n  exports: [\r\n    TD_DATA_TABLE,\r\n  ],\r\n  providers: [\r\n    DATA_TABLE_PROVIDER,\r\n  ],\r\n})\r\nexport class CovalentDataTableModule {\r\n\r\n}\r\n",
    "import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\r\n\r\nimport { TdDataTableSortingOrder, ITdDataTableColumn } from '../data-table.component';\r\n\r\n@Injectable()\r\nexport class TdDataTableService {\r\n\r\n  /**\r\n   * params:\r\n   * - data: any[]\r\n   * - searchTerm: string\r\n   * - ignoreCase: boolean = false\r\n   * - excludedColumns: string[] = []\r\n   *\r\n   * Searches [data] parameter for [searchTerm] matches and returns a new array with them.\r\n   */\r\n  filterData(data: any[], searchTerm: string, ignoreCase: boolean = false, excludedColumns?: string[]): any[] {\r\n    let filter: string = searchTerm ? (ignoreCase ? searchTerm.toLowerCase() : searchTerm) : '';\r\n    if (filter) {\r\n      data = data.filter((item: any) => {\r\n        const res: any = Object.keys(item).find((key: string) => {\r\n          if (!excludedColumns || excludedColumns.indexOf(key) === -1) {\r\n            const preItemValue: string = ('' + item[key]);\r\n            const itemValue: string = ignoreCase ? preItemValue.toLowerCase() : preItemValue;\r\n            return itemValue.indexOf(filter) > -1;\r\n          }\r\n        });\r\n        return !(typeof res === 'undefined');\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - data: any[]\r\n   * - sortBy: string\r\n   * - sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending\r\n   *\r\n   * Sorts [data] parameter by [sortBy] and [sortOrder] and returns the sorted data.\r\n   */\r\n  sortData(data: any[], sortBy: string, sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending): any[] {\r\n    if (sortBy) {\r\n      data = Array.from(data); // Change the array reference to trigger OnPush and not mutate original array\r\n      data.sort((a: any, b: any) => {\r\n        let compA: any = a[sortBy];\r\n        let compB: any = b[sortBy];\r\n        let direction: number = 0;\r\n        if (!Number.isNaN(Number.parseFloat(compA)) && !Number.isNaN(Number.parseFloat(compB))) {\r\n          direction = Number.parseFloat(compA) - Number.parseFloat(compB);\r\n        } else {\r\n          if (compA < compB) {\r\n            direction = -1;\r\n          } else if (compA > compB) {\r\n            direction = 1;\r\n          }\r\n        }\r\n        return direction * (sortOrder === TdDataTableSortingOrder.Descending ? -1 : 1);\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * params:\r\n   * - data: any[]\r\n   * - fromRow: number\r\n   * - toRow: : number\r\n   *\r\n   * Returns a section of the [data] parameter starting from [fromRow] and ending in [toRow].\r\n   */\r\n  pageData(data: any[], fromRow: number, toRow: number): any[] {\r\n    if (fromRow >= 1) {\r\n      data = data.slice(fromRow - 1, toRow);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n\r\nexport function DATA_TABLE_PROVIDER_FACTORY(\r\n    parent: TdDataTableService): TdDataTableService {\r\n  return parent || new TdDataTableService();\r\n}\r\n\r\nexport const DATA_TABLE_PROVIDER: Provider = {\r\n  // If there is already a service available, use that. Otherwise, provide a new one.\r\n  provide: TdDataTableService,\r\n  deps: [[new Optional(), new SkipSelf(), TdDataTableService]],\r\n  useFactory: DATA_TABLE_PROVIDER_FACTORY,\r\n};\r\n",
    "import { Component, Renderer2, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n  /* tslint:disable-next-line */\r\n  selector: 'table[td-data-table]',\r\n  styles: [`:host{width:100%;position:relative;border-spacing:0;overflow:hidden;border-collapse:collapse}`],\r\n  template: `<ng-content></ng-content>`,\r\n})\r\nexport class TdDataTableTableComponent {\r\n\r\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\r\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table');\r\n  }\r\n\r\n}\r\n",
    "import { Component, Input, Renderer2, ElementRef, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  /* tslint:disable-next-line */\r\n  selector: 'td[td-data-table-cell]',\r\n  styles: [`:host{vertical-align:middle;text-align:left;padding:0}html[dir=rtl] :host{text-align:right;unicode-bidi:embed}body[dir=rtl] :host{text-align:right;unicode-bidi:embed}[dir=rtl] :host{text-align:right;unicode-bidi:embed}:host bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host>.td-data-table-cell-content-wrapper{padding:0 28px;-webkit-box-sizing:border-box;box-sizing:border-box;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-line-pack:center;align-content:center;max-width:100%;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:start}:host>.td-data-table-cell-content-wrapper.td-data-table-cell-numeric{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}:host:first-child>.td-data-table-cell-content-wrapper{padding-left:24px;padding-right:initial}html[dir=rtl] :host:first-child>.td-data-table-cell-content-wrapper{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}body[dir=rtl] :host:first-child>.td-data-table-cell-content-wrapper{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}[dir=rtl] :host:first-child>.td-data-table-cell-content-wrapper{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}:host:first-child>.td-data-table-cell-content-wrapper bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:first-child>.td-data-table-cell-content-wrapper bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host:last-child>.td-data-table-cell-content-wrapper{padding-left:28px;padding-right:24px}html[dir=rtl] :host:last-child>.td-data-table-cell-content-wrapper{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}body[dir=rtl] :host:last-child>.td-data-table-cell-content-wrapper{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}[dir=rtl] :host:last-child>.td-data-table-cell-content-wrapper{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}:host:last-child>.td-data-table-cell-content-wrapper bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:last-child>.td-data-table-cell-content-wrapper bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host>*{vertical-align:middle}:host.mat-clickable{cursor:pointer}:host.mat-clickable:focus{outline:0}:host.mat-numeric{text-align:right}html[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}body[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}:host.mat-numeric bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host.mat-numeric bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}`],\r\n  template: `<div class=\"td-data-table-cell-content-wrapper\"\r\n     [class.td-data-table-cell-numeric]=\"numeric\">\r\n  <ng-content></ng-content>\r\n</div>`,\r\n})\r\nexport class TdDataTableCellComponent {\r\n\r\n  /**\r\n   * numeric?: boolean\r\n   * Makes cell follow the numeric data-table specs.\r\n   * Defaults to 'false'\r\n   */\r\n  @Input('numeric') numeric: boolean = false;\r\n\r\n  @HostBinding('class.mat-numeric')\r\n  get bindNumeric(): boolean {\r\n    return this.numeric;\r\n  }\r\n\r\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\r\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-cell');\r\n  }\r\n\r\n}\r\n",
    "import { Component, Input, Output, EventEmitter, Renderer2, ElementRef, HostBinding, HostListener, ViewChild } from '@angular/core';\r\n\r\nimport { TdDataTableSortingOrder } from '../data-table.component';\r\n\r\nexport interface ITdDataTableSortChangeEvent {\r\n  order: TdDataTableSortingOrder;\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  /* tslint:disable-next-line */\r\n  selector: 'th[td-data-table-column]',\r\n  styles: [`:host{white-space:nowrap;position:relative;padding:0;vertical-align:middle;text-align:left}:host>.td-data-table-heading{padding:0 28px}:host:first-child>.td-data-table-heading{padding-left:24px;padding-right:initial}html[dir=rtl] :host:first-child>.td-data-table-heading{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}body[dir=rtl] :host:first-child>.td-data-table-heading{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}[dir=rtl] :host:first-child>.td-data-table-heading{padding-left:initial;unicode-bidi:embed;padding-right:24px;unicode-bidi:embed}:host:first-child>.td-data-table-heading bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:first-child>.td-data-table-heading bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host:last-child>.td-data-table-heading{padding-left:28px;padding-right:24px}html[dir=rtl] :host:last-child>.td-data-table-heading{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}body[dir=rtl] :host:last-child>.td-data-table-heading{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}[dir=rtl] :host:last-child>.td-data-table-heading{padding-left:24px;unicode-bidi:embed;padding-right:28px;unicode-bidi:embed}:host:last-child>.td-data-table-heading bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:last-child>.td-data-table-heading bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host mat-icon{height:16px;width:16px;font-size:16px!important;line-height:16px!important}:host mat-icon.td-data-table-sort-icon{opacity:0;-webkit-transition:-webkit-transform .25s;transition:-webkit-transform .25s;transition:transform .25s;transition:transform .25s,-webkit-transform .25s;position:absolute;top:0}:host mat-icon.td-data-table-sort-icon.mat-asc{-webkit-transform:rotate(0);transform:rotate(0)}:host mat-icon.td-data-table-sort-icon.mat-desc{-webkit-transform:rotate(180deg);transform:rotate(180deg)}:host.mat-active.mat-sortable mat-icon.td-data-table-sort-icon,:host:hover.mat-sortable mat-icon.td-data-table-sort-icon{opacity:1}html[dir=rtl] :host{text-align:right;unicode-bidi:embed}body[dir=rtl] :host{text-align:right;unicode-bidi:embed}[dir=rtl] :host{text-align:right;unicode-bidi:embed}:host bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host>*{vertical-align:middle}:host.mat-clickable{cursor:pointer}:host.mat-clickable:focus{outline:0}:host .td-data-table-heading{display:inline-block;position:relative}:host.mat-numeric{text-align:right}html[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}body[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}[dir=rtl] :host.mat-numeric{text-align:left;unicode-bidi:embed}:host.mat-numeric bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host.mat-numeric bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host.mat-numeric mat-icon.td-data-table-sort-icon{margin-left:-22px;margin-right:initial}html[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:-22px;unicode-bidi:embed}body[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:-22px;unicode-bidi:embed}[dir=rtl] :host.mat-numeric mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:-22px;unicode-bidi:embed}:host.mat-numeric mat-icon.td-data-table-sort-icon bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host.mat-numeric mat-icon.td-data-table-sort-icon bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}:host:not(.mat-numeric) mat-icon.td-data-table-sort-icon{margin-left:6px;margin-right:initial}html[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:6px;unicode-bidi:embed}body[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:6px;unicode-bidi:embed}[dir=rtl] :host:not(.mat-numeric) mat-icon.td-data-table-sort-icon{margin-left:initial;unicode-bidi:embed;margin-right:6px;unicode-bidi:embed}:host:not(.mat-numeric) mat-icon.td-data-table-sort-icon bdo[dir=rtl]{direction:rtl;unicode-bidi:bidi-override}:host:not(.mat-numeric) mat-icon.td-data-table-sort-icon bdo[dir=ltr]{direction:ltr;unicode-bidi:bidi-override}`],\r\n  template: `<span #columnContent class=\"td-data-table-heading\">\r\n  <mat-icon \r\n    class=\"td-data-table-sort-icon\" \r\n    *ngIf=\"sortable && numeric\"\r\n    [class.mat-asc]=\"(!(active) || isAscending())\"\r\n    [class.mat-desc]=\"(active && isDescending())\">\r\n    arrow_upward\r\n  </mat-icon>\r\n  <span>\r\n    <ng-content></ng-content>\r\n  </span>\r\n  <mat-icon \r\n    class=\"td-data-table-sort-icon\" \r\n    *ngIf=\"sortable && !numeric\"\r\n    [class.mat-asc]=\"(!(active) || isAscending())\"\r\n    [class.mat-desc]=\"(active && isDescending())\">\r\n    arrow_upward\r\n  </mat-icon>\r\n</span>\r\n`,\r\n})\r\nexport class TdDataTableColumnComponent {\r\n\r\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\r\n\r\n  @ViewChild('columnContent', {read: ElementRef}) _columnContent: ElementRef;\r\n\r\n  get projectedWidth(): number {\r\n    if (this._columnContent && this._columnContent.nativeElement) {\r\n      return (<HTMLElement>this._columnContent.nativeElement).getBoundingClientRect().width;\r\n    }\r\n    return 100;\r\n  }\r\n\r\n  /**\r\n   * name?: string\r\n   * Sets unique column [name] for [sortable] events.\r\n   */\r\n  @Input('name') name: string = '';\r\n\r\n  /**\r\n   * sortable?: boolean\r\n   * Enables sorting events, sort icons and active column states.\r\n   * Defaults to 'false'\r\n   */\r\n  @Input('sortable') sortable: boolean = false;\r\n\r\n  /**\r\n   * active?: boolean\r\n   * Sets column to active state when 'true'.\r\n   * Defaults to 'false'\r\n   */\r\n  @Input('active') active: boolean = false;\r\n\r\n  /**\r\n   * numeric?: boolean\r\n   * Makes column follow the numeric data-table specs and sort icon.\r\n   * Defaults to 'false'\r\n   */\r\n  @Input('numeric') numeric: boolean = false;\r\n\r\n  /**\r\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\r\n   * Sets the sort order of column.\r\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\r\n   */\r\n  @Input('sortOrder')\r\n  set sortOrder(order: 'ASC' | 'DESC') {\r\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\r\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\r\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\r\n    }\r\n\r\n    this._sortOrder = sortOrder === 'ASC' ?\r\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\r\n  }\r\n\r\n  /**\r\n   * sortChange?: function\r\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\r\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\r\n   */\r\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\r\n                        new EventEmitter<ITdDataTableSortChangeEvent>();\r\n\r\n  @HostBinding('class.mat-clickable')\r\n  get bindClickable(): boolean {\r\n    return this.sortable;\r\n  }\r\n\r\n  @HostBinding('class.mat-sortable')\r\n  get bingSortable(): boolean {\r\n    return this.sortable;\r\n  }\r\n\r\n  @HostBinding('class.mat-active')\r\n  get bindActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  @HostBinding('class.mat-numeric')\r\n  get bindNumeric(): boolean {\r\n    return this.numeric;\r\n  }\r\n\r\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\r\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column');\r\n  }\r\n\r\n  /**\r\n   * Listening to click event on host to throw a sort event\r\n   */\r\n  @HostListener('click')\r\n  handleClick(): void {\r\n    if (this.sortable) {\r\n      this.onSortChange.emit({name: this.name, order: this._sortOrder});\r\n    }\r\n  }\r\n\r\n  isAscending(): boolean {\r\n    return this._sortOrder === TdDataTableSortingOrder.Ascending;\r\n  }\r\n\r\n  isDescending(): boolean {\r\n    return this._sortOrder === TdDataTableSortingOrder.Descending;\r\n  }\r\n\r\n}\r\n",
    "import { Component, Input, Output, EventEmitter, forwardRef, ChangeDetectionStrategy,\r\n         ChangeDetectorRef, ViewChild, OnDestroy, AfterViewInit,\r\n         ContentChildren, TemplateRef, AfterContentInit, QueryList, Inject,\r\n         Optional, ViewChildren, ElementRef, OnInit, AfterContentChecked } from '@angular/core';\r\nimport { DOCUMENT, DomSanitizer, SafeStyle } from '@angular/platform-browser';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\r\n\r\nimport { Observable, Subscription, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { TdDataTableRowComponent } from './data-table-row/data-table-row.component';\r\nimport { ITdDataTableSortChangeEvent, TdDataTableColumnComponent } from './data-table-column/data-table-column.component';\r\nimport { TdDataTableTemplateDirective } from './directives/data-table-template.directive';\r\n\r\nimport { IControlValueAccessor, mixinControlValueAccessor } from '@covalent/core/common';\r\n\r\nexport enum TdDataTableSortingOrder {\r\n  Ascending = 'ASC',\r\n  Descending = 'DESC',\r\n}\r\n\r\nexport interface ITdDataTableColumnWidth {\r\n  min?: number;\r\n  max?: number;\r\n}\r\n\r\nexport interface ITdDataTableColumn {\r\n  name: string;\r\n  label: string;\r\n  tooltip?: string;\r\n  numeric?: boolean;\r\n  format?: (value: any) => any;\r\n  nested?: boolean;\r\n  sortable?: boolean;\r\n  hidden?: boolean;\r\n  filter?: boolean;\r\n  width?: ITdDataTableColumnWidth | number;\r\n}\r\n\r\nexport interface ITdDataTableSelectEvent {\r\n  row: any;\r\n  selected: boolean;\r\n  index: number;\r\n}\r\n\r\nexport interface ITdDataTableSelectAllEvent {\r\n  rows: any[];\r\n  selected: boolean;\r\n}\r\n\r\nexport interface ITdDataTableRowClickEvent {\r\n  row: any;\r\n  index: number;\r\n}\r\n\r\nexport interface IInternalColumnWidth {\r\n  value: number;\r\n  limit: boolean;\r\n  index: number;\r\n  min?: boolean;\r\n  max?: boolean;\r\n}\r\n\r\n/**\r\n * Constant to set the rows offset before and after the viewport\r\n */\r\nconst TD_VIRTUAL_OFFSET: number = 2;\r\n\r\n/**\r\n * Constant to set default row height if none is provided\r\n */\r\nconst TD_VIRTUAL_DEFAULT_ROW_HEIGHT: number = 48;\r\n\r\nexport class TdDataTableBase {\r\n  constructor(public _changeDetectorRef: ChangeDetectorRef) {}\r\n}\r\n\r\n/* tslint:disable-next-line */\r\nexport const _TdDataTableMixinBase = mixinControlValueAccessor(TdDataTableBase, []);\r\n\r\n@Component({\r\n  providers: [{\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TdDataTableComponent),\r\n    multi: true,\r\n  }],\r\n  selector: 'td-data-table',\r\n  styles: [`:host{display:block;overflow:hidden}:host .td-data-table-scrollable{position:relative;overflow:auto;height:calc(100% - 56px)}table.td-data-table{width:auto!important}table.td-data-table.mat-selectable tbody>tr.td-data-table-row{-webkit-transition:background-color .2s;transition:background-color .2s}table.td-data-table.mat-selectable .td-data-table-column:first-child>.td-data-table-column-content-wrapper,table.td-data-table.mat-selectable td.td-data-table-cell:first-child>.td-data-table-column-content-wrapper,table.td-data-table.mat-selectable th.td-data-table-column:first-child>.td-data-table-column-content-wrapper{width:18px;min-width:18px;padding:0 24px}table.td-data-table.mat-selectable .td-data-table-column:nth-child(2)>.td-data-table-column-content-wrapper,table.td-data-table.mat-selectable td.td-data-table-cell:nth-child(2)>.td-data-table-column-content-wrapper,table.td-data-table.mat-selectable th.td-data-table-column:nth-child(2)>.td-data-table-column-content-wrapper{padding-left:0}[dir=rtl] table.td-data-table.mat-selectable .td-data-table-column:nth-child(2)>.td-data-table-column-content-wrapper,[dir=rtl] table.td-data-table.mat-selectable td.td-data-table-cell:nth-child(2)>.td-data-table-column-content-wrapper,[dir=rtl] table.td-data-table.mat-selectable th.td-data-table-column:nth-child(2)>.td-data-table-column-content-wrapper{padding-right:0;padding-left:28px}table.td-data-table td.mat-checkbox-cell,table.td-data-table th.mat-checkbox-column{min-width:42px;width:42px;font-size:0!important}table.td-data-table td.mat-checkbox-cell mat-pseudo-checkbox,table.td-data-table th.mat-checkbox-column mat-pseudo-checkbox{width:18px;height:18px}::ng-deep table.td-data-table td.mat-checkbox-cell mat-pseudo-checkbox.mat-pseudo-checkbox-checked::after,::ng-deep table.td-data-table th.mat-checkbox-column mat-pseudo-checkbox.mat-pseudo-checkbox-checked::after{width:11px!important;height:4px!important}table.td-data-table td.mat-checkbox-cell mat-checkbox ::ng-deep .mat-checkbox-inner-container,table.td-data-table th.mat-checkbox-column mat-checkbox ::ng-deep .mat-checkbox-inner-container{width:18px;height:18px;margin:0}`],\r\n  template: `<table td-data-table\r\n        [style.left.px]=\"columnsLeftScroll\"\r\n        [class.mat-selectable]=\"selectable\">\r\n  <thead class=\"td-data-table-head\">\r\n    <tr td-data-table-column-row>\r\n      <th td-data-table-column class=\"mat-checkbox-column\" *ngIf=\"selectable\">\r\n        <mat-checkbox\r\n          #checkBoxAll\r\n          *ngIf=\"multiple\"\r\n          [disabled]=\"!hasData\"\r\n          [indeterminate]=\"indeterminate && !allSelected && hasData\"\r\n          [checked]=\"allSelected && hasData\"\r\n          (click)=\"blockEvent($event); selectAll(!checkBoxAll.checked)\"\r\n          (keyup.enter)=\"selectAll(!checkBoxAll.checked)\"\r\n          (keyup.space)=\"selectAll(!checkBoxAll.checked)\"\r\n          (keydown.space)=\"blockEvent($event)\">\r\n        </mat-checkbox>\r\n      </th>\r\n      <th td-data-table-column\r\n          #columnElement\r\n          *ngFor=\"let column of columns; let i = index;\"\r\n          [style.min-width.px]=\"getColumnWidth(i)\"\r\n          [style.max-width.px]=\"getColumnWidth(i)\"\r\n          [name]=\"column.name\"\r\n          [numeric]=\"column.numeric\"\r\n          [active]=\"(column.sortable || sortable) && column === sortByColumn\"\r\n          [sortable]=\"column.sortable || (sortable && column.sortable !== false)\"\r\n          [sortOrder]=\"sortOrderEnum\"\r\n          [hidden]=\"column.hidden\"\r\n          (sortChange)=\"handleSort(column)\">\r\n          <span [matTooltip]=\"column.tooltip\">{{column.label}}</span>\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n</table>\r\n<div #scrollableDiv class=\"td-data-table-scrollable\"\r\n      (scroll)=\"handleScroll($event)\">\r\n  <div [style.height.px]=\"totalHeight\"></div>\r\n  <table td-data-table\r\n          [style.transform]=\"offsetTransform\"\r\n          [style.position]=\"'absolute'\"\r\n          [class.mat-selectable]=\"selectable\"\r\n          [class.mat-clickable]=\"clickable\">\r\n    <tbody class=\"td-data-table-body\">\r\n      <tr td-data-table-row\r\n          #dtRow\r\n          [tabIndex]=\"selectable ? 0 : -1\"\r\n          [selected]=\"(clickable || selectable) && isRowSelected(row)\"\r\n          *ngFor=\"let row of virtualData; let rowIndex = index\"\r\n          (click)=\"handleRowClick(row, fromRow + rowIndex, $event)\"\r\n          (keyup)=\"selectable && _rowKeyup($event, row, rowIndex)\"\r\n          (keydown.space)=\"blockEvent($event)\"\r\n          (keydown.shift.space)=\"blockEvent($event)\"\r\n          (keydown.shift)=\"disableTextSelection()\"\r\n          (keyup.shift)=\"enableTextSelection()\">\r\n        <td td-data-table-cell class=\"mat-checkbox-cell\" *ngIf=\"selectable\">\r\n          <mat-pseudo-checkbox\r\n            [state]=\"dtRow.selected ? 'checked' : 'unchecked'\"\r\n            (mousedown)=\"disableTextSelection()\"\r\n            (mouseup)=\"enableTextSelection()\"\r\n            stopRowClick\r\n            (click)=\"select(row, $event, fromRow + rowIndex)\">\r\n          </mat-pseudo-checkbox>\r\n        </td>\r\n        <td td-data-table-cell\r\n            [numeric]=\"column.numeric\"\r\n            [hidden]=\"column.hidden\"\r\n            *ngFor=\"let column of columns; let i = index\"\r\n            [style.min-width.px]=\"getColumnWidth(i)\"\r\n            [style.max-width.px]=\"getColumnWidth(i)\">\r\n          <span *ngIf=\"!getTemplateRef(column.name)\">{{column.format ? column.format(getCellValue(column, row)) : getCellValue(column, row)}}</span>\r\n          <ng-template\r\n            *ngIf=\"getTemplateRef(column.name)\"\r\n            [ngTemplateOutlet]=\"getTemplateRef(column.name)\"\r\n            [ngTemplateOutletContext]=\"{ value: getCellValue(column, row), row: row, column: column.name }\">\r\n          </ng-template>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n<ng-content></ng-content>\r\n`,\r\n  inputs: ['value'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TdDataTableComponent extends _TdDataTableMixinBase implements IControlValueAccessor, OnInit,\r\n                                          AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy {\r\n\r\n  /** responsive width calculations */\r\n  private _resizeSubs: Subscription;\r\n  private _rowsChangedSubs: Subscription;\r\n  private _hostWidth: number = 0;\r\n\r\n  get hostWidth(): number {\r\n    // if the checkboxes are rendered, we need to remove their width\r\n    // from the total width to calculate properly\r\n    if (this.selectable) {\r\n      return this._hostWidth - 42;\r\n    }\r\n    return this._hostWidth;\r\n  }\r\n\r\n  private _widths: IInternalColumnWidth[] = [];\r\n  private _onResize: Subject<void> = new Subject<void>();\r\n\r\n  /** column header reposition and viewpoort */\r\n  private _verticalScrollSubs: Subscription;\r\n  private _horizontalScrollSubs: Subscription;\r\n  private _scrollHorizontalOffset: number = 0;\r\n\r\n  private _onHorizontalScroll: Subject<number> = new Subject<number>();\r\n  private _onVerticalScroll: Subject<number> = new Subject<number>();\r\n\r\n  // Array of cached row heights to allow dynamic row heights\r\n  private _rowHeightCache: number[] = [];\r\n  // Total pseudo height of all the elements\r\n  private _totalHeight: number = 0;\r\n  // Total host height for the viewport\r\n  private _hostHeight: number = 0;\r\n  // Scrolled vertical pixels\r\n  private _scrollVerticalOffset: number = 0;\r\n  // Style to move the content a certain offset depending on scrolled offset\r\n  private _offsetTransform: SafeStyle;\r\n\r\n  // Variables that set from and to which rows will be rendered\r\n  private _fromRow: number = 0;\r\n  private _toRow: number = 0;\r\n\r\n  /**\r\n   * Returns the offset style with a proper calculation on how much it should move\r\n   * over the y axis of the total height\r\n   */\r\n  get offsetTransform(): SafeStyle {\r\n    return this._offsetTransform;\r\n  }\r\n\r\n  /**\r\n   * Returns the assumed total height of the rows\r\n   */\r\n  get totalHeight(): number {\r\n    return this._totalHeight;\r\n  }\r\n\r\n  /**\r\n   * Returns the initial row to render in the viewport\r\n   */\r\n  get fromRow(): number {\r\n    return this._fromRow;\r\n  }\r\n\r\n  /**\r\n   * Returns the last row to render in the viewport\r\n   */\r\n  get toRow(): number {\r\n    return this._toRow;\r\n  }\r\n\r\n  private _valueChangesSubs: Subscription;\r\n  /** internal attributes */\r\n  private _data: any[];\r\n  // data virtually iterated by component\r\n  private _virtualData: any[];\r\n  private _columns: ITdDataTableColumn[];\r\n  private _selectable: boolean = false;\r\n  private _clickable: boolean = false;\r\n  private _multiple: boolean = true;\r\n  private _allSelected: boolean = false;\r\n  private _indeterminate: boolean = false;\r\n\r\n  /** sorting */\r\n  private _sortable: boolean = false;\r\n  private _sortBy: ITdDataTableColumn;\r\n  private _sortOrder: TdDataTableSortingOrder = TdDataTableSortingOrder.Ascending;\r\n\r\n  /** shift select */\r\n  private _shiftPreviouslyPressed: boolean = false;\r\n  private _lastSelectedIndex: number = -1;\r\n  private _firstSelectedIndex: number = -1;\r\n  private _firstCheckboxValue: boolean = false;\r\n\r\n  /** template fetching support */\r\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\r\n  @ContentChildren(TdDataTableTemplateDirective) _templates: QueryList<TdDataTableTemplateDirective>;\r\n\r\n  @ViewChild('scrollableDiv') _scrollableDiv: ElementRef;\r\n\r\n  @ViewChildren('columnElement') _colElements: QueryList<TdDataTableColumnComponent>;\r\n\r\n  @ViewChildren(TdDataTableRowComponent) _rows: QueryList<TdDataTableRowComponent>;\r\n\r\n  /**\r\n   * Returns scroll position to reposition column headers\r\n   */\r\n  get columnsLeftScroll(): number {\r\n    return this._scrollHorizontalOffset * -1;\r\n  }\r\n\r\n  /**\r\n   * Returns true if all values are selected.\r\n   */\r\n  get allSelected(): boolean {\r\n    return this._allSelected;\r\n  }\r\n\r\n  /**\r\n   * Returns true if all values are not deselected\r\n   * and at least one is.\r\n   */\r\n  get indeterminate(): boolean {\r\n    return this._indeterminate;\r\n  }\r\n\r\n  /**\r\n   * data?: {[key: string]: any}[]\r\n   * Sets the data to be rendered as rows.\r\n   */\r\n  @Input('data')\r\n  set data(data: any[]) {\r\n    this._data = data;\r\n    this._rowHeightCache = [];\r\n    Promise.resolve().then(() => {\r\n      this.refresh();\r\n      // scroll back to the top if the data has changed\r\n      this._scrollableDiv.nativeElement.scrollTop = 0;\r\n    });\r\n  }\r\n  get data(): any[] {\r\n    return this._data;\r\n  }\r\n\r\n  get virtualData(): any[] {\r\n    return this._virtualData;\r\n  }\r\n\r\n  /**\r\n   * columns?: ITdDataTableColumn[]\r\n   * Sets additional column configuration. [ITdDataTableColumn.name] has to exist in [data] as key.\r\n   * Defaults to [data] keys.\r\n   */\r\n  @Input('columns')\r\n  set columns(cols: ITdDataTableColumn[]) {\r\n    this._columns = cols;\r\n  }\r\n  get columns(): ITdDataTableColumn[] {\r\n    if (this._columns) {\r\n      return this._columns;\r\n    }\r\n\r\n    if (this.hasData) {\r\n      this._columns = [];\r\n      // if columns is undefined, use key in [data] rows as name and label for column headers.\r\n      let row: any = this._data[0];\r\n      Object.keys(row).forEach((k: string) => {\r\n        if (!this._columns.find((c: any) => c.name === k)) {\r\n          this._columns.push({ name: k, label: k });\r\n        }\r\n      });\r\n      return this._columns;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * selectable?: boolean\r\n   * Enables row selection events, hover and selected row states.\r\n   * Defaults to 'false'\r\n   */\r\n  @Input('selectable')\r\n  set selectable(selectable: boolean) {\r\n    this._selectable = coerceBooleanProperty(selectable);\r\n  }\r\n  get selectable(): boolean {\r\n    return this._selectable;\r\n  }\r\n\r\n  /**\r\n   * clickable?: boolean\r\n   * Enables row click events, hover.\r\n   * Defaults to 'false'\r\n   */\r\n  @Input('clickable')\r\n  set clickable(clickable: boolean) {\r\n    this._clickable = coerceBooleanProperty(clickable);\r\n  }\r\n  get clickable(): boolean {\r\n    return this._clickable;\r\n  }\r\n\r\n  /**\r\n   * multiple?: boolean\r\n   * Enables multiple row selection. [selectable] needs to be enabled.\r\n   * Defaults to 'false'\r\n   */\r\n  @Input('multiple')\r\n  set multiple(multiple: boolean) {\r\n    this._multiple = coerceBooleanProperty(multiple);\r\n  }\r\n  get multiple(): boolean {\r\n    return this._multiple;\r\n  }\r\n\r\n  /**\r\n   * sortable?: boolean\r\n   * Enables sorting events, sort icons and active column states.\r\n   * Defaults to 'false'\r\n   */\r\n  @Input('sortable')\r\n  set sortable(sortable: boolean) {\r\n    this._sortable = coerceBooleanProperty(sortable);\r\n  }\r\n  get sortable(): boolean {\r\n    return this._sortable;\r\n  }\r\n\r\n  /**\r\n   * sortBy?: string\r\n   * Sets the active sort column. [sortable] needs to be enabled.\r\n   */\r\n  @Input('sortBy')\r\n  set sortBy(columnName: string) {\r\n    if (!columnName) {\r\n      return;\r\n    }\r\n    const column: ITdDataTableColumn = this.columns.find((c: any) => c.name === columnName);\r\n    if (!column) {\r\n      throw new Error('[sortBy] must be a valid column name');\r\n    }\r\n\r\n    this._sortBy = column;\r\n  }\r\n  get sortByColumn(): ITdDataTableColumn {\r\n    return this._sortBy;\r\n  }\r\n\r\n  /**\r\n   * sortOrder?: ['ASC' | 'DESC'] or TdDataTableSortingOrder\r\n   * Sets the sort order of the [sortBy] column. [sortable] needs to be enabled.\r\n   * Defaults to 'ASC' or TdDataTableSortingOrder.Ascending\r\n   */\r\n  @Input('sortOrder')\r\n  set sortOrder(order: 'ASC' | 'DESC') {\r\n    let sortOrder: string = order ? order.toUpperCase() : 'ASC';\r\n    if (sortOrder !== 'DESC' && sortOrder !== 'ASC') {\r\n      throw new Error('[sortOrder] must be empty, ASC or DESC');\r\n    }\r\n\r\n    this._sortOrder = sortOrder === 'ASC' ?\r\n      TdDataTableSortingOrder.Ascending : TdDataTableSortingOrder.Descending;\r\n  }\r\n  get sortOrderEnum(): TdDataTableSortingOrder {\r\n    return this._sortOrder;\r\n  }\r\n\r\n  get hasData(): boolean {\r\n    return this._data && this._data.length > 0;\r\n  }\r\n\r\n  /**\r\n   * sortChange?: function\r\n   * Event emitted when the column headers are clicked. [sortable] needs to be enabled.\r\n   * Emits an [ITdDataTableSortChangeEvent] implemented object.\r\n   */\r\n  @Output('sortChange') onSortChange: EventEmitter<ITdDataTableSortChangeEvent> =\r\n                                      new EventEmitter<ITdDataTableSortChangeEvent>();\r\n\r\n  /**\r\n   * rowSelect?: function\r\n   * Event emitted when a row is selected/deselected. [selectable] needs to be enabled.\r\n   * Emits an [ITdDataTableSelectEvent] implemented object.\r\n   */\r\n  @Output('rowSelect') onRowSelect: EventEmitter<ITdDataTableSelectEvent> = new EventEmitter<ITdDataTableSelectEvent>();\r\n\r\n  /**\r\n   * rowClick?: function\r\n   * Event emitted when a row is clicked.\r\n   * Emits an [ITdDataTableRowClickEvent] implemented object.\r\n   */\r\n  @Output('rowClick') onRowClick: EventEmitter<ITdDataTableRowClickEvent> = new EventEmitter<ITdDataTableRowClickEvent>();\r\n\r\n  /**\r\n   * selectAll?: function\r\n   * Event emitted when all rows are selected/deselected by the all checkbox. [selectable] needs to be enabled.\r\n   * Emits an [ITdDataTableSelectAllEvent] implemented object.\r\n   */\r\n  @Output('selectAll') onSelectAll: EventEmitter<ITdDataTableSelectAllEvent> =\r\n                                    new EventEmitter<ITdDataTableSelectAllEvent>();\r\n\r\n  constructor(@Optional() @Inject(DOCUMENT) private _document: any,\r\n              private _elementRef: ElementRef,\r\n              private _domSanitizer: DomSanitizer,\r\n              _changeDetectorRef: ChangeDetectorRef) {\r\n    super(_changeDetectorRef);\r\n  }\r\n\r\n  /**\r\n   * compareWith?: function(row, model): boolean\r\n   * Allows custom comparison between row and model to see if row is selected or not\r\n   * Default comparation is by reference\r\n   */\r\n  @Input('compareWith') compareWith: (row: any, model: any) => boolean = (row: any, model: any) => {\r\n    return row === model;\r\n  }\r\n\r\n  /**\r\n   * Initialize observable for resize and scroll events\r\n   */\r\n  ngOnInit(): void {\r\n    // initialize observable for resize calculations\r\n    this._resizeSubs = this._onResize.asObservable().subscribe(() => {\r\n      if (this._rows) {\r\n        this._rows.toArray().forEach((row: TdDataTableRowComponent, index: number) => {\r\n          this._rowHeightCache[this.fromRow + index] = row.height + 1;\r\n        });\r\n      }\r\n      this._calculateWidths();\r\n      this._calculateVirtualRows();\r\n    });\r\n    // initialize observable for scroll column header reposition\r\n    this._horizontalScrollSubs = this._onHorizontalScroll.asObservable()\r\n      .subscribe((horizontalScroll: number) => {\r\n      this._scrollHorizontalOffset = horizontalScroll;\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n    // initialize observable for virtual scroll rendering\r\n    this._verticalScrollSubs = this._onVerticalScroll.asObservable()\r\n      .subscribe((verticalScroll: number) => {\r\n      this._scrollVerticalOffset = verticalScroll;\r\n      this._calculateVirtualRows();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n    this._valueChangesSubs = this.valueChanges.subscribe((value: any) => {\r\n      this.refresh();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loads templates and sets them in a map for faster access.\r\n   */\r\n  ngAfterContentInit(): void {\r\n    for (let i: number = 0; i < this._templates.toArray().length; i++) {\r\n      this._templateMap.set(\r\n        this._templates.toArray()[i].tdDataTableTemplate,\r\n        this._templates.toArray()[i].templateRef,\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks hosts native elements widths to see if it has changed (resize check)\r\n   */\r\n  ngAfterContentChecked(): void {\r\n    if (this._elementRef.nativeElement) {\r\n      let newHostWidth: number = this._elementRef.nativeElement.getBoundingClientRect().width;\r\n      // if the width has changed then we throw a resize event.\r\n      if (this._hostWidth !== newHostWidth) {\r\n        this._hostWidth = newHostWidth;\r\n        this._onResize.next();\r\n      }\r\n    }\r\n    if (this._scrollableDiv.nativeElement) {\r\n      let newHostHeight: number = this._scrollableDiv.nativeElement.getBoundingClientRect().height;\r\n      // if the height of the viewport has changed, then we mark for check\r\n      if (this._hostHeight !== newHostHeight) {\r\n        this._hostHeight = newHostHeight;\r\n        this._calculateVirtualRows();\r\n        this._changeDetectorRef.markForCheck();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers to an observable that checks if all rows have been rendered\r\n   * so we can start calculating the widths\r\n   */\r\n  ngAfterViewInit(): void {\r\n    this._rowsChangedSubs = this._rows.changes.pipe(\r\n      debounceTime(0),\r\n    ).subscribe(() => {\r\n      this._onResize.next();\r\n    });\r\n    this._calculateVirtualRows();\r\n  }\r\n\r\n  /**\r\n   * Unsubscribes observables when data table is destroyed\r\n   */\r\n  ngOnDestroy(): void {\r\n    if (this._resizeSubs) {\r\n      this._resizeSubs.unsubscribe();\r\n    }\r\n    if (this._horizontalScrollSubs) {\r\n      this._horizontalScrollSubs.unsubscribe();\r\n    }\r\n    if (this._verticalScrollSubs) {\r\n      this._verticalScrollSubs.unsubscribe();\r\n    }\r\n    if (this._rowsChangedSubs) {\r\n      this._rowsChangedSubs.unsubscribe();\r\n    }\r\n    if (this._valueChangesSubs) {\r\n      this._valueChangesSubs.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method that gets executed every time there is a scroll event\r\n   * Calls the scroll observable\r\n   */\r\n  handleScroll(event: Event): void {\r\n    let element: HTMLElement = (<HTMLElement>event.target);\r\n    if (element) {\r\n      let horizontalScroll: number = element.scrollLeft;\r\n      if (this._scrollHorizontalOffset !== horizontalScroll) {\r\n        this._onHorizontalScroll.next(horizontalScroll);\r\n      }\r\n      let verticalScroll: number = element.scrollTop;\r\n      if (this._scrollVerticalOffset !== verticalScroll) {\r\n        this._onVerticalScroll.next(verticalScroll);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the width needed for the columns via index\r\n   */\r\n  getColumnWidth(index: number): number {\r\n    if (this._widths[index]) {\r\n      return this._widths[index].value;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  getCellValue(column: ITdDataTableColumn, value: any): string {\r\n    if (column.nested === undefined || column.nested) {\r\n      return this._getNestedValue(column.name, value);\r\n    }\r\n    return value[column.name];\r\n  }\r\n\r\n  /**\r\n   * Getter method for template references\r\n   */\r\n   getTemplateRef(name: string): TemplateRef<any> {\r\n     return this._templateMap.get(name);\r\n   }\r\n\r\n  /**\r\n   * Clears model (ngModel) of component by removing all values in array.\r\n   */\r\n  clearModel(): void {\r\n    this.value.splice(0, this.value.length);\r\n  }\r\n\r\n  /**\r\n   * Refreshes data table and rerenders [data] and [columns]\r\n   */\r\n  refresh(): void {\r\n    this._calculateVirtualRows();\r\n    this._calculateWidths();\r\n    this._calculateCheckboxState();\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Selects or clears all rows depending on 'checked' value.\r\n   */\r\n  selectAll(checked: boolean): void {\r\n    let toggledRows: any[] = [];\r\n    if (checked) {\r\n      this._data.forEach((row: any) => {\r\n        // skiping already selected rows\r\n        if (!this.isRowSelected(row)) {\r\n          this.value.push(row);\r\n          // checking which ones are being toggled\r\n          toggledRows.push(row);\r\n        }\r\n      });\r\n      this._allSelected = true;\r\n      this._indeterminate = true;\r\n    } else {\r\n      this._data.forEach((row: any) => {\r\n        // checking which ones are being toggled\r\n        if (this.isRowSelected(row)) {\r\n          toggledRows.push(row);\r\n          let modelRow: any = this.value.filter((val: any) => {\r\n            return this.compareWith(row, val);\r\n          })[0];\r\n          let index: number = this.value.indexOf(modelRow);\r\n          if (index > -1) {\r\n            this.value.splice(index, 1);\r\n          }\r\n        }\r\n      });\r\n      this._allSelected = false;\r\n      this._indeterminate = false;\r\n    }\r\n    this.onSelectAll.emit({rows: toggledRows, selected: checked});\r\n  }\r\n\r\n  /**\r\n   * Checks if row is selected\r\n   */\r\n  isRowSelected(row: any): boolean {\r\n    // compare items by [compareWith] function\r\n    return this.value ? this.value.filter((val: any) => {\r\n      return this.compareWith(row, val);\r\n    }).length > 0 : false;\r\n  }\r\n\r\n  /**\r\n   * Selects or clears a row depending on 'checked' value if the row 'isSelectable'\r\n   * handles cntrl clicks and shift clicks for multi-select\r\n   */\r\n  select(row: any, event: Event, currentSelected: number): void {\r\n    if (this.selectable) {\r\n      this.blockEvent(event);\r\n      // Check to see if Shift key is selected and need to select everything in between\r\n      let mouseEvent: MouseEvent = event as MouseEvent;\r\n      if (this.multiple && mouseEvent && mouseEvent.shiftKey && this._lastSelectedIndex > -1) {\r\n        let firstIndex: number = currentSelected;\r\n        let lastIndex: number = this._lastSelectedIndex;\r\n        if (currentSelected > this._lastSelectedIndex) {\r\n          firstIndex = this._lastSelectedIndex;\r\n          lastIndex = currentSelected;\r\n        }\r\n        // if clicking a checkbox behind the initial check, then toggle all selections expect the initial checkbox\r\n        // else the checkboxes clicked are all after the initial one\r\n        if ((this._firstSelectedIndex >= currentSelected && this._lastSelectedIndex > this._firstSelectedIndex) ||\r\n           (this._firstSelectedIndex <= currentSelected && this._lastSelectedIndex < this._firstSelectedIndex)) {\r\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\r\n            if (this._firstSelectedIndex !== i) {\r\n              this._doSelection(this._data[i], i);\r\n            }\r\n          }\r\n        } else if ((this._firstSelectedIndex > currentSelected) || (this._firstSelectedIndex < currentSelected)) {\r\n          // change indexes depending on where the next checkbox is selected (before or after)\r\n          if (this._firstSelectedIndex > currentSelected) {\r\n            lastIndex--;\r\n          } else if (this._firstSelectedIndex < currentSelected) {\r\n            firstIndex++;\r\n          }\r\n          for (let i: number = firstIndex; i <= lastIndex; i++) {\r\n            let rowSelected: boolean = this.isRowSelected(this._data[i]);\r\n            // if row is selected and first checkbox was selected\r\n            // or if row was unselected and first checkbox was unselected\r\n            // we ignore the toggle\r\n            if ((this._firstCheckboxValue && !rowSelected) ||\r\n                (!this._firstCheckboxValue && rowSelected)) {\r\n              this._doSelection(this._data[i], i);\r\n            } else if (this._shiftPreviouslyPressed) {\r\n              // else if the checkbox selected was in the middle of the last selection and the first selection\r\n              // then we undo the selections\r\n              if ((currentSelected >= this._firstSelectedIndex && currentSelected <= this._lastSelectedIndex) ||\r\n                  (currentSelected <= this._firstSelectedIndex && currentSelected >= this._lastSelectedIndex)) {\r\n                this._doSelection(this._data[i], i);\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this._shiftPreviouslyPressed = true;\r\n      // if shift wasnt pressed, then we take the element checked as the first row\r\n      // incase the next click uses shift\r\n      } else if (mouseEvent && !mouseEvent.shiftKey) {\r\n        this._firstCheckboxValue = this._doSelection(row, currentSelected);\r\n        this._shiftPreviouslyPressed = false;\r\n        this._firstSelectedIndex = currentSelected;\r\n      }\r\n      this._lastSelectedIndex = currentSelected;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Overrides the onselectstart method of the document so other text on the page\r\n   * doesn't get selected when doing shift selections.\r\n   */\r\n  disableTextSelection(): void {\r\n    if (this._document) {\r\n      this._document.onselectstart = function(): boolean {\r\n        return false;\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the original onselectstart method.\r\n   */\r\n  enableTextSelection(): void {\r\n    if (this._document) {\r\n      this._document.onselectstart = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * emits the onRowClickEvent when a row is clicked\r\n   * if clickable is true and selectable is false then select the row\r\n   */\r\n  handleRowClick(row: any, index: number, event: Event): void {\r\n    if (this.clickable) {\r\n      // ignoring linting rules here because attribute it actually null or not there\r\n      // can't check for undefined\r\n      const srcElement: any = event.srcElement || event.currentTarget;\r\n      /* tslint:disable-next-line */\r\n      if (srcElement.getAttribute('stopRowClick') === null) {\r\n        this.onRowClick.emit({\r\n          row: row,\r\n          index: index,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method handle for sort click event in column headers.\r\n   */\r\n  handleSort(column: ITdDataTableColumn): void {\r\n    if (this._sortBy === column) {\r\n      this._sortOrder = this._sortOrder === TdDataTableSortingOrder.Ascending ?\r\n        TdDataTableSortingOrder.Descending : TdDataTableSortingOrder.Ascending;\r\n    } else {\r\n      this._sortBy = column;\r\n      this._sortOrder = TdDataTableSortingOrder.Ascending;\r\n    }\r\n    this.onSortChange.next({ name: this._sortBy.name, order: this._sortOrder });\r\n  }\r\n\r\n  /**\r\n   * Handle all keyup events when focusing a data table row\r\n   */\r\n  _rowKeyup(event: KeyboardEvent, row: any, index: number): void {\r\n    switch (event.keyCode) {\r\n      case ENTER:\r\n      case SPACE:\r\n        /** if user presses enter or space, the row should be selected */\r\n        if (this.selectable) {\r\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\r\n        }\r\n        break;\r\n      case UP_ARROW:\r\n        /**\r\n         * if users presses the up arrow, we focus the prev row\r\n         * unless its the first row\r\n         */\r\n        if (index > 0) {\r\n          this._rows.toArray()[index - 1].focus();\r\n        }\r\n        this.blockEvent(event);\r\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index >= 0) {\r\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\r\n        }\r\n        break;\r\n      case DOWN_ARROW:\r\n        /**\r\n         * if users presses the down arrow, we focus the next row\r\n         * unless its the last row\r\n         */\r\n        if (index < (this._rows.toArray().length - 1)) {\r\n          this._rows.toArray()[index + 1].focus();\r\n        }\r\n        this.blockEvent(event);\r\n        if (this.selectable && this.multiple && event.shiftKey && this.fromRow + index < this._data.length) {\r\n          this._doSelection(this._data[this.fromRow + index], this.fromRow + index);\r\n        }\r\n        break;\r\n      default:\r\n        // default\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to prevent the default events\r\n   */\r\n  blockEvent(event: Event): void {\r\n    event.preventDefault();\r\n  }\r\n\r\n  private _getNestedValue(name: string, value: any): string {\r\n    if (!(value instanceof Object) || !name) {\r\n      return value;\r\n    }\r\n    if (name.indexOf('.') > -1) {\r\n      let splitName: string[] = name.split(/\\.(.+)/, 2);\r\n      return this._getNestedValue(splitName[1], value[splitName[0]]);\r\n    } else {\r\n      return value[name];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Does the actual Row Selection\r\n   */\r\n  private _doSelection(row: any, rowIndex: number): boolean {\r\n    let wasSelected: boolean = this.isRowSelected(row);\r\n    if (!wasSelected) {\r\n      if (!this._multiple) {\r\n        this.clearModel();\r\n      }\r\n      this.value.push(row);\r\n    } else {\r\n      // compare items by [compareWith] function\r\n      row = this.value.filter((val: any) => {\r\n        return this.compareWith(row, val);\r\n      })[0];\r\n      let index: number = this.value.indexOf(row);\r\n      if (index > -1) {\r\n        this.value.splice(index, 1);\r\n      }\r\n    }\r\n    this._calculateCheckboxState();\r\n    this.onRowSelect.emit({row: row, index: rowIndex, selected: !wasSelected});\r\n    this.onChange(this.value);\r\n    return !wasSelected;\r\n  }\r\n\r\n  /**\r\n   * Calculate all the state of all checkboxes\r\n   */\r\n  private _calculateCheckboxState(): void {\r\n    if (this._data) {\r\n      this._allSelected = typeof this._data.find((d: any) => !this.isRowSelected(d)) === 'undefined';\r\n      this._indeterminate = false;\r\n      for (let row of this._data) {\r\n        if (!this.isRowSelected(row)) {\r\n          continue;\r\n        }\r\n        this._indeterminate = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates the widths for columns and cells depending on content\r\n   */\r\n  private _calculateWidths(): void {\r\n    if (this._colElements && this._colElements.length) {\r\n      this._widths = [];\r\n      this._colElements.forEach((col: TdDataTableColumnComponent, index: number) => {\r\n        this._adjustColumnWidth(index, this._calculateWidth());\r\n      });\r\n      this._adjustColumnWidhts();\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjusts columns after calculation to see if they need to be recalculated.\r\n   */\r\n  private _adjustColumnWidhts(): void {\r\n    let fixedTotalWidth: number = 0;\r\n    // get the number of total columns that have flexible widths (not fixed or hidden)\r\n    let flexibleWidths: number = this._widths.filter((width: IInternalColumnWidth, index: number) => {\r\n      if (this.columns[index].hidden) {\r\n        return false;\r\n      }\r\n      if (width.limit || width.max || width.min) {\r\n        fixedTotalWidth += width.value;\r\n      }\r\n      return !width.limit && !width.max && !width.min;\r\n    }).length;\r\n    // calculate how much pixes are left that could be spread across\r\n    // the flexible columns\r\n    let recalculateHostWidth: number = 0;\r\n    if (fixedTotalWidth < this.hostWidth) {\r\n      recalculateHostWidth = this.hostWidth - fixedTotalWidth;\r\n    }\r\n    // if we have flexible columns and pixels to spare on them\r\n    // we try and spread the pixels across them\r\n    if (flexibleWidths && recalculateHostWidth) {\r\n      let newValue: number = Math.floor(recalculateHostWidth / flexibleWidths);\r\n      let adjustedNumber: number = 0;\r\n      // adjust the column widths with the spread pixels\r\n      this._widths.forEach((colWidth: IInternalColumnWidth) => {\r\n        if (this._widths[colWidth.index].max && this._widths[colWidth.index].value > newValue ||\r\n            this._widths[colWidth.index].min && this._widths[colWidth.index].value < newValue ||\r\n            !this._widths[colWidth.index].limit) {\r\n          this._adjustColumnWidth(colWidth.index, newValue);\r\n          adjustedNumber++;\r\n        }\r\n      });\r\n      // if there are still columns that need to be recalculated, we start over\r\n      let newFlexibleWidths: number = this._widths.filter((width: IInternalColumnWidth) => {\r\n        return !width.limit && !width.max;\r\n      }).length;\r\n      if (newFlexibleWidths !== adjustedNumber && newFlexibleWidths !== flexibleWidths) {\r\n        this._adjustColumnWidhts();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjusts a single column to see if it can be recalculated\r\n   */\r\n  private _adjustColumnWidth(index: number, value: number): void {\r\n    this._widths[index] = {\r\n      value: value,\r\n      index: index,\r\n      limit: false,\r\n      min: false,\r\n      max: false,\r\n    };\r\n    // flag to see if we need to skip the min width projection\r\n    // depending if a width or min width has been provided\r\n    let skipMinWidthProjection: boolean = false;\r\n    if (this.columns[index]) {\r\n      // if the provided width has min/max, then we check to see if we need to set it\r\n      if (typeof this.columns[index].width === 'object') {\r\n        let widthOpts: ITdDataTableColumnWidth = <ITdDataTableColumnWidth>this.columns[index].width;\r\n        // if the column width is less than the configured min, we override it\r\n        skipMinWidthProjection = (widthOpts && !!widthOpts.min);\r\n        if (widthOpts && widthOpts.min >= this._widths[index].value) {\r\n          this._widths[index].value = widthOpts.min;\r\n          this._widths[index].min = true;\r\n        // if the column width is more than the configured max, we override it\r\n        } else if (widthOpts && widthOpts.max <= this._widths[index].value) {\r\n          this._widths[index].value = widthOpts.max;\r\n          this._widths[index].max = true;\r\n        }\r\n      // if it has a fixed width, then we just set it\r\n      } else if (typeof this.columns[index].width === 'number') {\r\n        this._widths[index].value = <number>this.columns[index].width;\r\n        skipMinWidthProjection = this._widths[index].limit = true;\r\n      }\r\n    }\r\n    // if there wasn't any width or min width provided, we set a min to what the column width min should be\r\n    if (!skipMinWidthProjection &&\r\n        this._widths[index].value < this._colElements.toArray()[index].projectedWidth) {\r\n      this._widths[index].value = this._colElements.toArray()[index].projectedWidth;\r\n      this._widths[index].min = true;\r\n      this._widths[index].limit = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generic method to calculate column width\r\n   */\r\n  private _calculateWidth(): number {\r\n    let renderedColumns: ITdDataTableColumn[] = this.columns.filter((col: ITdDataTableColumn) => !col.hidden);\r\n    return Math.floor(this.hostWidth / renderedColumns.length);\r\n  }\r\n\r\n  /**\r\n   * Method to calculate the rows to be rendered in the viewport\r\n   */\r\n  private _calculateVirtualRows(): void {\r\n    let scrolledRows: number = 0;\r\n    if (this._data) {\r\n      this._totalHeight = 0;\r\n      let rowHeightSum: number = 0;\r\n      // loop through all rows to see if we have their height cached\r\n      // and sum them all to calculate the total height\r\n      this._data.forEach((d: any, i: number) => {\r\n        // iterate through all rows at first and assume all\r\n        // rows are the same height as the first one\r\n        if (!this._rowHeightCache[i]) {\r\n          this._rowHeightCache[i] = this._rowHeightCache[0] || TD_VIRTUAL_DEFAULT_ROW_HEIGHT;\r\n        }\r\n        rowHeightSum += this._rowHeightCache[i];\r\n        // check how many rows have been scrolled\r\n        if (this._scrollVerticalOffset - rowHeightSum > 0) {\r\n          scrolledRows++;\r\n        }\r\n      });\r\n      this._totalHeight = rowHeightSum;\r\n      // set the initial row to be rendered taking into account the row offset\r\n      let fromRow: number = scrolledRows - TD_VIRTUAL_OFFSET;\r\n      this._fromRow = fromRow > 0 ? fromRow : 0;\r\n\r\n      let hostHeight: number = this._hostHeight;\r\n      let index: number = 0;\r\n      // calculate how many rows can fit in the viewport\r\n      while (hostHeight > 0) {\r\n        hostHeight -= this._rowHeightCache[this.fromRow + index];\r\n        index++;\r\n      }\r\n      // set the last row to be rendered taking into account the row offset\r\n      let range: number = (index - 1) + (TD_VIRTUAL_OFFSET * 2);\r\n      let toRow: number = range + this.fromRow;\r\n      // if last row is greater than the total length, then we use the total length\r\n      if (isFinite(toRow) && toRow > this._data.length) {\r\n        toRow = this._data.length;\r\n      } else if (!isFinite(toRow)) {\r\n        toRow = TD_VIRTUAL_OFFSET;\r\n      }\r\n      this._toRow = toRow;\r\n    } else {\r\n      this._totalHeight = 0;\r\n      this._fromRow = 0;\r\n      this._toRow = 0;\r\n    }\r\n\r\n    let offset: number = 0;\r\n    // calculate the proper offset depending on how many rows have been scrolled\r\n    if (scrolledRows > TD_VIRTUAL_OFFSET) {\r\n      for (let index: number = 0; index < this.fromRow; index++) {\r\n        offset += this._rowHeightCache[index];\r\n      }\r\n    }\r\n\r\n    this._offsetTransform = this._domSanitizer.bypassSecurityTrustStyle('translateY(' + (offset - this.totalHeight) + 'px)');\r\n    if (this._data) {\r\n      this._virtualData = this.data.slice(this.fromRow, this.toRow);\r\n    }\r\n    // mark for check at the end of the queue so we are sure\r\n    // that the changes will be marked\r\n    Promise.resolve().then(() => {\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n}\r\n",
    "import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\r\n\r\n@Directive({selector: '[tdDataTableTemplate]ng-template'})\r\nexport class TdDataTableTemplateDirective extends TemplatePortalDirective {\r\n\r\n  @Input() tdDataTableTemplate: string;\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n",
    "import { Component, Input, Output, Renderer2, ElementRef, ContentChildren, QueryList, HostListener } from '@angular/core';\r\n\r\nimport { TdDataTableCellComponent } from '../data-table-cell/data-table-cell.component';\r\nimport { TdDataTableColumnComponent } from '../data-table-column/data-table-column.component';\r\n\r\n@Component({\r\n  /* tslint:disable-next-line */\r\n  selector: 'tr[td-data-table-column-row]',\r\n  styles: [`:host{border-bottom-style:solid;border-bottom-width:1px}:host.td-data-table-row{height:48px}:host.td-data-table-column-row{height:56px}`],\r\n  template: `<ng-content></ng-content>`,\r\n})\r\nexport class TdDataTableColumnRowComponent {\r\n\r\n  constructor(protected _elementRef: ElementRef, protected _renderer: Renderer2) {\r\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-column-row');\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  /* tslint:disable-next-line */\r\n  selector: 'tr[td-data-table-row]',\r\n  styles: [`:host{border-bottom-style:solid;border-bottom-width:1px}:host.td-data-table-row{height:48px}:host.td-data-table-column-row{height:56px}`],\r\n  template: `<ng-content></ng-content>`,\r\n})\r\nexport class TdDataTableRowComponent {\r\n\r\n  private _selected: boolean = false;\r\n\r\n  @Input('selected')\r\n  set selected(selected: boolean) {\r\n    if (selected) {\r\n      this._renderer.addClass(this._elementRef.nativeElement, 'td-selected');\r\n    } else {\r\n      this._renderer.removeClass(this._elementRef.nativeElement, 'td-selected');\r\n    }\r\n    this._selected = selected;\r\n  }\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  get height(): number {\r\n    let height: number = 48;\r\n    if (this._elementRef.nativeElement) {\r\n      height = (<HTMLElement>this._elementRef.nativeElement).getBoundingClientRect().height;\r\n    }\r\n    return height;\r\n  }\r\n\r\n  constructor(private _elementRef: ElementRef, private _renderer: Renderer2) {\r\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-data-table-row');\r\n  }\r\n\r\n  /**\r\n   * Listening to click event to explicitly focus the row element.\r\n   */\r\n  @HostListener('click')\r\n  clickListener(): void {\r\n    this.focus();\r\n  }\r\n\r\n  focus(): void {\r\n    this._elementRef.nativeElement.focus();\r\n  }\r\n\r\n}\r\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "MatPseudoCheckboxModule",
    "MatIconModule",
    "MatTooltipModule",
    "MatCheckboxModule",
    "CommonModule",
    "NgModule",
    "Optional",
    "SkipSelf",
    "Injectable",
    "Renderer2",
    "ElementRef",
    "Component",
    "HostBinding",
    "Input",
    "HostListener",
    "Output",
    "ViewChild",
    "EventEmitter",
    "ViewChildren",
    "ContentChildren",
    "ChangeDetectorRef",
    "DomSanitizer",
    "Inject",
    "DOCUMENT",
    "ChangeDetectionStrategy",
    "forwardRef",
    "NG_VALUE_ACCESSOR",
    "tslib_1.__values",
    "DOWN_ARROW",
    "UP_ARROW",
    "SPACE",
    "ENTER",
    "debounceTime",
    "coerceBooleanProperty",
    "Subject",
    "tslib_1.__extends",
    "mixinControlValueAccessor",
    "ViewContainerRef",
    "TemplateRef",
    "Directive",
    "TemplatePortalDirective"
  ],
  "mappings": "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"
}
